ARM GAS  /tmp/ccubbC7i.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.my_pwm_start,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	my_pwm_start:
  23              	.LFB37:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/ccubbC7i.s 			page 2


  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32l0xx_hal.h"
  42:Src/main.c    **** #include "tim.h"
  43:Src/main.c    **** #include "gpio.h"
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** static void my_pwm_start(void);
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   *
  71:Src/main.c    ****   * @retval None
  72:Src/main.c    ****   */
  73:Src/main.c    **** int main(void)
  74:Src/main.c    **** {
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE END 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Configure the system clock */
  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccubbC7i.s 			page 3


  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   MX_TIM2_Init();
  98:Src/main.c    ****   MX_TIM21_Init();
  99:Src/main.c    ****   /* USER CODE BEGIN 2 */
 100:Src/main.c    ****   HAL_PWREx_EnableLowPowerRunMode();
 101:Src/main.c    ****   my_pwm_start ();
 102:Src/main.c    ****   /* USER CODE END 2 */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Infinite loop */
 105:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 106:Src/main.c    ****   while (1)
 107:Src/main.c    ****   {
 108:Src/main.c    ****   __HAL_FLASH_SLEEP_POWERDOWN_ENABLE();
 109:Src/main.c    ****   HAL_PWR_EnterSLEEPMode(PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFE);
 110:Src/main.c    ****   HAL_GPIO_TogglePin (GPIOA, R1_Pin);
 111:Src/main.c    ****   
 112:Src/main.c    **** 
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END WHILE */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN 3 */
 117:Src/main.c    **** 
 118:Src/main.c    ****   }
 119:Src/main.c    ****   /* USER CODE END 3 */
 120:Src/main.c    **** 
 121:Src/main.c    **** }
 122:Src/main.c    **** 
 123:Src/main.c    **** /**
 124:Src/main.c    ****   * @brief System Clock Configuration
 125:Src/main.c    ****   * @retval None
 126:Src/main.c    ****   */
 127:Src/main.c    **** void SystemClock_Config(void)
 128:Src/main.c    **** {
 129:Src/main.c    **** 
 130:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 131:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 132:Src/main.c    **** 
 133:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 134:Src/main.c    ****     */
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 136:Src/main.c    **** 
 137:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****     */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 140:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 142:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 144:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 145:Src/main.c    ****   {
 146:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 147:Src/main.c    ****   }
 148:Src/main.c    **** 
ARM GAS  /tmp/ccubbC7i.s 			page 4


 149:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 150:Src/main.c    ****     */
 151:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 154:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 155:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 156:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 157:Src/main.c    **** 
 158:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 159:Src/main.c    ****   {
 160:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 161:Src/main.c    ****   }
 162:Src/main.c    **** 
 163:Src/main.c    ****     /**Configure the Systick interrupt time 
 164:Src/main.c    ****     */
 165:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Configure the Systick 
 168:Src/main.c    ****     */
 169:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 172:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 173:Src/main.c    **** }
 174:Src/main.c    **** 
 175:Src/main.c    **** /* USER CODE BEGIN 4 */
 176:Src/main.c    **** void my_pwm_start ()
 177:Src/main.c    **** {
  25              		.loc 1 177 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 10B5     		push	{r4, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
 178:Src/main.c    ****     HAL_TIM_PWM_Start (&htim2, TIM_CHANNEL_1);
  34              		.loc 1 178 0
  35 0002 0021     		movs	r1, #0
  36 0004 0348     		ldr	r0, .L2
  37 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  38              	.LVL0:
 179:Src/main.c    ****     HAL_TIM_PWM_Start (&htim21, TIM_CHANNEL_1);
  39              		.loc 1 179 0
  40 000a 0021     		movs	r1, #0
  41 000c 0248     		ldr	r0, .L2+4
  42 000e FFF7FEFF 		bl	HAL_TIM_PWM_Start
  43              	.LVL1:
 180:Src/main.c    **** }
  44              		.loc 1 180 0
  45              		@ sp needed
  46 0012 10BD     		pop	{r4, pc}
  47              	.L3:
  48              		.align	2
  49              	.L2:
ARM GAS  /tmp/ccubbC7i.s 			page 5


  50 0014 00000000 		.word	htim2
  51 0018 00000000 		.word	htim21
  52              		.cfi_endproc
  53              	.LFE37:
  55              		.section	.text._Error_Handler,"ax",%progbits
  56              		.align	1
  57              		.global	_Error_Handler
  58              		.syntax unified
  59              		.code	16
  60              		.thumb_func
  61              		.fpu softvfp
  63              	_Error_Handler:
  64              	.LFB38:
 181:Src/main.c    **** 
 182:Src/main.c    **** 
 183:Src/main.c    **** /* USER CODE END 4 */
 184:Src/main.c    **** 
 185:Src/main.c    **** /**
 186:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 187:Src/main.c    ****   * @param  file: The file name as string.
 188:Src/main.c    ****   * @param  line: The line in file as a number.
 189:Src/main.c    ****   * @retval None
 190:Src/main.c    ****   */
 191:Src/main.c    **** void _Error_Handler(char *file, int line)
 192:Src/main.c    **** {
  65              		.loc 1 192 0
  66              		.cfi_startproc
  67              		@ Volatile: function does not return.
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71              	.LVL2:
  72              	.L5:
  73 0000 FEE7     		b	.L5
  74              		.cfi_endproc
  75              	.LFE38:
  77              		.global	__aeabi_uidiv
  78              		.section	.text.SystemClock_Config,"ax",%progbits
  79              		.align	1
  80              		.global	SystemClock_Config
  81              		.syntax unified
  82              		.code	16
  83              		.thumb_func
  84              		.fpu softvfp
  86              	SystemClock_Config:
  87              	.LFB36:
 128:Src/main.c    **** 
  88              		.loc 1 128 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 72
  91              		@ frame_needed = 0, uses_anonymous_args = 0
 128:Src/main.c    **** 
  92              		.loc 1 128 0
  93 0000 00B5     		push	{lr}
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 4
  96              		.cfi_offset 14, -4
ARM GAS  /tmp/ccubbC7i.s 			page 6


  97 0002 93B0     		sub	sp, sp, #76
  98              	.LCFI2:
  99              		.cfi_def_cfa_offset 80
 135:Src/main.c    **** 
 100              		.loc 1 135 0
 101 0004 1E4A     		ldr	r2, .L11
 102 0006 1168     		ldr	r1, [r2]
 103 0008 C023     		movs	r3, #192
 104 000a 5B01     		lsls	r3, r3, #5
 105 000c 0B43     		orrs	r3, r1
 106 000e 1360     		str	r3, [r2]
 139:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 107              		.loc 1 139 0
 108 0010 1023     		movs	r3, #16
 109 0012 0593     		str	r3, [sp, #20]
 140:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 110              		.loc 1 140 0
 111 0014 0F3B     		subs	r3, r3, #15
 112 0016 0B93     		str	r3, [sp, #44]
 141:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 113              		.loc 1 141 0
 114 0018 0023     		movs	r3, #0
 115 001a 0C93     		str	r3, [sp, #48]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 116              		.loc 1 142 0
 117 001c C022     		movs	r2, #192
 118 001e 1202     		lsls	r2, r2, #8
 119 0020 0D92     		str	r2, [sp, #52]
 143:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 120              		.loc 1 143 0
 121 0022 0E93     		str	r3, [sp, #56]
 144:Src/main.c    ****   {
 122              		.loc 1 144 0
 123 0024 05A8     		add	r0, sp, #20
 124 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 125              	.LVL3:
 126 002a 0028     		cmp	r0, #0
 127 002c 1FD1     		bne	.L9
 151:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 128              		.loc 1 151 0
 129 002e 0F23     		movs	r3, #15
 130 0030 0093     		str	r3, [sp]
 153:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 131              		.loc 1 153 0
 132 0032 0023     		movs	r3, #0
 133 0034 0193     		str	r3, [sp, #4]
 154:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 134              		.loc 1 154 0
 135 0036 0293     		str	r3, [sp, #8]
 155:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 136              		.loc 1 155 0
 137 0038 0393     		str	r3, [sp, #12]
 156:Src/main.c    **** 
 138              		.loc 1 156 0
 139 003a 0493     		str	r3, [sp, #16]
 158:Src/main.c    ****   {
 140              		.loc 1 158 0
ARM GAS  /tmp/ccubbC7i.s 			page 7


 141 003c 0021     		movs	r1, #0
 142 003e 6846     		mov	r0, sp
 143 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 144              	.LVL4:
 145 0044 0028     		cmp	r0, #0
 146 0046 16D1     		bne	.L10
 165:Src/main.c    **** 
 147              		.loc 1 165 0
 148 0048 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 149              	.LVL5:
 150 004c FA21     		movs	r1, #250
 151 004e 8900     		lsls	r1, r1, #2
 152 0050 FFF7FEFF 		bl	__aeabi_uidiv
 153              	.LVL6:
 154 0054 FFF7FEFF 		bl	HAL_SYSTICK_Config
 155              	.LVL7:
 169:Src/main.c    **** 
 156              		.loc 1 169 0
 157 0058 0420     		movs	r0, #4
 158 005a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 159              	.LVL8:
 172:Src/main.c    **** }
 160              		.loc 1 172 0
 161 005e 0022     		movs	r2, #0
 162 0060 0021     		movs	r1, #0
 163 0062 0120     		movs	r0, #1
 164 0064 4042     		rsbs	r0, r0, #0
 165 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 166              	.LVL9:
 173:Src/main.c    **** 
 167              		.loc 1 173 0
 168 006a 13B0     		add	sp, sp, #76
 169              		@ sp needed
 170 006c 00BD     		pop	{pc}
 171              	.L9:
 146:Src/main.c    ****   }
 172              		.loc 1 146 0
 173 006e 9221     		movs	r1, #146
 174 0070 0448     		ldr	r0, .L11+4
 175 0072 FFF7FEFF 		bl	_Error_Handler
 176              	.LVL10:
 177              	.L10:
 160:Src/main.c    ****   }
 178              		.loc 1 160 0
 179 0076 A021     		movs	r1, #160
 180 0078 0248     		ldr	r0, .L11+4
 181 007a FFF7FEFF 		bl	_Error_Handler
 182              	.LVL11:
 183              	.L12:
 184 007e C046     		.align	2
 185              	.L11:
 186 0080 00700040 		.word	1073770496
 187 0084 00000000 		.word	.LC2
 188              		.cfi_endproc
 189              	.LFE36:
 191              		.section	.text.main,"ax",%progbits
 192              		.align	1
ARM GAS  /tmp/ccubbC7i.s 			page 8


 193              		.global	main
 194              		.syntax unified
 195              		.code	16
 196              		.thumb_func
 197              		.fpu softvfp
 199              	main:
 200              	.LFB35:
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
 201              		.loc 1 74 0
 202              		.cfi_startproc
 203              		@ Volatile: function does not return.
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206 0000 10B5     		push	{r4, lr}
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
  82:Src/main.c    **** 
 211              		.loc 1 82 0
 212 0002 FFF7FEFF 		bl	HAL_Init
 213              	.LVL12:
  89:Src/main.c    **** 
 214              		.loc 1 89 0
 215 0006 FFF7FEFF 		bl	SystemClock_Config
 216              	.LVL13:
  96:Src/main.c    ****   MX_TIM2_Init();
 217              		.loc 1 96 0
 218 000a FFF7FEFF 		bl	MX_GPIO_Init
 219              	.LVL14:
  97:Src/main.c    ****   MX_TIM21_Init();
 220              		.loc 1 97 0
 221 000e FFF7FEFF 		bl	MX_TIM2_Init
 222              	.LVL15:
  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
 223              		.loc 1 98 0
 224 0012 FFF7FEFF 		bl	MX_TIM21_Init
 225              	.LVL16:
 100:Src/main.c    ****   my_pwm_start ();
 226              		.loc 1 100 0
 227 0016 FFF7FEFF 		bl	HAL_PWREx_EnableLowPowerRunMode
 228              	.LVL17:
 101:Src/main.c    ****   /* USER CODE END 2 */
 229              		.loc 1 101 0
 230 001a FFF7FEFF 		bl	my_pwm_start
 231              	.LVL18:
 232              	.L14:
 108:Src/main.c    ****   HAL_PWR_EnterSLEEPMode(PWR_LOWPOWERREGULATOR_ON, PWR_SLEEPENTRY_WFE);
 233              		.loc 1 108 0 discriminator 1
 234 001e 074A     		ldr	r2, .L15
 235 0020 1368     		ldr	r3, [r2]
 236 0022 0821     		movs	r1, #8
 237 0024 0B43     		orrs	r3, r1
 238 0026 1360     		str	r3, [r2]
 109:Src/main.c    ****   HAL_GPIO_TogglePin (GPIOA, R1_Pin);
 239              		.loc 1 109 0 discriminator 1
 240 0028 0639     		subs	r1, r1, #6
ARM GAS  /tmp/ccubbC7i.s 			page 9


 241 002a 0120     		movs	r0, #1
 242 002c FFF7FEFF 		bl	HAL_PWR_EnterSLEEPMode
 243              	.LVL19:
 110:Src/main.c    ****   
 244              		.loc 1 110 0 discriminator 1
 245 0030 0221     		movs	r1, #2
 246 0032 A020     		movs	r0, #160
 247 0034 C005     		lsls	r0, r0, #23
 248 0036 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 249              	.LVL20:
 250 003a F0E7     		b	.L14
 251              	.L16:
 252              		.align	2
 253              	.L15:
 254 003c 00200240 		.word	1073881088
 255              		.cfi_endproc
 256              	.LFE35:
 258              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 259              		.align	2
 260              	.LC2:
 261 0000 5372632F 		.ascii	"Src/main.c\000"
 261      6D61696E 
 261      2E6300
 262              		.text
 263              	.Letext0:
 264              		.file 2 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_type
 265              		.file 3 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 266              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 267              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 268              		.file 6 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 269              		.file 7 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 270              		.file 8 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.
 271              		.file 9 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 272              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 273              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 274              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 275              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 276              		.file 14 "Inc/tim.h"
 277              		.file 15 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 278              		.file 16 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 279              		.file 17 "Inc/gpio.h"
 280              		.file 18 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr_ex.h"
 281              		.file 19 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr.h"
 282              		.file 20 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
ARM GAS  /tmp/ccubbC7i.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccubbC7i.s:16     .text.my_pwm_start:0000000000000000 $t
     /tmp/ccubbC7i.s:22     .text.my_pwm_start:0000000000000000 my_pwm_start
     /tmp/ccubbC7i.s:50     .text.my_pwm_start:0000000000000014 $d
     /tmp/ccubbC7i.s:56     .text._Error_Handler:0000000000000000 $t
     /tmp/ccubbC7i.s:63     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccubbC7i.s:79     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccubbC7i.s:86     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccubbC7i.s:186    .text.SystemClock_Config:0000000000000080 $d
     /tmp/ccubbC7i.s:192    .text.main:0000000000000000 $t
     /tmp/ccubbC7i.s:199    .text.main:0000000000000000 main
     /tmp/ccubbC7i.s:254    .text.main:000000000000003c $d
     /tmp/ccubbC7i.s:259    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
htim2
htim21
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_TIM2_Init
MX_TIM21_Init
HAL_PWREx_EnableLowPowerRunMode
HAL_PWR_EnterSLEEPMode
HAL_GPIO_TogglePin
