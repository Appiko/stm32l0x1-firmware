ARM GAS  /tmp/ccQ3ICmK.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_TIM_PWM_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_TIM_PWM_MspInit:
  24              	.LFB37:
  25              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccQ3ICmK.s 			page 2


  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** /* USER CODE BEGIN 0 */
  44:Src/tim.c     **** 
  45:Src/tim.c     **** /* USER CODE END 0 */
  46:Src/tim.c     **** 
  47:Src/tim.c     **** TIM_HandleTypeDef htim2;
  48:Src/tim.c     **** TIM_HandleTypeDef htim21;
  49:Src/tim.c     **** 
  50:Src/tim.c     **** /* TIM2 init function */
  51:Src/tim.c     **** void MX_TIM2_Init(void)
  52:Src/tim.c     **** {
  53:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  54:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  55:Src/tim.c     **** 
  56:Src/tim.c     ****   htim2.Instance = TIM2;
  57:Src/tim.c     ****   htim2.Init.Prescaler = 0;
  58:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  59:Src/tim.c     ****   htim2.Init.Period = 74;
  60:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  61:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
  62:Src/tim.c     ****   {
  63:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  64:Src/tim.c     ****   }
  65:Src/tim.c     **** 
  66:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  67:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  68:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  69:Src/tim.c     ****   {
  70:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  71:Src/tim.c     ****   }
  72:Src/tim.c     **** 
  73:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  74:Src/tim.c     ****   sConfigOC.Pulse = 7;
  75:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  76:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  77:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  78:Src/tim.c     ****   {
  79:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  80:Src/tim.c     ****   }
  81:Src/tim.c     **** 
  82:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim2);
  83:Src/tim.c     **** 
  84:Src/tim.c     **** }
  85:Src/tim.c     **** /* TIM21 init function */
  86:Src/tim.c     **** void MX_TIM21_Init(void)
  87:Src/tim.c     **** {
  88:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  89:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  90:Src/tim.c     **** 
ARM GAS  /tmp/ccQ3ICmK.s 			page 3


  91:Src/tim.c     ****   htim21.Instance = TIM21;
  92:Src/tim.c     ****   htim21.Init.Prescaler = 1;
  93:Src/tim.c     ****   htim21.Init.CounterMode = TIM_COUNTERMODE_UP;
  94:Src/tim.c     ****   htim21.Init.Period = 21000;
  95:Src/tim.c     ****   htim21.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  96:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim21) != HAL_OK)
  97:Src/tim.c     ****   {
  98:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  99:Src/tim.c     ****   }
 100:Src/tim.c     **** 
 101:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 102:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 103:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim21, &sMasterConfig) != HAL_OK)
 104:Src/tim.c     ****   {
 105:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 106:Src/tim.c     ****   }
 107:Src/tim.c     **** 
 108:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 109:Src/tim.c     ****   sConfigOC.Pulse = 2100;
 110:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 111:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 112:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim21, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 113:Src/tim.c     ****   {
 114:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
 115:Src/tim.c     ****   }
 116:Src/tim.c     **** 
 117:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim21);
 118:Src/tim.c     **** 
 119:Src/tim.c     **** }
 120:Src/tim.c     **** 
 121:Src/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
 122:Src/tim.c     **** {
  26              		.loc 1 122 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 123:Src/tim.c     **** 
 124:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
  32              		.loc 1 124 0
  33 0000 0368     		ldr	r3, [r0]
  34 0002 8022     		movs	r2, #128
  35 0004 D205     		lsls	r2, r2, #23
  36 0006 9342     		cmp	r3, r2
  37 0008 03D0     		beq	.L4
 125:Src/tim.c     ****   {
 126:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 127:Src/tim.c     **** 
 128:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 129:Src/tim.c     ****     /* TIM2 clock enable */
 130:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 131:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 132:Src/tim.c     **** 
 133:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 134:Src/tim.c     ****   }
 135:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM21)
ARM GAS  /tmp/ccQ3ICmK.s 			page 4


  38              		.loc 1 135 0
  39 000a 084A     		ldr	r2, .L6
  40 000c 9342     		cmp	r3, r2
  41 000e 06D0     		beq	.L5
  42              	.L1:
 136:Src/tim.c     ****   {
 137:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspInit 0 */
 138:Src/tim.c     **** 
 139:Src/tim.c     ****   /* USER CODE END TIM21_MspInit 0 */
 140:Src/tim.c     ****     /* TIM21 clock enable */
 141:Src/tim.c     ****     __HAL_RCC_TIM21_CLK_ENABLE();
 142:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspInit 1 */
 143:Src/tim.c     **** 
 144:Src/tim.c     ****   /* USER CODE END TIM21_MspInit 1 */
 145:Src/tim.c     ****   }
 146:Src/tim.c     **** }
  43              		.loc 1 146 0
  44              		@ sp needed
  45 0010 7047     		bx	lr
  46              	.L4:
 130:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
  47              		.loc 1 130 0
  48 0012 074A     		ldr	r2, .L6+4
  49 0014 936B     		ldr	r3, [r2, #56]
  50 0016 0121     		movs	r1, #1
  51 0018 0B43     		orrs	r3, r1
  52 001a 9363     		str	r3, [r2, #56]
  53 001c F8E7     		b	.L1
  54              	.L5:
 141:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspInit 1 */
  55              		.loc 1 141 0
  56 001e 044A     		ldr	r2, .L6+4
  57 0020 536B     		ldr	r3, [r2, #52]
  58 0022 0421     		movs	r1, #4
  59 0024 0B43     		orrs	r3, r1
  60 0026 5363     		str	r3, [r2, #52]
  61              		.loc 1 146 0
  62 0028 F2E7     		b	.L1
  63              	.L7:
  64 002a C046     		.align	2
  65              	.L6:
  66 002c 00080140 		.word	1073809408
  67 0030 00100240 		.word	1073876992
  68              		.cfi_endproc
  69              	.LFE37:
  71              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  72              		.align	1
  73              		.global	HAL_TIM_MspPostInit
  74              		.syntax unified
  75              		.code	16
  76              		.thumb_func
  77              		.fpu softvfp
  79              	HAL_TIM_MspPostInit:
  80              	.LFB38:
 147:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 148:Src/tim.c     **** {
  81              		.loc 1 148 0
ARM GAS  /tmp/ccQ3ICmK.s 			page 5


  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 24
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL1:
  86 0000 00B5     		push	{lr}
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 14, -4
  90 0002 87B0     		sub	sp, sp, #28
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 32
 149:Src/tim.c     **** 
 150:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 151:Src/tim.c     ****   if(timHandle->Instance==TIM2)
  93              		.loc 1 151 0
  94 0004 0368     		ldr	r3, [r0]
  95 0006 8022     		movs	r2, #128
  96 0008 D205     		lsls	r2, r2, #23
  97 000a 9342     		cmp	r3, r2
  98 000c 04D0     		beq	.L11
 152:Src/tim.c     ****   {
 153:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 154:Src/tim.c     **** 
 155:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 0 */
 156:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 157:Src/tim.c     ****     PA0-CK_IN     ------> TIM2_CH1 
 158:Src/tim.c     ****     */
 159:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 160:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 161:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 162:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 163:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 164:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 165:Src/tim.c     **** 
 166:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 167:Src/tim.c     **** 
 168:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 1 */
 169:Src/tim.c     ****   }
 170:Src/tim.c     ****   else if(timHandle->Instance==TIM21)
  99              		.loc 1 170 0
 100 000e 114A     		ldr	r2, .L13
 101 0010 9342     		cmp	r3, r2
 102 0012 0FD0     		beq	.L12
 103              	.LVL2:
 104              	.L8:
 171:Src/tim.c     ****   {
 172:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspPostInit 0 */
 173:Src/tim.c     **** 
 174:Src/tim.c     ****   /* USER CODE END TIM21_MspPostInit 0 */
 175:Src/tim.c     ****   
 176:Src/tim.c     ****     /**TIM21 GPIO Configuration    
 177:Src/tim.c     ****     PA10     ------> TIM21_CH1 
 178:Src/tim.c     ****     */
 179:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_10;
 180:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 181:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 182:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccQ3ICmK.s 			page 6


 183:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF0_TIM21;
 184:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 185:Src/tim.c     **** 
 186:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspPostInit 1 */
 187:Src/tim.c     **** 
 188:Src/tim.c     ****   /* USER CODE END TIM21_MspPostInit 1 */
 189:Src/tim.c     ****   }
 190:Src/tim.c     **** 
 191:Src/tim.c     **** }
 105              		.loc 1 191 0
 106 0014 07B0     		add	sp, sp, #28
 107              		@ sp needed
 108 0016 00BD     		pop	{pc}
 109              	.LVL3:
 110              	.L11:
 159:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 111              		.loc 1 159 0
 112 0018 0123     		movs	r3, #1
 113 001a 0193     		str	r3, [sp, #4]
 160:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 160 0
 115 001c 0133     		adds	r3, r3, #1
 116 001e 0293     		str	r3, [sp, #8]
 161:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 117              		.loc 1 161 0
 118 0020 0022     		movs	r2, #0
 119 0022 0392     		str	r2, [sp, #12]
 162:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 120              		.loc 1 162 0
 121 0024 0492     		str	r2, [sp, #16]
 163:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 163 0
 123 0026 0593     		str	r3, [sp, #20]
 164:Src/tim.c     **** 
 124              		.loc 1 164 0
 125 0028 01A9     		add	r1, sp, #4
 126 002a A020     		movs	r0, #160
 127              	.LVL4:
 128 002c C005     		lsls	r0, r0, #23
 129 002e FFF7FEFF 		bl	HAL_GPIO_Init
 130              	.LVL5:
 131 0032 EFE7     		b	.L8
 132              	.LVL6:
 133              	.L12:
 179:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 134              		.loc 1 179 0
 135 0034 8023     		movs	r3, #128
 136 0036 DB00     		lsls	r3, r3, #3
 137 0038 0193     		str	r3, [sp, #4]
 180:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 180 0
 139 003a 0223     		movs	r3, #2
 140 003c 0293     		str	r3, [sp, #8]
 181:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 141              		.loc 1 181 0
 142 003e 0023     		movs	r3, #0
 143 0040 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccQ3ICmK.s 			page 7


 182:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF0_TIM21;
 144              		.loc 1 182 0
 145 0042 0493     		str	r3, [sp, #16]
 183:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 146              		.loc 1 183 0
 147 0044 0593     		str	r3, [sp, #20]
 184:Src/tim.c     **** 
 148              		.loc 1 184 0
 149 0046 01A9     		add	r1, sp, #4
 150 0048 A020     		movs	r0, #160
 151              	.LVL7:
 152 004a C005     		lsls	r0, r0, #23
 153 004c FFF7FEFF 		bl	HAL_GPIO_Init
 154              	.LVL8:
 155              		.loc 1 191 0
 156 0050 E0E7     		b	.L8
 157              	.L14:
 158 0052 C046     		.align	2
 159              	.L13:
 160 0054 00080140 		.word	1073809408
 161              		.cfi_endproc
 162              	.LFE38:
 164              		.section	.text.MX_TIM2_Init,"ax",%progbits
 165              		.align	1
 166              		.global	MX_TIM2_Init
 167              		.syntax unified
 168              		.code	16
 169              		.thumb_func
 170              		.fpu softvfp
 172              	MX_TIM2_Init:
 173              	.LFB35:
  52:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 174              		.loc 1 52 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 24
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 00B5     		push	{lr}
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 14, -4
 182 0002 87B0     		sub	sp, sp, #28
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 32
  56:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 185              		.loc 1 56 0
 186 0004 1C48     		ldr	r0, .L22
 187 0006 8023     		movs	r3, #128
 188 0008 DB05     		lsls	r3, r3, #23
 189 000a 0360     		str	r3, [r0]
  57:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 190              		.loc 1 57 0
 191 000c 0023     		movs	r3, #0
 192 000e 4360     		str	r3, [r0, #4]
  58:Src/tim.c     ****   htim2.Init.Period = 74;
 193              		.loc 1 58 0
 194 0010 8360     		str	r3, [r0, #8]
  59:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccQ3ICmK.s 			page 8


 195              		.loc 1 59 0
 196 0012 4A22     		movs	r2, #74
 197 0014 C260     		str	r2, [r0, #12]
  60:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 198              		.loc 1 60 0
 199 0016 0361     		str	r3, [r0, #16]
  61:Src/tim.c     ****   {
 200              		.loc 1 61 0
 201 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 202              	.LVL9:
 203 001c 0028     		cmp	r0, #0
 204 001e 1BD1     		bne	.L19
 205              	.L16:
  66:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 206              		.loc 1 66 0
 207 0020 0023     		movs	r3, #0
 208 0022 0493     		str	r3, [sp, #16]
  67:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 209              		.loc 1 67 0
 210 0024 0593     		str	r3, [sp, #20]
  68:Src/tim.c     ****   {
 211              		.loc 1 68 0
 212 0026 04A9     		add	r1, sp, #16
 213 0028 1348     		ldr	r0, .L22
 214 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 215              	.LVL10:
 216 002e 0028     		cmp	r0, #0
 217 0030 17D1     		bne	.L20
 218              	.L17:
  73:Src/tim.c     ****   sConfigOC.Pulse = 7;
 219              		.loc 1 73 0
 220 0032 6023     		movs	r3, #96
 221 0034 0093     		str	r3, [sp]
  74:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 222              		.loc 1 74 0
 223 0036 593B     		subs	r3, r3, #89
 224 0038 0193     		str	r3, [sp, #4]
  75:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 225              		.loc 1 75 0
 226 003a 0023     		movs	r3, #0
 227 003c 0293     		str	r3, [sp, #8]
  76:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 228              		.loc 1 76 0
 229 003e 0393     		str	r3, [sp, #12]
  77:Src/tim.c     ****   {
 230              		.loc 1 77 0
 231 0040 0022     		movs	r2, #0
 232 0042 6946     		mov	r1, sp
 233 0044 0C48     		ldr	r0, .L22
 234 0046 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 235              	.LVL11:
 236 004a 0028     		cmp	r0, #0
 237 004c 0ED1     		bne	.L21
 238              	.L18:
  82:Src/tim.c     **** 
 239              		.loc 1 82 0
 240 004e 0A48     		ldr	r0, .L22
ARM GAS  /tmp/ccQ3ICmK.s 			page 9


 241 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 242              	.LVL12:
  84:Src/tim.c     **** /* TIM21 init function */
 243              		.loc 1 84 0
 244 0054 07B0     		add	sp, sp, #28
 245              		@ sp needed
 246 0056 00BD     		pop	{pc}
 247              	.L19:
  63:Src/tim.c     ****   }
 248              		.loc 1 63 0
 249 0058 3F21     		movs	r1, #63
 250 005a 0848     		ldr	r0, .L22+4
 251 005c FFF7FEFF 		bl	_Error_Handler
 252              	.LVL13:
 253 0060 DEE7     		b	.L16
 254              	.L20:
  70:Src/tim.c     ****   }
 255              		.loc 1 70 0
 256 0062 4621     		movs	r1, #70
 257 0064 0548     		ldr	r0, .L22+4
 258 0066 FFF7FEFF 		bl	_Error_Handler
 259              	.LVL14:
 260 006a E2E7     		b	.L17
 261              	.L21:
  79:Src/tim.c     ****   }
 262              		.loc 1 79 0
 263 006c 4F21     		movs	r1, #79
 264 006e 0348     		ldr	r0, .L22+4
 265 0070 FFF7FEFF 		bl	_Error_Handler
 266              	.LVL15:
 267 0074 EBE7     		b	.L18
 268              	.L23:
 269 0076 C046     		.align	2
 270              	.L22:
 271 0078 00000000 		.word	htim2
 272 007c 00000000 		.word	.LC1
 273              		.cfi_endproc
 274              	.LFE35:
 276              		.section	.text.MX_TIM21_Init,"ax",%progbits
 277              		.align	1
 278              		.global	MX_TIM21_Init
 279              		.syntax unified
 280              		.code	16
 281              		.thumb_func
 282              		.fpu softvfp
 284              	MX_TIM21_Init:
 285              	.LFB36:
  87:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
 286              		.loc 1 87 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 24
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 00B5     		push	{lr}
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 4
 293              		.cfi_offset 14, -4
 294 0002 87B0     		sub	sp, sp, #28
ARM GAS  /tmp/ccQ3ICmK.s 			page 10


 295              	.LCFI5:
 296              		.cfi_def_cfa_offset 32
  91:Src/tim.c     ****   htim21.Init.Prescaler = 1;
 297              		.loc 1 91 0
 298 0004 1C48     		ldr	r0, .L31
 299 0006 1D4B     		ldr	r3, .L31+4
 300 0008 0360     		str	r3, [r0]
  92:Src/tim.c     ****   htim21.Init.CounterMode = TIM_COUNTERMODE_UP;
 301              		.loc 1 92 0
 302 000a 0123     		movs	r3, #1
 303 000c 4360     		str	r3, [r0, #4]
  93:Src/tim.c     ****   htim21.Init.Period = 21000;
 304              		.loc 1 93 0
 305 000e 0023     		movs	r3, #0
 306 0010 8360     		str	r3, [r0, #8]
  94:Src/tim.c     ****   htim21.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 307              		.loc 1 94 0
 308 0012 1B4A     		ldr	r2, .L31+8
 309 0014 C260     		str	r2, [r0, #12]
  95:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim21) != HAL_OK)
 310              		.loc 1 95 0
 311 0016 0361     		str	r3, [r0, #16]
  96:Src/tim.c     ****   {
 312              		.loc 1 96 0
 313 0018 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 314              	.LVL16:
 315 001c 0028     		cmp	r0, #0
 316 001e 1BD1     		bne	.L28
 317              	.L25:
 101:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 318              		.loc 1 101 0
 319 0020 0023     		movs	r3, #0
 320 0022 0493     		str	r3, [sp, #16]
 102:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim21, &sMasterConfig) != HAL_OK)
 321              		.loc 1 102 0
 322 0024 0593     		str	r3, [sp, #20]
 103:Src/tim.c     ****   {
 323              		.loc 1 103 0
 324 0026 04A9     		add	r1, sp, #16
 325 0028 1348     		ldr	r0, .L31
 326 002a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 327              	.LVL17:
 328 002e 0028     		cmp	r0, #0
 329 0030 17D1     		bne	.L29
 330              	.L26:
 108:Src/tim.c     ****   sConfigOC.Pulse = 2100;
 331              		.loc 1 108 0
 332 0032 6023     		movs	r3, #96
 333 0034 0093     		str	r3, [sp]
 109:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 334              		.loc 1 109 0
 335 0036 134B     		ldr	r3, .L31+12
 336 0038 0193     		str	r3, [sp, #4]
 110:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 337              		.loc 1 110 0
 338 003a 0023     		movs	r3, #0
 339 003c 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccQ3ICmK.s 			page 11


 111:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim21, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 340              		.loc 1 111 0
 341 003e 0393     		str	r3, [sp, #12]
 112:Src/tim.c     ****   {
 342              		.loc 1 112 0
 343 0040 0022     		movs	r2, #0
 344 0042 6946     		mov	r1, sp
 345 0044 0C48     		ldr	r0, .L31
 346 0046 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 347              	.LVL18:
 348 004a 0028     		cmp	r0, #0
 349 004c 0ED1     		bne	.L30
 350              	.L27:
 117:Src/tim.c     **** 
 351              		.loc 1 117 0
 352 004e 0A48     		ldr	r0, .L31
 353 0050 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 354              	.LVL19:
 119:Src/tim.c     **** 
 355              		.loc 1 119 0
 356 0054 07B0     		add	sp, sp, #28
 357              		@ sp needed
 358 0056 00BD     		pop	{pc}
 359              	.L28:
  98:Src/tim.c     ****   }
 360              		.loc 1 98 0
 361 0058 6221     		movs	r1, #98
 362 005a 0B48     		ldr	r0, .L31+16
 363 005c FFF7FEFF 		bl	_Error_Handler
 364              	.LVL20:
 365 0060 DEE7     		b	.L25
 366              	.L29:
 105:Src/tim.c     ****   }
 367              		.loc 1 105 0
 368 0062 6921     		movs	r1, #105
 369 0064 0848     		ldr	r0, .L31+16
 370 0066 FFF7FEFF 		bl	_Error_Handler
 371              	.LVL21:
 372 006a E2E7     		b	.L26
 373              	.L30:
 114:Src/tim.c     ****   }
 374              		.loc 1 114 0
 375 006c 7221     		movs	r1, #114
 376 006e 0648     		ldr	r0, .L31+16
 377 0070 FFF7FEFF 		bl	_Error_Handler
 378              	.LVL22:
 379 0074 EBE7     		b	.L27
 380              	.L32:
 381 0076 C046     		.align	2
 382              	.L31:
 383 0078 00000000 		.word	htim21
 384 007c 00080140 		.word	1073809408
 385 0080 08520000 		.word	21000
 386 0084 34080000 		.word	2100
 387 0088 00000000 		.word	.LC1
 388              		.cfi_endproc
 389              	.LFE36:
ARM GAS  /tmp/ccQ3ICmK.s 			page 12


 391              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 392              		.align	1
 393              		.global	HAL_TIM_PWM_MspDeInit
 394              		.syntax unified
 395              		.code	16
 396              		.thumb_func
 397              		.fpu softvfp
 399              	HAL_TIM_PWM_MspDeInit:
 400              	.LFB39:
 192:Src/tim.c     **** 
 193:Src/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 194:Src/tim.c     **** {
 401              		.loc 1 194 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 406              	.LVL23:
 195:Src/tim.c     **** 
 196:Src/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
 407              		.loc 1 196 0
 408 0000 0368     		ldr	r3, [r0]
 409 0002 8022     		movs	r2, #128
 410 0004 D205     		lsls	r2, r2, #23
 411 0006 9342     		cmp	r3, r2
 412 0008 03D0     		beq	.L36
 197:Src/tim.c     ****   {
 198:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 199:Src/tim.c     **** 
 200:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 201:Src/tim.c     ****     /* Peripheral clock disable */
 202:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 203:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 204:Src/tim.c     **** 
 205:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 206:Src/tim.c     ****   }
 207:Src/tim.c     ****   else if(tim_pwmHandle->Instance==TIM21)
 413              		.loc 1 207 0
 414 000a 084A     		ldr	r2, .L38
 415 000c 9342     		cmp	r3, r2
 416 000e 06D0     		beq	.L37
 417              	.L33:
 208:Src/tim.c     ****   {
 209:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspDeInit 0 */
 210:Src/tim.c     **** 
 211:Src/tim.c     ****   /* USER CODE END TIM21_MspDeInit 0 */
 212:Src/tim.c     ****     /* Peripheral clock disable */
 213:Src/tim.c     ****     __HAL_RCC_TIM21_CLK_DISABLE();
 214:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspDeInit 1 */
 215:Src/tim.c     **** 
 216:Src/tim.c     ****   /* USER CODE END TIM21_MspDeInit 1 */
 217:Src/tim.c     ****   }
 218:Src/tim.c     **** } 
 418              		.loc 1 218 0
 419              		@ sp needed
 420 0010 7047     		bx	lr
 421              	.L36:
ARM GAS  /tmp/ccQ3ICmK.s 			page 13


 202:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 422              		.loc 1 202 0
 423 0012 074A     		ldr	r2, .L38+4
 424 0014 936B     		ldr	r3, [r2, #56]
 425 0016 0121     		movs	r1, #1
 426 0018 8B43     		bics	r3, r1
 427 001a 9363     		str	r3, [r2, #56]
 428 001c F8E7     		b	.L33
 429              	.L37:
 213:Src/tim.c     ****   /* USER CODE BEGIN TIM21_MspDeInit 1 */
 430              		.loc 1 213 0
 431 001e 044A     		ldr	r2, .L38+4
 432 0020 536B     		ldr	r3, [r2, #52]
 433 0022 0421     		movs	r1, #4
 434 0024 8B43     		bics	r3, r1
 435 0026 5363     		str	r3, [r2, #52]
 436              		.loc 1 218 0
 437 0028 F2E7     		b	.L33
 438              	.L39:
 439 002a C046     		.align	2
 440              	.L38:
 441 002c 00080140 		.word	1073809408
 442 0030 00100240 		.word	1073876992
 443              		.cfi_endproc
 444              	.LFE39:
 446              		.comm	htim21,56,4
 447              		.comm	htim2,56,4
 448              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 449              		.align	2
 450              	.LC1:
 451 0000 5372632F 		.ascii	"Src/tim.c\000"
 451      74696D2E 
 451      6300
 452              		.text
 453              	.Letext0:
 454              		.file 2 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_type
 455              		.file 3 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 456              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 457              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 458              		.file 6 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 459              		.file 7 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 460              		.file 8 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.
 461              		.file 9 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 462              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 463              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 464              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 465              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 466              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim_ex.h"
 467              		.file 15 "Inc/tim.h"
ARM GAS  /tmp/ccQ3ICmK.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccQ3ICmK.s:16     .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccQ3ICmK.s:23     .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccQ3ICmK.s:66     .text.HAL_TIM_PWM_MspInit:000000000000002c $d
     /tmp/ccQ3ICmK.s:72     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccQ3ICmK.s:79     .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccQ3ICmK.s:160    .text.HAL_TIM_MspPostInit:0000000000000054 $d
     /tmp/ccQ3ICmK.s:165    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccQ3ICmK.s:172    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccQ3ICmK.s:271    .text.MX_TIM2_Init:0000000000000078 $d
                            *COM*:0000000000000038 htim2
     /tmp/ccQ3ICmK.s:277    .text.MX_TIM21_Init:0000000000000000 $t
     /tmp/ccQ3ICmK.s:284    .text.MX_TIM21_Init:0000000000000000 MX_TIM21_Init
     /tmp/ccQ3ICmK.s:383    .text.MX_TIM21_Init:0000000000000078 $d
                            *COM*:0000000000000038 htim21
     /tmp/ccQ3ICmK.s:392    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccQ3ICmK.s:399    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccQ3ICmK.s:441    .text.HAL_TIM_PWM_MspDeInit:000000000000002c $d
     /tmp/ccQ3ICmK.s:449    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
_Error_Handler
