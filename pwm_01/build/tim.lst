ARM GAS  /tmp/ccEyj18v.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.my_pwm_start,"ax",%progbits
  16              		.align	1
  17              		.global	my_pwm_start
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	my_pwm_start:
  24              	.LFB407:
  25              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   ** This notice applies to any and all portions of this file
   8:Src/tim.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/tim.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/tim.c     ****   * inserted by the user or by software development tools
  11:Src/tim.c     ****   * are owned by their respective copyright owners.
  12:Src/tim.c     ****   *
  13:Src/tim.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/tim.c     ****   *
  15:Src/tim.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/tim.c     ****   * are permitted provided that the following conditions are met:
  17:Src/tim.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/tim.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/tim.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/tim.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/tim.c     ****   *      and/or other materials provided with the distribution.
  22:Src/tim.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/tim.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/tim.c     ****   *      without specific prior written permission.
  25:Src/tim.c     ****   *
  26:Src/tim.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/tim.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/tim.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/tim.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/tim.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/tim.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/tim.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/tim.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccEyj18v.s 			page 2


  34:Src/tim.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/tim.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/tim.c     ****   *
  37:Src/tim.c     ****   ******************************************************************************
  38:Src/tim.c     ****   */
  39:Src/tim.c     **** 
  40:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/tim.c     **** #include "tim.h"
  42:Src/tim.c     **** 
  43:Src/tim.c     **** /* USER CODE BEGIN 0 */
  44:Src/tim.c     **** void my_pwm_start()
  45:Src/tim.c     **** {
  26              		.loc 1 45 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  46:Src/tim.c     ****     HAL_TIM_PWM_Start (&htim2, TIM_CHANNEL_1);
  35              		.loc 1 46 0
  36 0002 0021     		movs	r1, #0
  37 0004 0148     		ldr	r0, .L2
  38 0006 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  39              	.LVL0:
  47:Src/tim.c     **** }
  40              		.loc 1 47 0
  41              		@ sp needed
  42 000a 10BD     		pop	{r4, pc}
  43              	.L3:
  44              		.align	2
  45              	.L2:
  46 000c 00000000 		.word	htim2
  47              		.cfi_endproc
  48              	.LFE407:
  50              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  51              		.align	1
  52              		.global	HAL_TIM_Base_MspInit
  53              		.syntax unified
  54              		.code	16
  55              		.thumb_func
  56              		.fpu softvfp
  58              	HAL_TIM_Base_MspInit:
  59              	.LFB409:
  48:Src/tim.c     **** /* USER CODE END 0 */
  49:Src/tim.c     **** 
  50:Src/tim.c     **** TIM_HandleTypeDef htim2;
  51:Src/tim.c     **** 
  52:Src/tim.c     **** /* TIM2 init function */
  53:Src/tim.c     **** void MX_TIM2_Init(void)
  54:Src/tim.c     **** {
  55:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
  56:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig;
  57:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC;
  58:Src/tim.c     **** 
ARM GAS  /tmp/ccEyj18v.s 			page 3


  59:Src/tim.c     ****   htim2.Instance = TIM2;
  60:Src/tim.c     ****   htim2.Init.Prescaler = 0;
  61:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  62:Src/tim.c     ****   htim2.Init.Period = 74;
  63:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  64:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  65:Src/tim.c     ****   {
  66:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  67:Src/tim.c     ****   }
  68:Src/tim.c     **** 
  69:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  70:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  71:Src/tim.c     ****   {
  72:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  73:Src/tim.c     ****   }
  74:Src/tim.c     **** 
  75:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
  76:Src/tim.c     ****   {
  77:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  78:Src/tim.c     ****   }
  79:Src/tim.c     **** 
  80:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  81:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  82:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  83:Src/tim.c     ****   {
  84:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  85:Src/tim.c     ****   }
  86:Src/tim.c     **** 
  87:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  88:Src/tim.c     ****   sConfigOC.Pulse = 7;
  89:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
  90:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  91:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  92:Src/tim.c     ****   {
  93:Src/tim.c     ****     _Error_Handler(__FILE__, __LINE__);
  94:Src/tim.c     ****   }
  95:Src/tim.c     **** 
  96:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim2);
  97:Src/tim.c     **** 
  98:Src/tim.c     **** }
  99:Src/tim.c     **** 
 100:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 101:Src/tim.c     **** {
  60              		.loc 1 101 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.LVL1:
 102:Src/tim.c     **** 
 103:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
  66              		.loc 1 103 0
  67 0000 0268     		ldr	r2, [r0]
  68 0002 8023     		movs	r3, #128
  69 0004 DB05     		lsls	r3, r3, #23
  70 0006 9A42     		cmp	r2, r3
  71 0008 00D0     		beq	.L6
ARM GAS  /tmp/ccEyj18v.s 			page 4


  72              	.L4:
 104:Src/tim.c     ****   {
 105:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 106:Src/tim.c     **** 
 107:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 108:Src/tim.c     ****     /* TIM2 clock enable */
 109:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 110:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 111:Src/tim.c     **** 
 112:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 113:Src/tim.c     ****   }
 114:Src/tim.c     **** }
  73              		.loc 1 114 0
  74              		@ sp needed
  75 000a 7047     		bx	lr
  76              	.L6:
 109:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
  77              		.loc 1 109 0
  78 000c 024A     		ldr	r2, .L7
  79 000e 936B     		ldr	r3, [r2, #56]
  80 0010 0121     		movs	r1, #1
  81 0012 0B43     		orrs	r3, r1
  82 0014 9363     		str	r3, [r2, #56]
  83              		.loc 1 114 0
  84 0016 F8E7     		b	.L4
  85              	.L8:
  86              		.align	2
  87              	.L7:
  88 0018 00100240 		.word	1073876992
  89              		.cfi_endproc
  90              	.LFE409:
  92              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  93              		.align	1
  94              		.global	HAL_TIM_MspPostInit
  95              		.syntax unified
  96              		.code	16
  97              		.thumb_func
  98              		.fpu softvfp
 100              	HAL_TIM_MspPostInit:
 101              	.LFB410:
 115:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 116:Src/tim.c     **** {
 102              		.loc 1 116 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 24
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              	.LVL2:
 107 0000 00B5     		push	{lr}
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 4
 110              		.cfi_offset 14, -4
 111 0002 87B0     		sub	sp, sp, #28
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 32
 117:Src/tim.c     **** 
 118:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 119:Src/tim.c     ****   if(timHandle->Instance==TIM2)
ARM GAS  /tmp/ccEyj18v.s 			page 5


 114              		.loc 1 119 0
 115 0004 0268     		ldr	r2, [r0]
 116 0006 8023     		movs	r3, #128
 117 0008 DB05     		lsls	r3, r3, #23
 118 000a 9A42     		cmp	r2, r3
 119 000c 01D0     		beq	.L11
 120              	.LVL3:
 121              	.L9:
 120:Src/tim.c     ****   {
 121:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 122:Src/tim.c     **** 
 123:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 0 */
 124:Src/tim.c     ****   
 125:Src/tim.c     ****     /**TIM2 GPIO Configuration    
 126:Src/tim.c     ****     PA0-CK_IN     ------> TIM2_CH1 
 127:Src/tim.c     ****     */
 128:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 129:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 130:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 131:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 132:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 133:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 134:Src/tim.c     **** 
 135:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 136:Src/tim.c     **** 
 137:Src/tim.c     ****   /* USER CODE END TIM2_MspPostInit 1 */
 138:Src/tim.c     ****   }
 139:Src/tim.c     **** 
 140:Src/tim.c     **** }
 122              		.loc 1 140 0
 123 000e 07B0     		add	sp, sp, #28
 124              		@ sp needed
 125 0010 00BD     		pop	{pc}
 126              	.LVL4:
 127              	.L11:
 128:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 128              		.loc 1 128 0
 129 0012 0123     		movs	r3, #1
 130 0014 0193     		str	r3, [sp, #4]
 129:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 129 0
 132 0016 0133     		adds	r3, r3, #1
 133 0018 0293     		str	r3, [sp, #8]
 130:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 134              		.loc 1 130 0
 135 001a 0022     		movs	r2, #0
 136 001c 0392     		str	r2, [sp, #12]
 131:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 137              		.loc 1 131 0
 138 001e 0493     		str	r3, [sp, #16]
 132:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 139              		.loc 1 132 0
 140 0020 0593     		str	r3, [sp, #20]
 133:Src/tim.c     **** 
 141              		.loc 1 133 0
 142 0022 01A9     		add	r1, sp, #4
 143 0024 A020     		movs	r0, #160
ARM GAS  /tmp/ccEyj18v.s 			page 6


 144              	.LVL5:
 145 0026 C005     		lsls	r0, r0, #23
 146 0028 FFF7FEFF 		bl	HAL_GPIO_Init
 147              	.LVL6:
 148              		.loc 1 140 0
 149 002c EFE7     		b	.L9
 150              		.cfi_endproc
 151              	.LFE410:
 153              		.section	.text.MX_TIM2_Init,"ax",%progbits
 154              		.align	1
 155              		.global	MX_TIM2_Init
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	MX_TIM2_Init:
 162              	.LFB408:
  54:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 163              		.loc 1 54 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 40
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 00B5     		push	{lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 14, -4
 171 0002 8BB0     		sub	sp, sp, #44
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 48
  59:Src/tim.c     ****   htim2.Init.Prescaler = 0;
 174              		.loc 1 59 0
 175 0004 2848     		ldr	r0, .L23
 176 0006 8023     		movs	r3, #128
 177 0008 DB05     		lsls	r3, r3, #23
 178 000a 0360     		str	r3, [r0]
  60:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 179              		.loc 1 60 0
 180 000c 0023     		movs	r3, #0
 181 000e 4360     		str	r3, [r0, #4]
  61:Src/tim.c     ****   htim2.Init.Period = 74;
 182              		.loc 1 61 0
 183 0010 8360     		str	r3, [r0, #8]
  62:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 184              		.loc 1 62 0
 185 0012 4A22     		movs	r2, #74
 186 0014 C260     		str	r2, [r0, #12]
  63:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 187              		.loc 1 63 0
 188 0016 0361     		str	r3, [r0, #16]
  64:Src/tim.c     ****   {
 189              		.loc 1 64 0
 190 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 191              	.LVL7:
 192 001c 0028     		cmp	r0, #0
 193 001e 2AD1     		bne	.L18
 194              	.L13:
  69:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
ARM GAS  /tmp/ccEyj18v.s 			page 7


 195              		.loc 1 69 0
 196 0020 8023     		movs	r3, #128
 197 0022 5B01     		lsls	r3, r3, #5
 198 0024 0693     		str	r3, [sp, #24]
  70:Src/tim.c     ****   {
 199              		.loc 1 70 0
 200 0026 06A9     		add	r1, sp, #24
 201 0028 1F48     		ldr	r0, .L23
 202 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 203              	.LVL8:
 204 002e 0028     		cmp	r0, #0
 205 0030 26D1     		bne	.L19
 206              	.L14:
  75:Src/tim.c     ****   {
 207              		.loc 1 75 0
 208 0032 1D48     		ldr	r0, .L23
 209 0034 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 210              	.LVL9:
 211 0038 0028     		cmp	r0, #0
 212 003a 26D1     		bne	.L20
 213              	.L15:
  80:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 214              		.loc 1 80 0
 215 003c 0023     		movs	r3, #0
 216 003e 0493     		str	r3, [sp, #16]
  81:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 217              		.loc 1 81 0
 218 0040 0593     		str	r3, [sp, #20]
  82:Src/tim.c     ****   {
 219              		.loc 1 82 0
 220 0042 04A9     		add	r1, sp, #16
 221 0044 1848     		ldr	r0, .L23
 222 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 223              	.LVL10:
 224 004a 0028     		cmp	r0, #0
 225 004c 22D1     		bne	.L21
 226              	.L16:
  87:Src/tim.c     ****   sConfigOC.Pulse = 7;
 227              		.loc 1 87 0
 228 004e 6023     		movs	r3, #96
 229 0050 0093     		str	r3, [sp]
  88:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_LOW;
 230              		.loc 1 88 0
 231 0052 593B     		subs	r3, r3, #89
 232 0054 0193     		str	r3, [sp, #4]
  89:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 233              		.loc 1 89 0
 234 0056 053B     		subs	r3, r3, #5
 235 0058 0293     		str	r3, [sp, #8]
  90:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 236              		.loc 1 90 0
 237 005a 0023     		movs	r3, #0
 238 005c 0393     		str	r3, [sp, #12]
  91:Src/tim.c     ****   {
 239              		.loc 1 91 0
 240 005e 0022     		movs	r2, #0
 241 0060 6946     		mov	r1, sp
ARM GAS  /tmp/ccEyj18v.s 			page 8


 242 0062 1148     		ldr	r0, .L23
 243 0064 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 244              	.LVL11:
 245 0068 0028     		cmp	r0, #0
 246 006a 18D1     		bne	.L22
 247              	.L17:
  96:Src/tim.c     **** 
 248              		.loc 1 96 0
 249 006c 0E48     		ldr	r0, .L23
 250 006e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 251              	.LVL12:
  98:Src/tim.c     **** 
 252              		.loc 1 98 0
 253 0072 0BB0     		add	sp, sp, #44
 254              		@ sp needed
 255 0074 00BD     		pop	{pc}
 256              	.L18:
  66:Src/tim.c     ****   }
 257              		.loc 1 66 0
 258 0076 4221     		movs	r1, #66
 259 0078 0C48     		ldr	r0, .L23+4
 260 007a FFF7FEFF 		bl	_Error_Handler
 261              	.LVL13:
 262 007e CFE7     		b	.L13
 263              	.L19:
  72:Src/tim.c     ****   }
 264              		.loc 1 72 0
 265 0080 4821     		movs	r1, #72
 266 0082 0A48     		ldr	r0, .L23+4
 267 0084 FFF7FEFF 		bl	_Error_Handler
 268              	.LVL14:
 269 0088 D3E7     		b	.L14
 270              	.L20:
  77:Src/tim.c     ****   }
 271              		.loc 1 77 0
 272 008a 4D21     		movs	r1, #77
 273 008c 0748     		ldr	r0, .L23+4
 274 008e FFF7FEFF 		bl	_Error_Handler
 275              	.LVL15:
 276 0092 D3E7     		b	.L15
 277              	.L21:
  84:Src/tim.c     ****   }
 278              		.loc 1 84 0
 279 0094 5421     		movs	r1, #84
 280 0096 0548     		ldr	r0, .L23+4
 281 0098 FFF7FEFF 		bl	_Error_Handler
 282              	.LVL16:
 283 009c D7E7     		b	.L16
 284              	.L22:
  93:Src/tim.c     ****   }
 285              		.loc 1 93 0
 286 009e 5D21     		movs	r1, #93
 287 00a0 0248     		ldr	r0, .L23+4
 288 00a2 FFF7FEFF 		bl	_Error_Handler
 289              	.LVL17:
 290 00a6 E1E7     		b	.L17
 291              	.L24:
ARM GAS  /tmp/ccEyj18v.s 			page 9


 292              		.align	2
 293              	.L23:
 294 00a8 00000000 		.word	htim2
 295 00ac 00000000 		.word	.LC2
 296              		.cfi_endproc
 297              	.LFE408:
 299              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 300              		.align	1
 301              		.global	HAL_TIM_Base_MspDeInit
 302              		.syntax unified
 303              		.code	16
 304              		.thumb_func
 305              		.fpu softvfp
 307              	HAL_TIM_Base_MspDeInit:
 308              	.LFB411:
 141:Src/tim.c     **** 
 142:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 143:Src/tim.c     **** {
 309              		.loc 1 143 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314              	.LVL18:
 144:Src/tim.c     **** 
 145:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM2)
 315              		.loc 1 145 0
 316 0000 0268     		ldr	r2, [r0]
 317 0002 8023     		movs	r3, #128
 318 0004 DB05     		lsls	r3, r3, #23
 319 0006 9A42     		cmp	r2, r3
 320 0008 00D0     		beq	.L27
 321              	.L25:
 146:Src/tim.c     ****   {
 147:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 148:Src/tim.c     **** 
 149:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 150:Src/tim.c     ****     /* Peripheral clock disable */
 151:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 152:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 153:Src/tim.c     **** 
 154:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 155:Src/tim.c     ****   }
 156:Src/tim.c     **** } 
 322              		.loc 1 156 0
 323              		@ sp needed
 324 000a 7047     		bx	lr
 325              	.L27:
 151:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 326              		.loc 1 151 0
 327 000c 024A     		ldr	r2, .L28
 328 000e 936B     		ldr	r3, [r2, #56]
 329 0010 0121     		movs	r1, #1
 330 0012 8B43     		bics	r3, r1
 331 0014 9363     		str	r3, [r2, #56]
 332              		.loc 1 156 0
 333 0016 F8E7     		b	.L25
ARM GAS  /tmp/ccEyj18v.s 			page 10


 334              	.L29:
 335              		.align	2
 336              	.L28:
 337 0018 00100240 		.word	1073876992
 338              		.cfi_endproc
 339              	.LFE411:
 341              		.comm	htim2,56,4
 342              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 343              		.align	2
 344              	.LC2:
 345 0000 5372632F 		.ascii	"Src/tim.c\000"
 345      74696D2E 
 345      6300
 346              		.text
 347              	.Letext0:
 348              		.file 2 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_type
 349              		.file 3 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 350              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 351              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 352              		.file 6 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 353              		.file 7 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 354              		.file 8 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef.
 355              		.file 9 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 356              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 357              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 358              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 359              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 360              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim_ex.h"
 361              		.file 15 "Inc/tim.h"
 362              		.file 16 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h"
ARM GAS  /tmp/ccEyj18v.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccEyj18v.s:16     .text.my_pwm_start:0000000000000000 $t
     /tmp/ccEyj18v.s:23     .text.my_pwm_start:0000000000000000 my_pwm_start
     /tmp/ccEyj18v.s:46     .text.my_pwm_start:000000000000000c $d
                            *COM*:0000000000000038 htim2
     /tmp/ccEyj18v.s:51     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccEyj18v.s:58     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccEyj18v.s:88     .text.HAL_TIM_Base_MspInit:0000000000000018 $d
     /tmp/ccEyj18v.s:93     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccEyj18v.s:100    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccEyj18v.s:154    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccEyj18v.s:161    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccEyj18v.s:294    .text.MX_TIM2_Init:00000000000000a8 $d
     /tmp/ccEyj18v.s:300    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccEyj18v.s:307    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccEyj18v.s:337    .text.HAL_TIM_Base_MspDeInit:0000000000000018 $d
     /tmp/ccEyj18v.s:343    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_TIM_PWM_Start
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
_Error_Handler
