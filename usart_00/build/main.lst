ARM GAS  /tmp/cc0giX7U.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LL_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	LL_Init:
  23              	.LFB621:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  /tmp/cc0giX7U.s 			page 2


  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE BEGIN Includes */
  43:Src/main.c    **** #include "stdlib.h"
  44:Src/main.c    **** #include "string.h"
  45:Src/main.c    **** #include "tinyprintf.h"
  46:Src/main.c    **** /* USER CODE END Includes */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** //uint8_t *str;
  53:Src/main.c    **** //uint32_t size_of_str;
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** static void LL_Init(void);
  58:Src/main.c    **** void SystemClock_Config(void);
  59:Src/main.c    **** static void MX_GPIO_Init(void);
  60:Src/main.c    **** static void MX_DMA_Init(void);
  61:Src/main.c    **** static void MX_USART2_UART_Init(void);
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** /**
  72:Src/main.c    ****   * @brief  The application entry point.
  73:Src/main.c    ****   *
  74:Src/main.c    ****   * @retval None
  75:Src/main.c    ****   */
  76:Src/main.c    **** int main(void)
  77:Src/main.c    **** {
  78:Src/main.c    ****   /* USER CODE BEGIN 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   LL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /tmp/cc0giX7U.s 			page 3


  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_DMA_Init();
 101:Src/main.c    ****   MX_USART2_UART_Init();
 102:Src/main.c    ****   /* USER CODE BEGIN 2 */
 103:Src/main.c    ****   uart_print_init();
 104:Src/main.c    ****   tfp_printf ("tfp_printf testing..!!\n");
 105:Src/main.c    ****   uint32_t a = 100;
 106:Src/main.c    ****   tfp_printf ("Int : %d, Hex : %04x\n", a ,a);
 107:Src/main.c    ****   /* USER CODE END 2 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Infinite loop */
 110:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 111:Src/main.c    ****   while (1)
 112:Src/main.c    ****   {
 113:Src/main.c    **** //    tfp_printf("In while 1.. Code not stuck..!!\n");
 114:Src/main.c    ****   /* USER CODE END WHILE */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* USER CODE BEGIN 3 */
 117:Src/main.c    **** 
 118:Src/main.c    ****   }
 119:Src/main.c    ****   /* USER CODE END 3 */
 120:Src/main.c    **** 
 121:Src/main.c    **** }
 122:Src/main.c    **** static void LL_Init(void)
 123:Src/main.c    **** {
  25              		.loc 1 123 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 8
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30 0000 82B0     		sub	sp, sp, #8
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              	.LVL0:
  34              	.LBB96:
  35              	.LBB97:
  36              		.file 2 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @file    stm32l0xx_ll_bus.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @verbatim                
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]  
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write 
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       from/to registers.
ARM GAS  /tmp/cc0giX7U.s 			page 4


  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]  
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * Redistribution and use in source and binary forms, with or without modification,
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * are permitted provided that the following conditions are met:
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *      this list of conditions and the following disclaimer.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *      this list of conditions and the following disclaimer in the documentation
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *      and/or other materials provided with the distribution.
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *      may be used to endorse or promote products derived from this software
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *      without specific prior written permission.
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifndef __STM32L0xx_LL_BUS_H
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define __STM32L0xx_LL_BUS_H
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifdef __cplusplus
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** extern "C" {
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #include "stm32l0xx.h"
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @addtogroup STM32L0xx_LL_Driver
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RCC)
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
ARM GAS  /tmp/cc0giX7U.s 			page 5


  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN      /*!< DMA1 clock enable */
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_MIF            RCC_AHBENR_MIFEN       /*!< MIF clock enable */
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN  /*!< Sleep Mode SRAM clock enable
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN       /*!< CRC clock enable */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TSC)
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN       /*!< TSC clock enable */
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*TSC*/
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RNG)
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN       /*!< RNG clock enable */
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*RNG*/
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(AES)
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_CRYPEN      /*!< CRYP clock enable */
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*AES*/
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN     /*!< TIM2 clock enable */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM3)
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN     /*!< TIM3 clock enable */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM6)
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN     /*!< TIM6 clock enable */
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM7)
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN     /*!< TIM7 clock enable */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(LCD)
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN      /*!< LCD clock enable */
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*LCD*/
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN     /*!< WWDG clock enable */
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(SPI2)
ARM GAS  /tmp/cc0giX7U.s 			page 6


 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN     /*!< SPI2 clock enable */
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN   /*!< USART2 clock enable */
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APB1ENR_LPUART1EN  /*!< LPUART1 clock enable */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART4)
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN   /*!< USART4 clock enable */
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART5)
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN   /*!< USART5 clock enable */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN     /*!< I2C1 clock enable */
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C2)
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN     /*!< I2C2 clock enable */
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USB)
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN      /*!< USB clock enable */
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*USB*/
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(CRS)
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN      /*!< CRS clock enable */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*CRS*/
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN      /*!< PWR clock enable */
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(DAC)
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN      /*!< DAC clock enable */
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C3)
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN     /*!< I2C3 clock enable */
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN   /*!< LPTIM1 clock enable */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            (uint32_t)0xFFFFFFFFU
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN  /*!< SYSCFG clock enable */
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM21          RCC_APB2ENR_TIM21EN   /*!< TIM21 clock enable */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM22)
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM22          RCC_APB2ENR_TIM22EN   /*!< TIM22 clock enable */
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN      /*!< FireWall clock enable */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN    /*!< ADC1 clock enable */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN    /*!< SPI1 clock enable */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART1)
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN  /*!< USART1 clock enable */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN  /*!< DBGMCU clock enable */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 7


 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             (uint32_t)0xFFFFFFFFU
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN    /*!< GPIO port A control */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN    /*!< GPIO port B control */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN    /*!< GPIO port C control */
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOD)
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN    /*!< GPIO port D control */
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOD*/
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOE)
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN    /*!< GPIO port H control */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOE*/
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOH)
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOH           RCC_IOPENR_GPIOHEN    /*!< GPIO port H control */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOH*/
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_EnableClock\n
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_EnableClock\n
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_EnableClock\n
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_EnableClock\n
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_EnableClock\n
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_EnableClock
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 8


 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_IsEnabledClock\n
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_IsEnabledClock\n
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_IsEnabledClock\n
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_IsEnabledClock\n
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_IsEnabledClock\n
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_IsEnabledClock
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return (READ_BIT(RCC->AHBENR, Periphs) == Periphs);
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_DisableClock\n
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_DisableClock\n
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_DisableClock\n
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_DisableClock\n
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_DisableClock\n
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_DisableClock
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
ARM GAS  /tmp/cc0giX7U.s 			page 9


 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ForceReset\n
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ForceReset\n
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset\n
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset\n
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ForceReset
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ReleaseReset\n
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ReleaseReset\n
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset\n
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ReleaseReset
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_EnableClockSleep\n
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockSleep\n
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_EnableClockSleep
ARM GAS  /tmp/cc0giX7U.s 			page 10


 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_DisableClockSleep\n
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockSleep\n
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_DisableClockSleep
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
ARM GAS  /tmp/cc0giX7U.s 			page 11


 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_EnableClock\n
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_EnableClock\n
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_EnableClock\n
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_EnableClock\n
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_EnableClock\n
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_EnableClock\n
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
ARM GAS  /tmp/cc0giX7U.s 			page 12


 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return (READ_BIT(RCC->APB1ENR, Periphs) == Periphs);
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_DisableClock\n
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_DisableClock\n
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_DisableClock\n
ARM GAS  /tmp/cc0giX7U.s 			page 13


 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_DisableClock\n
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_DisableClock\n
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_DisableClock\n
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ForceReset\n
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ForceReset\n
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ForceReset\n
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ForceReset\n
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ForceReset\n
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ForceReset\n
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
ARM GAS  /tmp/cc0giX7U.s 			page 14


 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ReleaseReset\n
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ReleaseReset\n
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ReleaseReset\n
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ReleaseReset\n
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ReleaseReset\n
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ReleaseReset\n
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
ARM GAS  /tmp/cc0giX7U.s 			page 15


 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_EnableClockSleep\n
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_EnableClockSleep\n
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_EnableClockSleep\n
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_EnableClockSleep\n
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_EnableClockSleep\n
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_EnableClockSleep\n
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_EnableClockSleep\n
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_EnableClockSleep\n
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_EnableClockSleep\n
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
ARM GAS  /tmp/cc0giX7U.s 			page 16


 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR, Periphs);
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR, Periphs);
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_DisableClockSleep\n
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_DisableClockSleep\n
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_DisableClockSleep\n
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_DisableClockSleep\n
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_DisableClockSleep\n
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_DisableClockSleep\n
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_DisableClockSleep\n
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_DisableClockSleep\n
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_DisableClockSleep\n
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
ARM GAS  /tmp/cc0giX7U.s 			page 17


 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR, Periphs);
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_EnableClock\n
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_EnableClock\n
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_EnableClock
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
  37              		.loc 2 805 0
  38 0002 104B     		ldr	r3, .L2
  39 0004 596B     		ldr	r1, [r3, #52]
  40 0006 0122     		movs	r2, #1
  41 0008 1143     		orrs	r1, r2
  42 000a 5963     		str	r1, [r3, #52]
ARM GAS  /tmp/cc0giX7U.s 			page 18


 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
  43              		.loc 2 807 0
  44 000c 596B     		ldr	r1, [r3, #52]
  45 000e 0A40     		ands	r2, r1
  46 0010 0192     		str	r2, [sp, #4]
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
  47              		.loc 2 808 0
  48 0012 019A     		ldr	r2, [sp, #4]
  49              	.LVL1:
  50              	.LBE97:
  51              	.LBE96:
  52              	.LBB98:
  53              	.LBB99:
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
  54              		.loc 2 459 0
  55 0014 9A6B     		ldr	r2, [r3, #56]
  56 0016 8021     		movs	r1, #128
  57 0018 4905     		lsls	r1, r1, #21
  58 001a 0A43     		orrs	r2, r1
  59 001c 9A63     		str	r2, [r3, #56]
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
  60              		.loc 2 461 0
  61 001e 9B6B     		ldr	r3, [r3, #56]
  62 0020 0B40     		ands	r3, r1
  63 0022 0093     		str	r3, [sp]
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
  64              		.loc 2 462 0
  65 0024 009B     		ldr	r3, [sp]
  66              	.LVL2:
  67              	.LBE99:
  68              	.LBE98:
  69              	.LBB100:
  70              	.LBB101:
  71              		.file 3 "Drivers/CMSIS/Include/core_cm0plus.h"
   1:Drivers/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:Drivers/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0plus.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm0plus.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0plus.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm0plus.h **** 
   9:Drivers/CMSIS/Include/core_cm0plus.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm0plus.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm0plus.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm0plus.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm0plus.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm0plus.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm0plus.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm0plus.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm0plus.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm0plus.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm0plus.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm0plus.h ****    *
  21:Drivers/CMSIS/Include/core_cm0plus.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm0plus.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  /tmp/cc0giX7U.s 			page 19


  23:Drivers/CMSIS/Include/core_cm0plus.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm0plus.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm0plus.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm0plus.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm0plus.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm0plus.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm0plus.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm0plus.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm0plus.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm0plus.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/core_cm0plus.h **** 
  34:Drivers/CMSIS/Include/core_cm0plus.h **** 
  35:Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm0plus.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  40:Drivers/CMSIS/Include/core_cm0plus.h **** 
  41:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm0plus.h **** 
  44:Drivers/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm0plus.h **** 
  46:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  49:Drivers/CMSIS/Include/core_cm0plus.h **** 
  50:Drivers/CMSIS/Include/core_cm0plus.h **** /**
  51:Drivers/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm0plus.h **** 
  54:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm0plus.h **** 
  57:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm0plus.h **** 
  60:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  63:Drivers/CMSIS/Include/core_cm0plus.h **** 
  64:Drivers/CMSIS/Include/core_cm0plus.h **** 
  65:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm0plus.h **** /**
  69:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  70:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
  71:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  72:Drivers/CMSIS/Include/core_cm0plus.h **** 
  73:Drivers/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  74:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (0x04U)                                   /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (0x1EU)                                   /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           ) /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm0plus.h **** 
  79:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                (0x00U)                                      /*!< Cortex-M Core *
ARM GAS  /tmp/cc0giX7U.s 			page 20


  80:Drivers/CMSIS/Include/core_cm0plus.h **** 
  81:Drivers/CMSIS/Include/core_cm0plus.h **** 
  82:Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm0plus.h **** 
  87:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm0plus.h **** 
  92:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm0plus.h **** 
  97:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm0plus.h **** 
 102:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm0plus.h **** 
 106:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm0plus.h **** 
 111:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm0plus.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm0plus.h **** 
 117:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 118:Drivers/CMSIS/Include/core_cm0plus.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 120:Drivers/CMSIS/Include/core_cm0plus.h **** 
 121:Drivers/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
 123:Drivers/CMSIS/Include/core_cm0plus.h **** */
 124:Drivers/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
 125:Drivers/CMSIS/Include/core_cm0plus.h **** 
 126:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
 127:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
 128:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 130:Drivers/CMSIS/Include/core_cm0plus.h **** 
 131:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
 133:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm0plus.h **** 
 136:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
ARM GAS  /tmp/cc0giX7U.s 			page 21


 137:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 140:Drivers/CMSIS/Include/core_cm0plus.h **** 
 141:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
 142:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
 143:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 145:Drivers/CMSIS/Include/core_cm0plus.h **** 
 146:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TMS470__ )
 147:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 148:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 150:Drivers/CMSIS/Include/core_cm0plus.h **** 
 151:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 152:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 153:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 155:Drivers/CMSIS/Include/core_cm0plus.h **** 
 156:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 157:Drivers/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 158:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 160:Drivers/CMSIS/Include/core_cm0plus.h **** 
 161:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 162:Drivers/CMSIS/Include/core_cm0plus.h **** 
 163:Drivers/CMSIS/Include/core_cm0plus.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:Drivers/CMSIS/Include/core_cm0plus.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:Drivers/CMSIS/Include/core_cm0plus.h **** 
 166:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 167:Drivers/CMSIS/Include/core_cm0plus.h **** }
 168:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 169:Drivers/CMSIS/Include/core_cm0plus.h **** 
 170:Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 171:Drivers/CMSIS/Include/core_cm0plus.h **** 
 172:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 173:Drivers/CMSIS/Include/core_cm0plus.h **** 
 174:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 176:Drivers/CMSIS/Include/core_cm0plus.h **** 
 177:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 178:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 179:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 180:Drivers/CMSIS/Include/core_cm0plus.h **** 
 181:Drivers/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 182:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 183:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 184:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 185:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 186:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 187:Drivers/CMSIS/Include/core_cm0plus.h **** 
 188:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 189:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 190:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 192:Drivers/CMSIS/Include/core_cm0plus.h **** 
 193:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
ARM GAS  /tmp/cc0giX7U.s 			page 22


 194:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 195:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 196:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 197:Drivers/CMSIS/Include/core_cm0plus.h **** 
 198:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 199:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 200:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 201:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 202:Drivers/CMSIS/Include/core_cm0plus.h **** 
 203:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 204:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 205:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 206:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 207:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 208:Drivers/CMSIS/Include/core_cm0plus.h **** 
 209:Drivers/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 210:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 211:Drivers/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 212:Drivers/CMSIS/Include/core_cm0plus.h **** 
 213:Drivers/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 214:Drivers/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 215:Drivers/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 216:Drivers/CMSIS/Include/core_cm0plus.h **** */
 217:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 218:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 219:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 220:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 221:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 222:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 223:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 224:Drivers/CMSIS/Include/core_cm0plus.h **** 
 225:Drivers/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 226:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 229:Drivers/CMSIS/Include/core_cm0plus.h **** 
 230:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 231:Drivers/CMSIS/Include/core_cm0plus.h **** 
 232:Drivers/CMSIS/Include/core_cm0plus.h **** 
 233:Drivers/CMSIS/Include/core_cm0plus.h **** 
 234:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 235:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 236:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 237:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register
 238:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 239:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 240:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 241:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 243:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 244:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 245:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 246:Drivers/CMSIS/Include/core_cm0plus.h **** */
 247:Drivers/CMSIS/Include/core_cm0plus.h **** 
 248:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 249:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 250:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
ARM GAS  /tmp/cc0giX7U.s 			page 23


 251:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 252:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 253:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 254:Drivers/CMSIS/Include/core_cm0plus.h **** 
 255:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 256:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 257:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 258:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm0plus.h **** {
 260:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 261:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 262:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 263:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 264:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 265:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 266:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 267:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 268:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 269:Drivers/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 270:Drivers/CMSIS/Include/core_cm0plus.h **** 
 271:Drivers/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 272:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 273:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 274:Drivers/CMSIS/Include/core_cm0plus.h **** 
 275:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 276:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm0plus.h **** 
 278:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 279:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm0plus.h **** 
 281:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 282:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm0plus.h **** 
 284:Drivers/CMSIS/Include/core_cm0plus.h **** 
 285:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 286:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 288:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 289:Drivers/CMSIS/Include/core_cm0plus.h **** {
 290:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 291:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 292:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 295:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:Drivers/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 297:Drivers/CMSIS/Include/core_cm0plus.h **** 
 298:Drivers/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 299:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:Drivers/CMSIS/Include/core_cm0plus.h **** 
 302:Drivers/CMSIS/Include/core_cm0plus.h **** 
 303:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 304:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 306:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 307:Drivers/CMSIS/Include/core_cm0plus.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 24


 308:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 309:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 310:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 314:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 315:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 316:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 317:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 318:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 319:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 320:Drivers/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 321:Drivers/CMSIS/Include/core_cm0plus.h **** 
 322:Drivers/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 323:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 324:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 325:Drivers/CMSIS/Include/core_cm0plus.h **** 
 326:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 327:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 328:Drivers/CMSIS/Include/core_cm0plus.h **** 
 329:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 330:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 331:Drivers/CMSIS/Include/core_cm0plus.h **** 
 332:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 333:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 334:Drivers/CMSIS/Include/core_cm0plus.h **** 
 335:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 336:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 337:Drivers/CMSIS/Include/core_cm0plus.h **** 
 338:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 340:Drivers/CMSIS/Include/core_cm0plus.h **** 
 341:Drivers/CMSIS/Include/core_cm0plus.h **** 
 342:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 343:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 344:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 345:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 346:Drivers/CMSIS/Include/core_cm0plus.h **** {
 347:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 348:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 349:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 350:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 351:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 352:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 353:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 354:Drivers/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 355:Drivers/CMSIS/Include/core_cm0plus.h **** 
 356:Drivers/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 357:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 358:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 359:Drivers/CMSIS/Include/core_cm0plus.h **** 
 360:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 361:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 362:Drivers/CMSIS/Include/core_cm0plus.h **** 
 363:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 364:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 25


 365:Drivers/CMSIS/Include/core_cm0plus.h **** 
 366:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 367:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 368:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 369:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 370:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 371:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 372:Drivers/CMSIS/Include/core_cm0plus.h **** 
 373:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 374:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 375:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 376:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 377:Drivers/CMSIS/Include/core_cm0plus.h **** {
 378:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 379:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 380:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 381:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 382:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 383:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 384:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 385:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 386:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 387:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 388:Drivers/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 389:Drivers/CMSIS/Include/core_cm0plus.h **** 
 390:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 391:Drivers/CMSIS/Include/core_cm0plus.h **** 
 392:Drivers/CMSIS/Include/core_cm0plus.h **** 
 393:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 394:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 395:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 396:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 397:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 398:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 399:Drivers/CMSIS/Include/core_cm0plus.h **** 
 400:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 401:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 402:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 403:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 404:Drivers/CMSIS/Include/core_cm0plus.h **** {
 405:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 406:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 407:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__VTOR_PRESENT == 1U)
 408:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 409:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 410:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 411:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 412:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 413:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 414:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 415:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 416:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 417:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 418:Drivers/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 419:Drivers/CMSIS/Include/core_cm0plus.h **** 
 420:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 421:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
ARM GAS  /tmp/cc0giX7U.s 			page 26


 422:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0plus.h **** 
 424:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 425:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0plus.h **** 
 427:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 428:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0plus.h **** 
 430:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 431:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 432:Drivers/CMSIS/Include/core_cm0plus.h **** 
 433:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 435:Drivers/CMSIS/Include/core_cm0plus.h **** 
 436:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 437:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 438:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 439:Drivers/CMSIS/Include/core_cm0plus.h **** 
 440:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 442:Drivers/CMSIS/Include/core_cm0plus.h **** 
 443:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 445:Drivers/CMSIS/Include/core_cm0plus.h **** 
 446:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 448:Drivers/CMSIS/Include/core_cm0plus.h **** 
 449:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm0plus.h **** 
 452:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm0plus.h **** 
 455:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 456:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm0plus.h **** 
 458:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 459:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 460:Drivers/CMSIS/Include/core_cm0plus.h **** 
 461:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 462:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 463:Drivers/CMSIS/Include/core_cm0plus.h **** 
 464:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__VTOR_PRESENT == 1U)
 465:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 466:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 469:Drivers/CMSIS/Include/core_cm0plus.h **** 
 470:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 471:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 472:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm0plus.h **** 
 474:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm0plus.h **** 
 477:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
ARM GAS  /tmp/cc0giX7U.s 			page 27


 479:Drivers/CMSIS/Include/core_cm0plus.h **** 
 480:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm0plus.h **** 
 483:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm0plus.h **** 
 486:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 487:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm0plus.h **** 
 490:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm0plus.h **** 
 493:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm0plus.h **** 
 496:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 497:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm0plus.h **** 
 500:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm0plus.h **** 
 503:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 504:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm0plus.h **** 
 507:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 508:Drivers/CMSIS/Include/core_cm0plus.h **** 
 509:Drivers/CMSIS/Include/core_cm0plus.h **** 
 510:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 511:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 512:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 513:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 514:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 515:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 516:Drivers/CMSIS/Include/core_cm0plus.h **** 
 517:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 518:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 519:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 520:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 521:Drivers/CMSIS/Include/core_cm0plus.h **** {
 522:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 523:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 524:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 525:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 526:Drivers/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 527:Drivers/CMSIS/Include/core_cm0plus.h **** 
 528:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 529:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 530:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 531:Drivers/CMSIS/Include/core_cm0plus.h **** 
 532:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 533:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 534:Drivers/CMSIS/Include/core_cm0plus.h **** 
 535:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
ARM GAS  /tmp/cc0giX7U.s 			page 28


 536:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 537:Drivers/CMSIS/Include/core_cm0plus.h **** 
 538:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 539:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 540:Drivers/CMSIS/Include/core_cm0plus.h **** 
 541:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 542:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 543:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 544:Drivers/CMSIS/Include/core_cm0plus.h **** 
 545:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 546:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 547:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 548:Drivers/CMSIS/Include/core_cm0plus.h **** 
 549:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 550:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 551:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 552:Drivers/CMSIS/Include/core_cm0plus.h **** 
 553:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 554:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 555:Drivers/CMSIS/Include/core_cm0plus.h **** 
 556:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 557:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 558:Drivers/CMSIS/Include/core_cm0plus.h **** 
 559:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 560:Drivers/CMSIS/Include/core_cm0plus.h **** 
 561:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__MPU_PRESENT == 1U)
 562:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 563:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 564:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 565:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 566:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 568:Drivers/CMSIS/Include/core_cm0plus.h **** 
 569:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 570:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 571:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 572:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 573:Drivers/CMSIS/Include/core_cm0plus.h **** {
 574:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 575:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 576:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 577:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 578:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 579:Drivers/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 580:Drivers/CMSIS/Include/core_cm0plus.h **** 
 581:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 582:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 583:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 584:Drivers/CMSIS/Include/core_cm0plus.h **** 
 585:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 586:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 587:Drivers/CMSIS/Include/core_cm0plus.h **** 
 588:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 589:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 590:Drivers/CMSIS/Include/core_cm0plus.h **** 
 591:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 592:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
ARM GAS  /tmp/cc0giX7U.s 			page 29


 593:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 594:Drivers/CMSIS/Include/core_cm0plus.h **** 
 595:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 596:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 597:Drivers/CMSIS/Include/core_cm0plus.h **** 
 598:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 599:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 600:Drivers/CMSIS/Include/core_cm0plus.h **** 
 601:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 602:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 603:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 604:Drivers/CMSIS/Include/core_cm0plus.h **** 
 605:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 606:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 607:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 608:Drivers/CMSIS/Include/core_cm0plus.h **** 
 609:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 610:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 611:Drivers/CMSIS/Include/core_cm0plus.h **** 
 612:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 613:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 614:Drivers/CMSIS/Include/core_cm0plus.h **** 
 615:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 616:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 617:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 618:Drivers/CMSIS/Include/core_cm0plus.h **** 
 619:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 620:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 621:Drivers/CMSIS/Include/core_cm0plus.h **** 
 622:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 623:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 624:Drivers/CMSIS/Include/core_cm0plus.h **** 
 625:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 626:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 627:Drivers/CMSIS/Include/core_cm0plus.h **** 
 628:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 629:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 630:Drivers/CMSIS/Include/core_cm0plus.h **** 
 631:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 632:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 633:Drivers/CMSIS/Include/core_cm0plus.h **** 
 634:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 635:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 636:Drivers/CMSIS/Include/core_cm0plus.h **** 
 637:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 638:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 639:Drivers/CMSIS/Include/core_cm0plus.h **** 
 640:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 641:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 642:Drivers/CMSIS/Include/core_cm0plus.h **** 
 643:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 644:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 645:Drivers/CMSIS/Include/core_cm0plus.h **** 
 646:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 647:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 648:Drivers/CMSIS/Include/core_cm0plus.h **** 
 649:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 30


 650:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 651:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 652:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 653:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 654:Drivers/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 655:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 656:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 657:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 658:Drivers/CMSIS/Include/core_cm0plus.h **** 
 659:Drivers/CMSIS/Include/core_cm0plus.h **** 
 660:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 661:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 662:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 663:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 664:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 665:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 666:Drivers/CMSIS/Include/core_cm0plus.h **** 
 667:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 668:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 669:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 670:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field.
 671:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 672:Drivers/CMSIS/Include/core_cm0plus.h **** */
 673:Drivers/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
 674:Drivers/CMSIS/Include/core_cm0plus.h **** 
 675:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 676:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 677:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 678:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register.
 679:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 680:Drivers/CMSIS/Include/core_cm0plus.h **** */
 681:Drivers/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
 682:Drivers/CMSIS/Include/core_cm0plus.h **** 
 683:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 684:Drivers/CMSIS/Include/core_cm0plus.h **** 
 685:Drivers/CMSIS/Include/core_cm0plus.h **** 
 686:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 687:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 688:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 689:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 690:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 691:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 692:Drivers/CMSIS/Include/core_cm0plus.h **** 
 693:Drivers/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Cortex-M0+ Hardware */
 694:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 695:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 696:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 697:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 698:Drivers/CMSIS/Include/core_cm0plus.h **** 
 699:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 700:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 701:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 702:Drivers/CMSIS/Include/core_cm0plus.h **** 
 703:Drivers/CMSIS/Include/core_cm0plus.h **** #if (__MPU_PRESENT == 1U)
 704:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 705:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 706:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
ARM GAS  /tmp/cc0giX7U.s 			page 31


 707:Drivers/CMSIS/Include/core_cm0plus.h **** 
 708:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} */
 709:Drivers/CMSIS/Include/core_cm0plus.h **** 
 710:Drivers/CMSIS/Include/core_cm0plus.h **** 
 711:Drivers/CMSIS/Include/core_cm0plus.h **** 
 712:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 713:Drivers/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
 714:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 715:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 716:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 717:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 718:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 719:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 720:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 721:Drivers/CMSIS/Include/core_cm0plus.h **** */
 722:Drivers/CMSIS/Include/core_cm0plus.h **** 
 723:Drivers/CMSIS/Include/core_cm0plus.h **** 
 724:Drivers/CMSIS/Include/core_cm0plus.h **** 
 725:Drivers/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 726:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 727:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 728:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 729:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 730:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 731:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 732:Drivers/CMSIS/Include/core_cm0plus.h **** 
 733:Drivers/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 734:Drivers/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 735:Drivers/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 736:Drivers/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 737:Drivers/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 738:Drivers/CMSIS/Include/core_cm0plus.h **** 
 739:Drivers/CMSIS/Include/core_cm0plus.h **** 
 740:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 741:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Enable External Interrupt
 742:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 744:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 745:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 746:Drivers/CMSIS/Include/core_cm0plus.h **** {
 747:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 748:Drivers/CMSIS/Include/core_cm0plus.h **** }
 749:Drivers/CMSIS/Include/core_cm0plus.h **** 
 750:Drivers/CMSIS/Include/core_cm0plus.h **** 
 751:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 752:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Disable External Interrupt
 753:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
 754:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 755:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 756:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 757:Drivers/CMSIS/Include/core_cm0plus.h **** {
 758:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 759:Drivers/CMSIS/Include/core_cm0plus.h **** }
 760:Drivers/CMSIS/Include/core_cm0plus.h **** 
 761:Drivers/CMSIS/Include/core_cm0plus.h **** 
 762:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 763:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Pending Interrupt
ARM GAS  /tmp/cc0giX7U.s 			page 32


 764:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
 765:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 766:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 767:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 768:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 769:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 770:Drivers/CMSIS/Include/core_cm0plus.h **** {
 771:Drivers/CMSIS/Include/core_cm0plus.h ****   return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL
 772:Drivers/CMSIS/Include/core_cm0plus.h **** }
 773:Drivers/CMSIS/Include/core_cm0plus.h **** 
 774:Drivers/CMSIS/Include/core_cm0plus.h **** 
 775:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 776:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Pending Interrupt
 777:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the pending bit of an external interrupt.
 778:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
 779:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 780:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 781:Drivers/CMSIS/Include/core_cm0plus.h **** {
 782:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 783:Drivers/CMSIS/Include/core_cm0plus.h **** }
 784:Drivers/CMSIS/Include/core_cm0plus.h **** 
 785:Drivers/CMSIS/Include/core_cm0plus.h **** 
 786:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 787:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 788:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Clears the pending bit of an external interrupt.
 789:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 790:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 791:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 792:Drivers/CMSIS/Include/core_cm0plus.h **** {
 793:Drivers/CMSIS/Include/core_cm0plus.h ****   NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 794:Drivers/CMSIS/Include/core_cm0plus.h **** }
 795:Drivers/CMSIS/Include/core_cm0plus.h **** 
 796:Drivers/CMSIS/Include/core_cm0plus.h **** 
 797:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 798:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Interrupt Priority
 799:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the priority of an interrupt.
 800:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    The priority cannot be set for every core interrupt.
 801:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 802:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 803:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 804:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 805:Drivers/CMSIS/Include/core_cm0plus.h **** {
 806:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) < 0)
 807:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 808:Drivers/CMSIS/Include/core_cm0plus.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
  72              		.loc 3 808 0
  73 0026 084B     		ldr	r3, .L2+4
  74 0028 DA69     		ldr	r2, [r3, #28]
  75 002a 1202     		lsls	r2, r2, #8
  76 002c 120A     		lsrs	r2, r2, #8
  77 002e DA61     		str	r2, [r3, #28]
  78              	.LVL3:
  79              	.LBE101:
  80              	.LBE100:
  81              	.LBB102:
  82              	.LBB103:
  83 0030 1A6A     		ldr	r2, [r3, #32]
ARM GAS  /tmp/cc0giX7U.s 			page 33


  84 0032 0649     		ldr	r1, .L2+8
  85 0034 0A40     		ands	r2, r1
  86 0036 1A62     		str	r2, [r3, #32]
  87              	.LVL4:
  88              	.LBE103:
  89              	.LBE102:
  90              	.LBB104:
  91              	.LBB105:
  92 0038 1A6A     		ldr	r2, [r3, #32]
  93 003a 1202     		lsls	r2, r2, #8
  94 003c 120A     		lsrs	r2, r2, #8
  95 003e 1A62     		str	r2, [r3, #32]
  96              	.LVL5:
  97              	.LBE105:
  98              	.LBE104:
 124:Src/main.c    ****   
 125:Src/main.c    **** 
 126:Src/main.c    ****   LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_SYSCFG);
 127:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_PWR);
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* System interrupt init*/
 130:Src/main.c    ****   /* SVC_IRQn interrupt configuration */
 131:Src/main.c    ****   NVIC_SetPriority(SVC_IRQn, 0);
 132:Src/main.c    ****   /* PendSV_IRQn interrupt configuration */
 133:Src/main.c    ****   NVIC_SetPriority(PendSV_IRQn, 0);
 134:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 135:Src/main.c    ****   NVIC_SetPriority(SysTick_IRQn, 0);
 136:Src/main.c    **** 
 137:Src/main.c    **** }
  99              		.loc 1 137 0
 100 0040 02B0     		add	sp, sp, #8
 101              		@ sp needed
 102 0042 7047     		bx	lr
 103              	.L3:
 104              		.align	2
 105              	.L2:
 106 0044 00100240 		.word	1073876992
 107 0048 00ED00E0 		.word	-536810240
 108 004c FFFF00FF 		.word	-16711681
 109              		.cfi_endproc
 110              	.LFE621:
 112              		.section	.text.MX_DMA_Init,"ax",%progbits
 113              		.align	1
 114              		.syntax unified
 115              		.code	16
 116              		.thumb_func
 117              		.fpu softvfp
 119              	MX_DMA_Init:
 120              	.LFB624:
 138:Src/main.c    **** 
 139:Src/main.c    **** /**
 140:Src/main.c    ****   * @brief System Clock Configuration
 141:Src/main.c    ****   * @retval None
 142:Src/main.c    ****   */
 143:Src/main.c    **** void SystemClock_Config(void)
 144:Src/main.c    **** {
 145:Src/main.c    **** 
ARM GAS  /tmp/cc0giX7U.s 			page 34


 146:Src/main.c    ****   LL_FLASH_SetLatency(LL_FLASH_LATENCY_0);
 147:Src/main.c    **** 
 148:Src/main.c    ****   if(LL_FLASH_GetLatency() != LL_FLASH_LATENCY_0)
 149:Src/main.c    ****   {
 150:Src/main.c    ****   Error_Handler();  
 151:Src/main.c    ****   }
 152:Src/main.c    ****   LL_PWR_SetRegulVoltageScaling(LL_PWR_REGU_VOLTAGE_SCALE1);
 153:Src/main.c    **** 
 154:Src/main.c    ****   LL_RCC_MSI_Enable();
 155:Src/main.c    **** 
 156:Src/main.c    ****    /* Wait till MSI is ready */
 157:Src/main.c    ****   while(LL_RCC_MSI_IsReady() != 1)
 158:Src/main.c    ****   {
 159:Src/main.c    ****     
 160:Src/main.c    ****   }
 161:Src/main.c    ****   LL_RCC_MSI_SetRange(LL_RCC_MSIRANGE_6);
 162:Src/main.c    **** 
 163:Src/main.c    ****   LL_RCC_MSI_SetCalibTrimming(0);
 164:Src/main.c    **** 
 165:Src/main.c    ****   LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
 166:Src/main.c    **** 
 167:Src/main.c    ****   LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);
 168:Src/main.c    **** 
 169:Src/main.c    ****   LL_RCC_SetAPB2Prescaler(LL_RCC_APB2_DIV_1);
 170:Src/main.c    **** 
 171:Src/main.c    ****   LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_MSI);
 172:Src/main.c    **** 
 173:Src/main.c    ****    /* Wait till System clock is ready */
 174:Src/main.c    ****   while(LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_MSI)
 175:Src/main.c    ****   {
 176:Src/main.c    ****   
 177:Src/main.c    ****   }
 178:Src/main.c    ****   LL_Init1msTick(4194000);
 179:Src/main.c    **** 
 180:Src/main.c    ****   LL_SYSTICK_SetClkSource(LL_SYSTICK_CLKSOURCE_HCLK);
 181:Src/main.c    **** 
 182:Src/main.c    ****   LL_SetSystemCoreClock(4194000);
 183:Src/main.c    **** 
 184:Src/main.c    ****   LL_RCC_SetUSARTClockSource(LL_RCC_USART2_CLKSOURCE_PCLK1);
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 187:Src/main.c    ****   NVIC_SetPriority(SysTick_IRQn, 0);
 188:Src/main.c    **** }
 189:Src/main.c    **** 
 190:Src/main.c    **** /* USART2 init function */
 191:Src/main.c    **** static void MX_USART2_UART_Init(void)
 192:Src/main.c    **** {
 193:Src/main.c    **** 
 194:Src/main.c    ****   LL_USART_InitTypeDef USART_InitStruct;
 195:Src/main.c    **** 
 196:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct;
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* Peripheral clock enable */
 199:Src/main.c    ****   LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_USART2);
 200:Src/main.c    ****   
 201:Src/main.c    ****   /**USART2 GPIO Configuration  
 202:Src/main.c    ****   PA2   ------> USART2_TX
ARM GAS  /tmp/cc0giX7U.s 			page 35


 203:Src/main.c    ****   PA15   ------> USART2_RX 
 204:Src/main.c    ****   */
 205:Src/main.c    ****   GPIO_InitStruct.Pin = VCP_TX_Pin;
 206:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 207:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 208:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 209:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 210:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 211:Src/main.c    ****   LL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 212:Src/main.c    **** 
 213:Src/main.c    ****   GPIO_InitStruct.Pin = VCP_RX_Pin;
 214:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 215:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 216:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 217:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 218:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 219:Src/main.c    ****   LL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USART2 DMA Init */
 222:Src/main.c    ****   
 223:Src/main.c    ****   /* USART2_RX Init */
 224:Src/main.c    ****   LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_3, LL_DMA_REQUEST_4);
 225:Src/main.c    **** 
 226:Src/main.c    ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_3, LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
 227:Src/main.c    **** 
 228:Src/main.c    ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PRIORITY_LOW);
 229:Src/main.c    **** 
 230:Src/main.c    ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MODE_NORMAL);
 231:Src/main.c    **** 
 232:Src/main.c    ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PERIPH_NOINCREMENT);
 233:Src/main.c    **** 
 234:Src/main.c    ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MEMORY_INCREMENT);
 235:Src/main.c    **** 
 236:Src/main.c    ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_PDATAALIGN_BYTE);
 237:Src/main.c    **** 
 238:Src/main.c    ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_3, LL_DMA_MDATAALIGN_BYTE);
 239:Src/main.c    **** 
 240:Src/main.c    ****   /* USART2_TX Init */
 241:Src/main.c    ****   LL_DMA_SetPeriphRequest(DMA1, LL_DMA_CHANNEL_2, LL_DMA_REQUEST_4);
 242:Src/main.c    **** 
 243:Src/main.c    ****   LL_DMA_SetDataTransferDirection(DMA1, LL_DMA_CHANNEL_2, LL_DMA_DIRECTION_MEMORY_TO_PERIPH);
 244:Src/main.c    **** 
 245:Src/main.c    ****   LL_DMA_SetChannelPriorityLevel(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PRIORITY_LOW);
 246:Src/main.c    **** 
 247:Src/main.c    ****   LL_DMA_SetMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MODE_NORMAL);
 248:Src/main.c    **** 
 249:Src/main.c    ****   LL_DMA_SetPeriphIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PERIPH_NOINCREMENT);
 250:Src/main.c    **** 
 251:Src/main.c    ****   LL_DMA_SetMemoryIncMode(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MEMORY_INCREMENT);
 252:Src/main.c    **** 
 253:Src/main.c    ****   LL_DMA_SetPeriphSize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_PDATAALIGN_BYTE);
 254:Src/main.c    **** 
 255:Src/main.c    ****   LL_DMA_SetMemorySize(DMA1, LL_DMA_CHANNEL_2, LL_DMA_MDATAALIGN_BYTE);
 256:Src/main.c    **** 
 257:Src/main.c    ****   USART_InitStruct.BaudRate = 115200;
 258:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 259:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
ARM GAS  /tmp/cc0giX7U.s 			page 36


 260:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 261:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 262:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 263:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 264:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
 265:Src/main.c    **** 
 266:Src/main.c    ****   LL_USART_DisableOverrunDetect(USART2);
 267:Src/main.c    **** 
 268:Src/main.c    ****   LL_USART_ConfigAsyncMode(USART2);
 269:Src/main.c    **** 
 270:Src/main.c    ****   LL_USART_Enable(USART2);
 271:Src/main.c    **** 
 272:Src/main.c    **** }
 273:Src/main.c    **** 
 274:Src/main.c    **** /** 
 275:Src/main.c    ****   * Enable DMA controller clock
 276:Src/main.c    ****   */
 277:Src/main.c    **** static void MX_DMA_Init(void) 
 278:Src/main.c    **** {
 121              		.loc 1 278 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 82B0     		sub	sp, sp, #8
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              	.LVL6:
 130              	.LBB106:
 131              	.LBB107:
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 132              		.loc 2 243 0
 133 0002 0A4A     		ldr	r2, .L5
 134 0004 116B     		ldr	r1, [r2, #48]
 135 0006 0123     		movs	r3, #1
 136 0008 1943     		orrs	r1, r3
 137 000a 1163     		str	r1, [r2, #48]
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 138              		.loc 2 245 0
 139 000c 126B     		ldr	r2, [r2, #48]
 140 000e 1340     		ands	r3, r2
 141 0010 0193     		str	r3, [sp, #4]
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 142              		.loc 2 246 0
 143 0012 019B     		ldr	r3, [sp, #4]
 144              	.LVL7:
 145              	.LBE107:
 146              	.LBE106:
 147              	.LBB108:
 148              	.LBB109:
 809:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 810:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 811:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 812:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 813:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 149              		.loc 3 813 0
 150 0014 064B     		ldr	r3, .L5+4
ARM GAS  /tmp/cc0giX7U.s 			page 37


 151 0016 C221     		movs	r1, #194
 152 0018 8900     		lsls	r1, r1, #2
 153 001a 5A58     		ldr	r2, [r3, r1]
 154 001c 0548     		ldr	r0, .L5+8
 155 001e 0240     		ands	r2, r0
 156 0020 5A50     		str	r2, [r3, r1]
 157              	.LVL8:
 158              	.LBE109:
 159              	.LBE108:
 160              	.LBB110:
 161              	.LBB111:
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 162              		.loc 3 747 0
 163 0022 8022     		movs	r2, #128
 164 0024 D200     		lsls	r2, r2, #3
 165 0026 1A60     		str	r2, [r3]
 166              	.LVL9:
 167              	.LBE111:
 168              	.LBE110:
 279:Src/main.c    ****   /* Init with LL driver */
 280:Src/main.c    ****   /* DMA controller clock enable */
 281:Src/main.c    ****   LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_DMA1);
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* DMA interrupt init */
 284:Src/main.c    ****   /* DMA1_Channel2_3_IRQn interrupt configuration */
 285:Src/main.c    ****   NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0);
 286:Src/main.c    ****   NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 287:Src/main.c    **** 
 288:Src/main.c    **** }
 169              		.loc 1 288 0
 170 0028 02B0     		add	sp, sp, #8
 171              		@ sp needed
 172 002a 7047     		bx	lr
 173              	.L6:
 174              		.align	2
 175              	.L5:
 176 002c 00100240 		.word	1073876992
 177 0030 00E100E0 		.word	-536813312
 178 0034 FFFF00FF 		.word	-16711681
 179              		.cfi_endproc
 180              	.LFE624:
 182              		.section	.text.MX_GPIO_Init,"ax",%progbits
 183              		.align	1
 184              		.syntax unified
 185              		.code	16
 186              		.thumb_func
 187              		.fpu softvfp
 189              	MX_GPIO_Init:
 190              	.LFB625:
 289:Src/main.c    **** 
 290:Src/main.c    **** /** Configure pins as 
 291:Src/main.c    ****         * Analog 
 292:Src/main.c    ****         * Input 
 293:Src/main.c    ****         * Output
 294:Src/main.c    ****         * EVENT_OUT
 295:Src/main.c    ****         * EXTI
 296:Src/main.c    **** */
ARM GAS  /tmp/cc0giX7U.s 			page 38


 297:Src/main.c    **** static void MX_GPIO_Init(void)
 298:Src/main.c    **** {
 191              		.loc 1 298 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 40
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 00B5     		push	{lr}
 196              	.LCFI2:
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 14, -4
 199 0002 8BB0     		sub	sp, sp, #44
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 48
 202              	.LVL10:
 203              	.LBB112:
 204              	.LBB113:
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_IsEnabledClock\n
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_IsEnabledClock\n
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_IsEnabledClock\n
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_IsEnabledClock
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return (READ_BIT(RCC->APB2ENR, Periphs) == Periphs);
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_DisableClock\n
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_DisableClock\n
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_DisableClock\n
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_DisableClock
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  /tmp/cc0giX7U.s 			page 39


 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ForceReset\n
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ForceReset\n
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ForceReset
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ReleaseReset\n
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ReleaseReset\n
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ReleaseReset
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
ARM GAS  /tmp/cc0giX7U.s 			page 40


 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock during Low Power (Sleep) mode.
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_EnableClockSleep\n
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_EnableClockSleep\n
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_EnableClockSleep\n
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_EnableClockSleep\n
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_EnableClockSleep\n
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_EnableClockSleep\n
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_EnableClockSleep
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClockSleep(uint32_t Periphs)
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2SMENR, Periphs);
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2SMENR, Periphs);
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock during Low Power (Sleep) mode.
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_DisableClockSleep\n
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_DisableClockSleep\n
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_DisableClockSleep\n
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_DisableClockSleep\n
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_DisableClockSleep\n
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_DisableClockSleep\n
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_DisableClockSleep
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
ARM GAS  /tmp/cc0giX7U.s 			page 41


 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClockSleep(uint32_t Periphs)
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2SMENR, Periphs);
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_IOP IOP
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable IOP peripherals clock.
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll IOPENR       GPIOAEN       LL_IOP_GRP1_EnableClock\n
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOBEN       LL_IOP_GRP1_EnableClock\n
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOCEN       LL_IOP_GRP1_EnableClock\n
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIODEN       LL_IOP_GRP1_EnableClock\n
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOEEN       LL_IOP_GRP1_EnableClock\n
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOHEN       LL_IOP_GRP1_EnableClock
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOA
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOB
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOC
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOD (*)
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOE (*)
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOH (*)
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 205              		.loc 2 1006 0
 206 0004 134B     		ldr	r3, .L8
 207 0006 D96A     		ldr	r1, [r3, #44]
 208 0008 0422     		movs	r2, #4
 209 000a 1143     		orrs	r1, r2
 210 000c D962     		str	r1, [r3, #44]
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 211              		.loc 2 1008 0
 212 000e D96A     		ldr	r1, [r3, #44]
 213 0010 0A40     		ands	r2, r1
 214 0012 0392     		str	r2, [sp, #12]
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 215              		.loc 2 1009 0
ARM GAS  /tmp/cc0giX7U.s 			page 42


 216 0014 039A     		ldr	r2, [sp, #12]
 217              	.LVL11:
 218              	.LBE113:
 219              	.LBE112:
 220              	.LBB114:
 221              	.LBB115:
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 222              		.loc 2 1006 0
 223 0016 DA6A     		ldr	r2, [r3, #44]
 224 0018 0121     		movs	r1, #1
 225 001a 0A43     		orrs	r2, r1
 226 001c DA62     		str	r2, [r3, #44]
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 227              		.loc 2 1008 0
 228 001e DA6A     		ldr	r2, [r3, #44]
 229 0020 0A40     		ands	r2, r1
 230 0022 0292     		str	r2, [sp, #8]
 231              		.loc 2 1009 0
 232 0024 029A     		ldr	r2, [sp, #8]
 233              	.LVL12:
 234              	.LBE115:
 235              	.LBE114:
 236              	.LBB116:
 237              	.LBB117:
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 238              		.loc 2 1006 0
 239 0026 D86A     		ldr	r0, [r3, #44]
 240 0028 0222     		movs	r2, #2
 241 002a 1043     		orrs	r0, r2
 242 002c D862     		str	r0, [r3, #44]
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 243              		.loc 2 1008 0
 244 002e DB6A     		ldr	r3, [r3, #44]
 245 0030 1A40     		ands	r2, r3
 246 0032 0192     		str	r2, [sp, #4]
 247              		.loc 2 1009 0
 248 0034 019B     		ldr	r3, [sp, #4]
 249              	.LVL13:
 250              	.LBE117:
 251              	.LBE116:
 252              	.LBB118:
 253              	.LBB119:
 254              		.file 4 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @file    stm32l0xx_ll_gpio.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer.
ARM GAS  /tmp/cc0giX7U.s 			page 43


  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *      without specific prior written permission.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   ******************************************************************************
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #ifndef __STM32L0xx_LL_GPIO_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define __STM32L0xx_LL_GPIO_H
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #ifdef __cplusplus
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** extern "C" {
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #endif
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #include "stm32l0xx.h"
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @addtogroup STM32L0xx_LL_Driver
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
ARM GAS  /tmp/cc0giX7U.s 			page 44


  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** typedef struct
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS_0 /*!< Select pin 0 */
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS_1 /*!< Select pin 1 */
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS_2 /*!< Select pin 2 */
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS_3 /*!< Select pin 3 */
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS_4 /*!< Select pin 4 */
ARM GAS  /tmp/cc0giX7U.s 			page 45


 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS_5 /*!< Select pin 5 */
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS_6 /*!< Select pin 6 */
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS_7 /*!< Select pin 7 */
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS_8 /*!< Select pin 8 */
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS_9 /*!< Select pin 9 */
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS_10 /*!< Select pin 10 */
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS_11 /*!< Select pin 11 */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS_12 /*!< Select pin 12 */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS_13 /*!< Select pin 13 */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS_14 /*!< Select pin 14 */
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS_15 /*!< Select pin 15 */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS_0 | GPIO_BSRR_BS_1  | GPIO_BSRR_BS_2  | \
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_3  | GPIO_BSRR_BS_4  | GPIO_BSRR_BS_5  | \
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_6  | GPIO_BSRR_BS_7  | GPIO_BSRR_BS_8  | \
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_9  | GPIO_BSRR_BS_10 | GPIO_BSRR_BS_11 | \
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_12 | GPIO_BSRR_BS_13 | GPIO_BSRR_BS_14 | \
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                            GPIO_BSRR_BS_15) /*!< Select all pins */
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 ((uint32_t)0x00000000U) /*!< Select input mode */
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            ((uint32_t)0x00000000U) /*!< Select push-pull as output 
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT_0 /*!< Select open-drain as output type *
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             ((uint32_t)0x00000000U) /*!< Select I/O low output speed
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDER_OSPEED0_0 /*!< Select I/O medium output sp
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDER_OSPEED0_1 /*!< Select I/O fast output spee
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDER_OSPEED0   /*!< Select I/O high output spee
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
ARM GAS  /tmp/cc0giX7U.s 			page 46


 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    ((uint32_t)0x00000000U) /*!< Select I/O no pull */
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_0                       ((uint32_t)0x0000000U) /*!< Select alternate function 0 
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_1                       ((uint32_t)0x0000001U) /*!< Select alternate function 1 
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_2                       ((uint32_t)0x0000002U) /*!< Select alternate function 2 
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_3                       ((uint32_t)0x0000003U) /*!< Select alternate function 3 
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_4                       ((uint32_t)0x0000004U) /*!< Select alternate function 4 
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_5                       ((uint32_t)0x0000005U) /*!< Select alternate function 5 
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_6                       ((uint32_t)0x0000006U) /*!< Select alternate function 6 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_AF_7                       ((uint32_t)0x0000007U) /*!< Select alternate function 7 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Register value
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 47


 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODE0), ((Pin * Pin) * Mode));
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
ARM GAS  /tmp/cc0giX7U.s 			page 48


 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODE0)) / (Pin * Pin));
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
ARM GAS  /tmp/cc0giX7U.s 			page 49


 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) / Pin);
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  /tmp/cc0giX7U.s 			page 50


 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDER_OSPEED0), ((Pin * Pin) * Speed));
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDER_OSPEED0)) / (Pin * Pin));
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  /tmp/cc0giX7U.s 			page 51


 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPD0), ((Pin * Pin) * Pull));
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 52


 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPD0)) / (Pin * Pin));
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFRL0),
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****              ((((Pin * Pin) * Pin) * Pin) * Alternate));
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_GetAFPin_0_7
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
ARM GAS  /tmp/cc0giX7U.s 			page 53


 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin)
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[0],
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                              ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFRL0)) / (((Pin * Pin) * Pin
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_SetAFPin_8_15
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[1], (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * GPIO_AFR
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****              (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * Alternate));
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return gpio alternate function of a dedicated pin from 8 to 15 for a dedicated port.
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll AFRH         AFSELy        LL_GPIO_GetAFPin_8_15
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
ARM GAS  /tmp/cc0giX7U.s 			page 54


 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetAFPin_8_15(GPIO_TypeDef *GPIOx, uint32_t Pin)
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->AFR[1],
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                              (((((Pin >> 8U) * (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)) * GPIO_AF
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****                                  (Pin >> 8U)) * (Pin >> 8U)) * (Pin >> 8U)));
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Lock configuration of several pins for a dedicated port.
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   When the lock sequence has been applied on a port bit, the
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         value of this port bit can no longer be modified until the
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         next reset.
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @note   Each lock bit freezes a specific configuration register
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         (control and alternate function registers).
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_LockPin
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_LockPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   __IO uint32_t temp;
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, PinMask);
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->LCKR, GPIO_LCKR_LCKK | PinMask);
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   temp = READ_REG(GPIOx->LCKR);
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   (void) temp;
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return 1 if all pins passed as parameter, of a dedicated port, are locked. else Return 
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKy          LL_GPIO_IsPinLocked
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  /tmp/cc0giX7U.s 			page 55


 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsPinLocked(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, PinMask) == (PinMask));
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return 1 if one of the pin of a dedicated port is locked. else return 0.
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll LCKR         LCKK          LL_GPIO_IsAnyPinLocked
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsAnyPinLocked(GPIO_TypeDef *GPIOx)
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->LCKR, GPIO_LCKR_LCKK) == (GPIO_LCKR_LCKK));
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @}
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Data_Access Data Access
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @{
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return full input data register value for a dedicated port.
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_ReadInputPort
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Input data register value of port
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadInputPort(GPIO_TypeDef *GPIOx)
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->IDR));
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
ARM GAS  /tmp/cc0giX7U.s 			page 56


 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll IDR          IDy           LL_GPIO_IsInputPinSet
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsInputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->IDR, PinMask) == (PinMask));
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Write output data register for the port.
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_WriteOutputPort
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PortValue Level value for each pin of the port
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_WriteOutputPort(GPIO_TypeDef *GPIOx, uint32_t PortValue)
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->ODR, PortValue);
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return full output data register value for a dedicated port.
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_ReadOutputPort
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval Output data register value of port
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_ReadOutputPort(GPIO_TypeDef *GPIOx)
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (uint32_t)(READ_REG(GPIOx->ODR));
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Return if input data level for several pins of dedicated port is high or low.
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll ODR          ODy           LL_GPIO_IsOutputPinSet
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
ARM GAS  /tmp/cc0giX7U.s 			page 57


 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval State of bit (1 or 0).
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_IsOutputPinSet(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   return (READ_BIT(GPIOx->ODR, PinMask) == (PinMask));
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Set several pins to high level on dedicated gpio port.
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll BSRR         BSy           LL_GPIO_SetOutputPin
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->BSRR, PinMask);
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** }
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** 
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** /**
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @brief  Set several pins to low level on dedicated gpio port.
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @rmtoll BRR          BRy           LL_GPIO_ResetOutputPin
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
ARM GAS  /tmp/cc0giX7U.s 			page 58


 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   * @retval None
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   */
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_ResetOutputPin(GPIO_TypeDef *GPIOx, uint32_t PinMask)
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h **** {
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h ****   WRITE_REG(GPIOx->BRR, PinMask);
 255              		.loc 4 890 0
 256 0036 0848     		ldr	r0, .L8+4
 257 0038 0823     		movs	r3, #8
 258 003a 8362     		str	r3, [r0, #40]
 259              	.LVL14:
 260              	.LBE119:
 261              	.LBE118:
 299:Src/main.c    **** 
 300:Src/main.c    ****   LL_GPIO_InitTypeDef GPIO_InitStruct;
 301:Src/main.c    **** 
 302:Src/main.c    ****   /* GPIO Ports Clock Enable */
 303:Src/main.c    ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOC);
 304:Src/main.c    ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOA);
 305:Src/main.c    ****   LL_IOP_GRP1_EnableClock(LL_IOP_GRP1_PERIPH_GPIOB);
 306:Src/main.c    **** 
 307:Src/main.c    ****   /**/
 308:Src/main.c    ****   LL_GPIO_ResetOutputPin(LD3_GPIO_Port, LD3_Pin);
 309:Src/main.c    **** 
 310:Src/main.c    ****   /**/
 311:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin;
 262              		.loc 1 311 0
 263 003c 0493     		str	r3, [sp, #16]
 312:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_OUTPUT;
 264              		.loc 1 312 0
 265 003e 0591     		str	r1, [sp, #20]
 313:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_LOW;
 266              		.loc 1 313 0
 267 0040 0023     		movs	r3, #0
 268 0042 0693     		str	r3, [sp, #24]
 314:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 269              		.loc 1 314 0
 270 0044 0793     		str	r3, [sp, #28]
 315:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 271              		.loc 1 315 0
 272 0046 0893     		str	r3, [sp, #32]
 316:Src/main.c    ****   LL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/cc0giX7U.s 			page 59


 273              		.loc 1 316 0
 274 0048 04A9     		add	r1, sp, #16
 275 004a FFF7FEFF 		bl	LL_GPIO_Init
 276              	.LVL15:
 317:Src/main.c    **** 
 318:Src/main.c    **** }
 277              		.loc 1 318 0
 278 004e 0BB0     		add	sp, sp, #44
 279              		@ sp needed
 280 0050 00BD     		pop	{pc}
 281              	.L9:
 282 0052 C046     		.align	2
 283              	.L8:
 284 0054 00100240 		.word	1073876992
 285 0058 00040050 		.word	1342178304
 286              		.cfi_endproc
 287              	.LFE625:
 289              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.code	16
 293              		.thumb_func
 294              		.fpu softvfp
 296              	MX_USART2_UART_Init:
 297              	.LFB623:
 192:Src/main.c    **** 
 298              		.loc 1 192 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 56
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 303              	.LCFI4:
 304              		.cfi_def_cfa_offset 20
 305              		.cfi_offset 4, -20
 306              		.cfi_offset 5, -16
 307              		.cfi_offset 6, -12
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 D646     		mov	lr, r10
 311 0004 4F46     		mov	r7, r9
 312 0006 4646     		mov	r6, r8
 313 0008 C0B5     		push	{r6, r7, lr}
 314              	.LCFI5:
 315              		.cfi_def_cfa_offset 32
 316              		.cfi_offset 8, -32
 317              		.cfi_offset 9, -28
 318              		.cfi_offset 10, -24
 319 000a 8EB0     		sub	sp, sp, #56
 320              	.LCFI6:
 321              		.cfi_def_cfa_offset 88
 322              	.LVL16:
 323              	.LBB120:
 324              	.LBB121:
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 325              		.loc 2 459 0
 326 000c 4B4A     		ldr	r2, .L11
 327 000e 916B     		ldr	r1, [r2, #56]
ARM GAS  /tmp/cc0giX7U.s 			page 60


 328 0010 8020     		movs	r0, #128
 329 0012 8002     		lsls	r0, r0, #10
 330 0014 0143     		orrs	r1, r0
 331 0016 9163     		str	r1, [r2, #56]
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 332              		.loc 2 461 0
 333 0018 936B     		ldr	r3, [r2, #56]
 334 001a 0340     		ands	r3, r0
 335 001c 0093     		str	r3, [sp]
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 336              		.loc 2 462 0
 337 001e 009B     		ldr	r3, [sp]
 338              	.LVL17:
 339              	.LBE121:
 340              	.LBE120:
 205:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 341              		.loc 1 205 0
 342 0020 0425     		movs	r5, #4
 343 0022 0195     		str	r5, [sp, #4]
 206:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 344              		.loc 1 206 0
 345 0024 0226     		movs	r6, #2
 346 0026 0296     		str	r6, [sp, #8]
 207:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 347              		.loc 1 207 0
 348 0028 0327     		movs	r7, #3
 349 002a 0397     		str	r7, [sp, #12]
 208:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 350              		.loc 1 208 0
 351 002c 0024     		movs	r4, #0
 352 002e 0494     		str	r4, [sp, #16]
 209:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 353              		.loc 1 209 0
 354 0030 0594     		str	r4, [sp, #20]
 210:Src/main.c    ****   LL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 355              		.loc 1 210 0
 356 0032 0695     		str	r5, [sp, #24]
 211:Src/main.c    **** 
 357              		.loc 1 211 0
 358 0034 01A9     		add	r1, sp, #4
 359 0036 A020     		movs	r0, #160
 360 0038 C005     		lsls	r0, r0, #23
 361 003a FFF7FEFF 		bl	LL_GPIO_Init
 362              	.LVL18:
 213:Src/main.c    ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ALTERNATE;
 363              		.loc 1 213 0
 364 003e 8023     		movs	r3, #128
 365 0040 1B02     		lsls	r3, r3, #8
 366 0042 0193     		str	r3, [sp, #4]
 214:Src/main.c    ****   GPIO_InitStruct.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 367              		.loc 1 214 0
 368 0044 0296     		str	r6, [sp, #8]
 215:Src/main.c    ****   GPIO_InitStruct.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 369              		.loc 1 215 0
 370 0046 0397     		str	r7, [sp, #12]
 216:Src/main.c    ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 371              		.loc 1 216 0
ARM GAS  /tmp/cc0giX7U.s 			page 61


 372 0048 0494     		str	r4, [sp, #16]
 217:Src/main.c    ****   GPIO_InitStruct.Alternate = LL_GPIO_AF_4;
 373              		.loc 1 217 0
 374 004a 0594     		str	r4, [sp, #20]
 218:Src/main.c    ****   LL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 375              		.loc 1 218 0
 376 004c 0695     		str	r5, [sp, #24]
 219:Src/main.c    **** 
 377              		.loc 1 219 0
 378 004e 01A9     		add	r1, sp, #4
 379 0050 A020     		movs	r0, #160
 380 0052 C005     		lsls	r0, r0, #23
 381 0054 FFF7FEFF 		bl	LL_GPIO_Init
 382              	.LVL19:
 383              	.LBB122:
 384              	.LBB123:
 385              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @file    stm32l0xx_ll_dma.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *      without specific prior written permission.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   ******************************************************************************
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #ifndef __STM32L0xx_LL_DMA_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __STM32L0xx_LL_DMA_H
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #ifdef __cplusplus
ARM GAS  /tmp/cc0giX7U.s 			page 62


  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** extern "C" {
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #include "stm32l0xx.h"
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @addtogroup STM32L0xx_LL_Driver
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined (DMA1)
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*DMA1_Channel6*/
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*DMA1_Channel7*/
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** };
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Constants DMA Private Constants
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Define used to get CSELR register offset */
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define DMA_CSELR_OFFSET                  (uint32_t)(DMA1_CSELR_BASE - DMA1_BASE)
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Defines used for the bit position in the register and perform offsets */
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define DMA_POSITION_CSELR_CXS            ((Channel-1U)*4U)
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
ARM GAS  /tmp/cc0giX7U.s 			page 63


  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** typedef struct
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         is incremented or not.
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         is incremented or not.
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
ARM GAS  /tmp/cc0giX7U.s 			page 64


 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_REQUEST
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
ARM GAS  /tmp/cc0giX7U.s 			page 65


 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 66


 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  ((uint32_t)0x00000001U) /*!< DMA Channel 1 */
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  ((uint32_t)0x00000002U) /*!< DMA Channel 2 */
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  ((uint32_t)0x00000003U) /*!< DMA Channel 3 */
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  ((uint32_t)0x00000004U) /*!< DMA Channel 4 */
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  ((uint32_t)0x00000005U) /*!< DMA Channel 5 */
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  ((uint32_t)0x00000006U) /*!< DMA Channel 6 */
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  ((uint32_t)0x00000007U) /*!< DMA Channel 7 */
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                ((uint32_t)0xFFFF0000U) /*!< DMA Channel all (used only f
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY ((uint32_t)0x00000000U) /*!< Peripheral to memory directi
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                ((uint32_t)0x00000000U) /*!< Normal Mode                 
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         ((uint32_t)0x00000000U) /*!< Peripheral increment mode Di
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
ARM GAS  /tmp/cc0giX7U.s 			page 67


 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         ((uint32_t)0x00000000U) /*!< Memory increment mode Disabl
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            ((uint32_t)0x00000000U) /*!< Peripheral data alignment : 
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            ((uint32_t)0x00000000U) /*!< Memory data alignment : Byte
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               ((uint32_t)0x00000000U) /*!< Priority level : Low       *
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_REQUEST Transfer peripheral request
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_0                  ((uint32_t)0x00000000U) /*!< DMA peripheral request 0  */
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_1                  ((uint32_t)0x00000001U) /*!< DMA peripheral request 1  */
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_2                  ((uint32_t)0x00000002U) /*!< DMA peripheral request 2  */
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_3                  ((uint32_t)0x00000003U) /*!< DMA peripheral request 3  */
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_4                  ((uint32_t)0x00000004U) /*!< DMA peripheral request 4  */
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_5                  ((uint32_t)0x00000005U) /*!< DMA peripheral request 5  */
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_6                  ((uint32_t)0x00000006U) /*!< DMA peripheral request 6  */
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_7                  ((uint32_t)0x00000007U) /*!< DMA peripheral request 7  */
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_8                  ((uint32_t)0x00000008U) /*!< DMA peripheral request 8  */
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_9                  ((uint32_t)0x00000009U) /*!< DMA peripheral request 9  */
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_10                 ((uint32_t)0x0000000AU) /*!< DMA peripheral request 10 */
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_11                 ((uint32_t)0x0000000BU) /*!< DMA peripheral request 11 */
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_12                 ((uint32_t)0x0000000CU) /*!< DMA peripheral request 12 */
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_13                 ((uint32_t)0x0000000DU) /*!< DMA peripheral request 13 */
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_14                 ((uint32_t)0x0000000EU) /*!< DMA peripheral request 14 */
ARM GAS  /tmp/cc0giX7U.s 			page 68


 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_REQUEST_15                 ((uint32_t)0x0000000FU) /*!< DMA peripheral request 15 */
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Write a value in DMA register
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __REG__ Register to be written
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Read a value in DMA register
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __REG__ Register to be read
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Register value
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval DMAx
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
ARM GAS  /tmp/cc0giX7U.s 			page 69


 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  LL_DMA_CHANNEL_6)
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #else
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  LL_DMA_CHANNEL_5)
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval DMAx_Channely
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #if defined (DMA1_Channel6) && defined (DMA1_Channel7)
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  DMA1_Channel7)
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #elif defined (DMA1_Channel6)
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  DMA1_Channel6)
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #else
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  DMA1_Channel5)
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** #endif /* DMA1_Channel6 && DMA1_Channel7 */
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 70


 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @}
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  * @{
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****  */
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @{
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Enable DMA channel.
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])))-
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Disable DMA channel.
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U]))
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /tmp/cc0giX7U.s 			page 71


 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_EN) == (DMA_CCR_EN));
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Configuration);
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /tmp/cc0giX7U.s 			page 72


 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
ARM GAS  /tmp/cc0giX7U.s 			page 73


 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Mode);
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_CIRC));
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
ARM GAS  /tmp/cc0giX7U.s 			page 74


 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_PINC));
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
ARM GAS  /tmp/cc0giX7U.s 			page 75


 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_MINC));
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Peripheral size.
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Peripheral size.
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Memory size.
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
ARM GAS  /tmp/cc0giX7U.s 			page 76


 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Memory size.
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Channel priority level.
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
ARM GAS  /tmp/cc0giX7U.s 			page 77


 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Priority);
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Channel priority level.
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CCR_PL));
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   This action has no effect if
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         channel is enabled.
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
ARM GAS  /tmp/cc0giX7U.s 			page 78


 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         remaining bytes to be transmitted.
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CNDTR_NDT));
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Each IP using DMA provides an API to get directly the register adress (LL_PPP_DMA_GetRe
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   /* Direction Memory to Periph */
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   {
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                SrcAddress);
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                DstAddress);
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   }
ARM GAS  /tmp/cc0giX7U.s 			page 79


1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   else
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   {
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                SrcAddress);
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                DstAddress);
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   }
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Memory address.
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryAddress);
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Peripheral address.
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphAddress);
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Memory address.
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
ARM GAS  /tmp/cc0giX7U.s 			page 80


1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CMAR_MA));
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get Peripheral address.
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CPAR_PA));
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 81


1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryAddress);
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel - 1U])
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryAddress);
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CPAR_PA));
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
ARM GAS  /tmp/cc0giX7U.s 			page 82


1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)((uint32_t)((uint32_t)DMAx + CHANNEL_OFFSET_TAB[Channel 
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****                    DMA_CMAR_MA));
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** }
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** 
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** /**
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @brief  Set DMA request for DMA instance on Channel x.
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @note   Please refer to Reference Manual to get the available mapping of Request value link to 
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @rmtoll CSELR        C1S           LL_DMA_SetPeriphRequest\n
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C2S           LL_DMA_SetPeriphRequest\n
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C3S           LL_DMA_SetPeriphRequest\n
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C4S           LL_DMA_SetPeriphRequest\n
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C5S           LL_DMA_SetPeriphRequest\n
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C6S           LL_DMA_SetPeriphRequest\n
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         CSELR        C7S           LL_DMA_SetPeriphRequest
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @param  PeriphRequest This parameter can be one of the following values:
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_0
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_1
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_2
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_3
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_4
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_5
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_6
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_7
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_8
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_9
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_10
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_11
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_12
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_13
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_14
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   *         @arg @ref LL_DMA_REQUEST_15
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   * @retval None
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   */
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphRe
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h **** {
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****   MODIFY_REG(((DMA_Request_TypeDef *)((uint32_t)((uint32_t)DMAx + DMA_CSELR_OFFSET)))->CSELR,
 386              		.loc 5 1232 0
 387 0058 3949     		ldr	r1, .L11+4
 388 005a 0B68     		ldr	r3, [r1]
 389 005c 394A     		ldr	r2, .L11+8
 390 005e 1A40     		ands	r2, r3
ARM GAS  /tmp/cc0giX7U.s 			page 83


 391 0060 8023     		movs	r3, #128
 392 0062 DB00     		lsls	r3, r3, #3
 393 0064 1343     		orrs	r3, r2
 394 0066 0B60     		str	r3, [r1]
 395              	.LVL20:
 396              	.LBE123:
 397              	.LBE122:
 398              	.LBB124:
 399              	.LBB125:
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 400              		.loc 5 624 0
 401 0068 374B     		ldr	r3, .L11+12
 402 006a 1A68     		ldr	r2, [r3]
 403 006c 3748     		ldr	r0, .L11+16
 404 006e 8046     		mov	r8, r0
 405 0070 0240     		ands	r2, r0
 406 0072 1A60     		str	r2, [r3]
 407              	.LVL21:
 408              	.LBE125:
 409              	.LBE124:
 410              	.LBB126:
 411              	.LBB127:
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Priority);
 412              		.loc 5 904 0
 413 0074 1A68     		ldr	r2, [r3]
 414 0076 3648     		ldr	r0, .L11+20
 415 0078 8446     		mov	ip, r0
 416 007a 0240     		ands	r2, r0
 417 007c 1A60     		str	r2, [r3]
 418              	.LVL22:
 419              	.LBE127:
 420              	.LBE126:
 421              	.LBB128:
 422              	.LBB129:
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Mode);
 423              		.loc 5 673 0
 424 007e 1A68     		ldr	r2, [r3]
 425 0080 1D37     		adds	r7, r7, #29
 426 0082 BA43     		bics	r2, r7
 427 0084 1A60     		str	r2, [r3]
 428              	.LVL23:
 429              	.LBE129:
 430              	.LBE128:
 431              	.LBB130:
 432              	.LBB131:
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 433              		.loc 5 718 0
 434 0086 1868     		ldr	r0, [r3]
 435 0088 4022     		movs	r2, #64
 436 008a 9043     		bics	r0, r2
 437 008c 1860     		str	r0, [r3]
 438              	.LVL24:
 439              	.LBE131:
 440              	.LBE130:
 441              	.LBB132:
 442              	.LBB133:
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
ARM GAS  /tmp/cc0giX7U.s 			page 84


 443              		.loc 5 763 0
 444 008e 1D68     		ldr	r5, [r3]
 445 0090 8020     		movs	r0, #128
 446 0092 8543     		bics	r5, r0
 447 0094 0543     		orrs	r5, r0
 448 0096 1D60     		str	r5, [r3]
 449              	.LVL25:
 450              	.LBE133:
 451              	.LBE132:
 452              	.LBB134:
 453              	.LBB135:
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 454              		.loc 5 809 0
 455 0098 1D68     		ldr	r5, [r3]
 456 009a 2E4E     		ldr	r6, .L11+24
 457 009c B246     		mov	r10, r6
 458 009e 3540     		ands	r5, r6
 459 00a0 1D60     		str	r5, [r3]
 460              	.LVL26:
 461              	.LBE135:
 462              	.LBE134:
 463              	.LBB136:
 464              	.LBB137:
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 465              		.loc 5 856 0
 466 00a2 1D68     		ldr	r5, [r3]
 467 00a4 A946     		mov	r9, r5
 468 00a6 2C4D     		ldr	r5, .L11+28
 469 00a8 4E46     		mov	r6, r9
 470 00aa 2E40     		ands	r6, r5
 471 00ac 1E60     		str	r6, [r3]
 472              	.LVL27:
 473              	.LBE137:
 474              	.LBE136:
 475              	.LBB138:
 476              	.LBB139:
 477              		.loc 5 1232 0
 478 00ae 0B68     		ldr	r3, [r1]
 479 00b0 F026     		movs	r6, #240
 480 00b2 B343     		bics	r3, r6
 481 00b4 1343     		orrs	r3, r2
 482 00b6 0B60     		str	r3, [r1]
 483              	.LVL28:
 484              	.LBE139:
 485              	.LBE138:
 486              	.LBB140:
 487              	.LBB141:
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 488              		.loc 5 624 0
 489 00b8 284B     		ldr	r3, .L11+32
 490 00ba 1968     		ldr	r1, [r3]
 491 00bc 4646     		mov	r6, r8
 492 00be 3140     		ands	r1, r6
 493 00c0 1026     		movs	r6, #16
 494 00c2 3143     		orrs	r1, r6
 495 00c4 1960     		str	r1, [r3]
 496              	.LVL29:
ARM GAS  /tmp/cc0giX7U.s 			page 85


 497              	.LBE141:
 498              	.LBE140:
 499              	.LBB142:
 500              	.LBB143:
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Priority);
 501              		.loc 5 904 0
 502 00c6 1968     		ldr	r1, [r3]
 503 00c8 6646     		mov	r6, ip
 504 00ca 3140     		ands	r1, r6
 505 00cc 1960     		str	r1, [r3]
 506              	.LVL30:
 507              	.LBE143:
 508              	.LBE142:
 509              	.LBB144:
 510              	.LBB145:
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              Mode);
 511              		.loc 5 673 0
 512 00ce 1968     		ldr	r1, [r3]
 513 00d0 B943     		bics	r1, r7
 514 00d2 1960     		str	r1, [r3]
 515              	.LVL31:
 516              	.LBE145:
 517              	.LBE144:
 518              	.LBB146:
 519              	.LBB147:
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 520              		.loc 5 718 0
 521 00d4 1968     		ldr	r1, [r3]
 522 00d6 9143     		bics	r1, r2
 523 00d8 1960     		str	r1, [r3]
 524              	.LVL32:
 525              	.LBE147:
 526              	.LBE146:
 527              	.LBB148:
 528              	.LBB149:
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 529              		.loc 5 763 0
 530 00da 1A68     		ldr	r2, [r3]
 531 00dc 8243     		bics	r2, r0
 532 00de 0243     		orrs	r2, r0
 533 00e0 1A60     		str	r2, [r3]
 534              	.LVL33:
 535              	.LBE149:
 536              	.LBE148:
 537              	.LBB150:
 538              	.LBB151:
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 539              		.loc 5 809 0
 540 00e2 1A68     		ldr	r2, [r3]
 541 00e4 5646     		mov	r6, r10
 542 00e6 1640     		ands	r6, r2
 543 00e8 1E60     		str	r6, [r3]
 544              	.LVL34:
 545              	.LBE151:
 546              	.LBE150:
 547              	.LBB152:
 548              	.LBB153:
ARM GAS  /tmp/cc0giX7U.s 			page 86


 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 549              		.loc 5 856 0
 550 00ea 1A68     		ldr	r2, [r3]
 551 00ec 1540     		ands	r5, r2
 552 00ee 1D60     		str	r5, [r3]
 553              	.LVL35:
 554              	.LBE153:
 555              	.LBE152:
 257:Src/main.c    ****   USART_InitStruct.DataWidth = LL_USART_DATAWIDTH_8B;
 556              		.loc 1 257 0
 557 00f0 E123     		movs	r3, #225
 558 00f2 5B02     		lsls	r3, r3, #9
 559 00f4 0793     		str	r3, [sp, #28]
 258:Src/main.c    ****   USART_InitStruct.StopBits = LL_USART_STOPBITS_1;
 560              		.loc 1 258 0
 561 00f6 0894     		str	r4, [sp, #32]
 259:Src/main.c    ****   USART_InitStruct.Parity = LL_USART_PARITY_NONE;
 562              		.loc 1 259 0
 563 00f8 0994     		str	r4, [sp, #36]
 260:Src/main.c    ****   USART_InitStruct.TransferDirection = LL_USART_DIRECTION_TX_RX;
 564              		.loc 1 260 0
 565 00fa 0A94     		str	r4, [sp, #40]
 261:Src/main.c    ****   USART_InitStruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 566              		.loc 1 261 0
 567 00fc 0C23     		movs	r3, #12
 568 00fe 0B93     		str	r3, [sp, #44]
 262:Src/main.c    ****   USART_InitStruct.OverSampling = LL_USART_OVERSAMPLING_16;
 569              		.loc 1 262 0
 570 0100 0C94     		str	r4, [sp, #48]
 263:Src/main.c    ****   LL_USART_Init(USART2, &USART_InitStruct);
 571              		.loc 1 263 0
 572 0102 0D94     		str	r4, [sp, #52]
 264:Src/main.c    **** 
 573              		.loc 1 264 0
 574 0104 164C     		ldr	r4, .L11+36
 575 0106 07A9     		add	r1, sp, #28
 576 0108 2000     		movs	r0, r4
 577 010a FFF7FEFF 		bl	LL_USART_Init
 578              	.LVL36:
 579              	.LBB154:
 580              	.LBB155:
 581              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @file    stm32l0xx_ll_usart.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
ARM GAS  /tmp/cc0giX7U.s 			page 87


  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *      without specific prior written permission.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ******************************************************************************
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #ifndef __STM32L0xx_LL_USART_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define __STM32L0xx_LL_USART_H
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #ifdef __cplusplus
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** extern "C" {
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #include "stm32l0xx.h"
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @addtogroup STM32L0xx_LL_Driver
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART4) || defined (USART5)
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL USART
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Defines used for the bit position in the register and perform offsets*/
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define USART_POSITION_CR1_DEDT                 (uint32_t)16
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define USART_POSITION_CR1_DEAT                 (uint32_t)21
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define USART_POSITION_CR2_ADD                  (uint32_t)24
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define USART_POSITION_CR3_SCARCNT              (uint32_t)17
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define USART_POSITION_RTOR_BLEN                (uint32_t)24
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define USART_POSITION_GTPR_GT                  (uint32_t)8
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 88


  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** typedef struct
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
ARM GAS  /tmp/cc0giX7U.s 			page 89


 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** } LL_USART_InitTypeDef;
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** typedef struct
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error fla
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error fl
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_NCF                        USART_ICR_NCF                 /*!< Noise detected f
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error fl
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
ARM GAS  /tmp/cc0giX7U.s 			page 90


 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_TCBGTCF                    USART_ICR_TCBGTCF             /*!< Transmission com
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS flag */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block fla
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TCBGT                      USART_ISR_TCBGT               /*!< Transmission com
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
ARM GAS  /tmp/cc0giX7U.s 			page 91


 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_TCBGTIE                    USART_CR3_TCBGTIE             /*!< Transmission com
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 (uint32_t)0x00000000U              /*!< Transmitter
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    (uint32_t)0x00000000U                /*!< Parity co
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                (uint32_t)0x00000000U /*!<  USART wake up from Mute
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   (uint32_t)0x00000000U   /*!< 8 bits word length : S
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                (uint32_t)0x00000000U  /*!< Oversampling by 16 */
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 92


 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  (uint32_t)0x00000000U  /*!< Clock signal not provid
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         (uint32_t)0x00000000U /*!< The clock pulse of the l
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    (uint32_t)0x00000000U /*!< The first clock transiti
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   (uint32_t)0x00000000U /*!< Steady low value on SCLK
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     (uint32_t)0x00000000U                      /*!< 1 s
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  (uint32_t)0x00000000U /*!< TX/RX pins are used as d
ARM GAS  /tmp/cc0giX7U.s 			page 93


 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           (uint32_t)0x00000000U /*!< RX pin signal works usin
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           (uint32_t)0x00000000U /*!< TX pin signal works usin
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          (uint32_t)0x00000000U /*!< Logical data from the da
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              (uint32_t)0x00000000U /*!< data is transmitted/rece
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    (uint32_t)0x00000000U                       /*!< Me
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              (uint32_t)0x00000000U /*!< 4-bit address detection 
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
ARM GAS  /tmp/cc0giX7U.s 			page 94


 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 (uint32_t)0x00000000U                /*!< CTS and R
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              (uint32_t)0x00000000U                   /*!< Wake u
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              (uint32_t)0x00000000U /*!< IrDA normal power mode *
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            (uint32_t)0x00000000U /*!< 10-bit break detection m
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               (uint32_t)0x00000000U /*!< DE signal is active high
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          (uint32_t)0U          /*!< Get address of data regi
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           (uint32_t)1U          /*!< Get address of data regi
ARM GAS  /tmp/cc0giX7U.s 			page 95


 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Write a value in USART register
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __REG__ Register to be written
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Read a value in USART register
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __REG__ Register to be read
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Register value
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2) + ((__BAUDRATE_
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 96


 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART Enable
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 97


 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UESM);
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM));
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Receiver Disable
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
ARM GAS  /tmp/cc0giX7U.s 			page 98


 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Transmitter Enable
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Transmitter Disable
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         of Transmitter and Receiver
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 99


 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/cc0giX7U.s 			page 100


 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_MME);
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 101


 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME));
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Oversampling mode
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
ARM GAS  /tmp/cc0giX7U.s 			page 102


 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
ARM GAS  /tmp/cc0giX7U.s 			page 103


 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/cc0giX7U.s 			page 104


 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
ARM GAS  /tmp/cc0giX7U.s 			page 105


1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                               uint32_t StopBits)
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
ARM GAS  /tmp/cc0giX7U.s 			page 106


1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/cc0giX7U.s 			page 107


1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
ARM GAS  /tmp/cc0giX7U.s 			page 108


1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN));
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
ARM GAS  /tmp/cc0giX7U.s 			page 109


1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
ARM GAS  /tmp/cc0giX7U.s 			page 110


1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN));
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         for wake up with address mark detection.
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         value and CMF flag is set on match)
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_POSITION_CR2_ADD)));
1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_POSITION_CR2_ADD);
1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
ARM GAS  /tmp/cc0giX7U.s 			page 111


1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 112


1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
ARM GAS  /tmp/cc0giX7U.s 			page 113


1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Overrun detection
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Overrun detection
1523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
 582              		.loc 6 1529 0
 583 010e A268     		ldr	r2, [r4, #8]
 584 0110 8023     		movs	r3, #128
 585 0112 5B01     		lsls	r3, r3, #5
 586 0114 1343     		orrs	r3, r2
 587 0116 A360     		str	r3, [r4, #8]
 588              	.LVL37:
 589              	.LBE155:
 590              	.LBE154:
 591              	.LBB156:
 592              	.LBB157:
1530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS);
1541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 114


1544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (Baud rate value != 0)
1582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                           uint32_t BaudRate)
1593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   register uint32_t brrtemp = 0x0U;
1596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
ARM GAS  /tmp/cc0giX7U.s 			page 115


1601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
1603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   else
1605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Baud Rate
1621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   register uint32_t brrresult = 0x0U;
1626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     {
1633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     }
1636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   else
1638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     {
1641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     }
1643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (brrresult);
1645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
1649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
1650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
1655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
1657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
ARM GAS  /tmp/cc0giX7U.s 			page 116


1658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
1661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
1662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(USART_TypeDef *USARTx)
1666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
1668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Block Length value in reception
1672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
1673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
1675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
1678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_POSITION_RTOR_BLEN);
1680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Get Block Length value in reception
1684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
1685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
1687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(USART_TypeDef *USARTx)
1689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_POSITION_RTOR_BLEN);
1691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
1695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
1699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable IrDA mode
1703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 117


1715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable IrDA mode
1716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 118


1772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
1802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
1806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 119


1829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 120


1886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
1891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
1892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
1893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
1894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
1895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
1896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
1898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
1901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_POSITION_CR3_SCARCNT);
1903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
1910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
1912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef *USARTx)
1914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_POSITION_CR3_SCARCNT);
1916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
ARM GAS  /tmp/cc0giX7U.s 			page 121


1943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_POSITION_GTPR_GT);
1960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
1964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_POSITION_GTPR_GT);
1974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
1978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
1981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
1982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
1989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
1993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /tmp/cc0giX7U.s 			page 122


2000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
2019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
2021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 123


2057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
2058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable LIN mode
2064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable LIN mode
2077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
2097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
2099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
ARM GAS  /tmp/cc0giX7U.s 			page 124


2114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_POSITION_CR1_DEDT);
2121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef *USARTx)
2132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_POSITION_CR1_DEDT);
2134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_POSITION_CR1_DEAT);
2148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
2152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef *USARTx)
2159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_POSITION_CR1_DEAT);
2161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 125


2171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef *USARTx)
2198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM));
2200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
2209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 126


2228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef *USARTx)
2229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
2243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
2259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
2267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
2270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
2271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 593              		.loc 6 2271 0
 594 0118 6368     		ldr	r3, [r4, #4]
 595 011a 124A     		ldr	r2, .L11+40
 596 011c 1340     		ands	r3, r2
 597 011e 6360     		str	r3, [r4, #4]
2272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 598              		.loc 6 2272 0
 599 0120 A368     		ldr	r3, [r4, #8]
 600 0122 2A22     		movs	r2, #42
 601 0124 9343     		bics	r3, r2
 602 0126 A360     		str	r3, [r4, #8]
 603              	.LVL38:
 604              	.LBE157:
ARM GAS  /tmp/cc0giX7U.s 			page 127


 605              	.LBE156:
 606              	.LBB158:
 607              	.LBB159:
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 608              		.loc 6 557 0
 609 0128 2368     		ldr	r3, [r4]
 610 012a 293A     		subs	r2, r2, #41
 611 012c 1343     		orrs	r3, r2
 612 012e 2360     		str	r3, [r4]
 613              	.LVL39:
 614              	.LBE159:
 615              	.LBE158:
 272:Src/main.c    **** 
 616              		.loc 1 272 0
 617 0130 0EB0     		add	sp, sp, #56
 618              		@ sp needed
 619 0132 1CBC     		pop	{r2, r3, r4}
 620 0134 9046     		mov	r8, r2
 621 0136 9946     		mov	r9, r3
 622 0138 A246     		mov	r10, r4
 623 013a F0BD     		pop	{r4, r5, r6, r7, pc}
 624              	.L12:
 625              		.align	2
 626              	.L11:
 627 013c 00100240 		.word	1073876992
 628 0140 A8000240 		.word	1073873064
 629 0144 FFF0FFFF 		.word	-3841
 630 0148 30000240 		.word	1073872944
 631 014c EFBFFFFF 		.word	-16401
 632 0150 FFCFFFFF 		.word	-12289
 633 0154 FFFCFFFF 		.word	-769
 634 0158 FFF3FFFF 		.word	-3073
 635 015c 1C000240 		.word	1073872924
 636 0160 00440040 		.word	1073759232
 637 0164 FFB7FFFF 		.word	-18433
 638              		.cfi_endproc
 639              	.LFE623:
 641              		.section	.text._Error_Handler,"ax",%progbits
 642              		.align	1
 643              		.global	_Error_Handler
 644              		.syntax unified
 645              		.code	16
 646              		.thumb_func
 647              		.fpu softvfp
 649              	_Error_Handler:
 650              	.LFB626:
 319:Src/main.c    **** 
 320:Src/main.c    **** /* USER CODE BEGIN 4 */
 321:Src/main.c    **** 
 322:Src/main.c    **** /* USER CODE END 4 */
 323:Src/main.c    **** 
 324:Src/main.c    **** /**
 325:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 326:Src/main.c    ****   * @param  file: The file name as string.
 327:Src/main.c    ****   * @param  line: The line in file as a number.
 328:Src/main.c    ****   * @retval None
 329:Src/main.c    ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 128


 330:Src/main.c    **** void _Error_Handler(char *file, int line)
 331:Src/main.c    **** {
 651              		.loc 1 331 0
 652              		.cfi_startproc
 653              		@ Volatile: function does not return.
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL40:
 658              	.L14:
 659 0000 FEE7     		b	.L14
 660              		.cfi_endproc
 661              	.LFE626:
 663              		.section	.text.SystemClock_Config,"ax",%progbits
 664              		.align	1
 665              		.global	SystemClock_Config
 666              		.syntax unified
 667              		.code	16
 668              		.thumb_func
 669              		.fpu softvfp
 671              	SystemClock_Config:
 672              	.LFB622:
 144:Src/main.c    **** 
 673              		.loc 1 144 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 144:Src/main.c    **** 
 677              		.loc 1 144 0
 678 0000 10B5     		push	{r4, lr}
 679              	.LCFI7:
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 4, -8
 682              		.cfi_offset 14, -4
 683              	.LVL41:
 684              	.LBB160:
 685              	.LBB161:
 686              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @file    stm32l0xx_ll_system.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief   Header file of SYSTEM LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   @verbatim
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ==============================================================================
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                      ##### How to use this driver #####
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****     [..]
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****     The LL SYSTEM driver contains a set of generic APIs that can be
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****     used by user:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****       (+) Some of the FLASH features need to be handled in the SYSTEM file.
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****       (+) Access to DBGCMU registers
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****       (+) Access to SYSCFG registers
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   @endverbatim
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ******************************************************************************
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @attention
ARM GAS  /tmp/cc0giX7U.s 			page 129


  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * Redistribution and use in source and binary forms, with or without modification,
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * are permitted provided that the following conditions are met:
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *      this list of conditions and the following disclaimer.
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *      this list of conditions and the following disclaimer in the documentation
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *      and/or other materials provided with the distribution.
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *      may be used to endorse or promote products derived from this software
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *      without specific prior written permission.
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   ******************************************************************************
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #ifndef __STM32L0xx_LL_SYSTEM_H
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define __STM32L0xx_LL_SYSTEM_H
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #ifdef __cplusplus
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** extern "C" {
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Includes ------------------------------------------------------------------*/
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #include "stm32l0xx.h"
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @addtogroup STM32L0xx_LL_Driver
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (FLASH) || defined (SYSCFG) || defined (DBGMCU)
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL SYSTEM
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private types -------------------------------------------------------------*/
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private variables ---------------------------------------------------------*/
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private constants ---------------------------------------------------------*/
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Private_Constants SYSTEM Private Constants
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 130


  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Defines used for position in the register */
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define DBGMCU_REVID_POSITION         (uint32_t)16U
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****  * @brief Power-down in Run mode Flash key
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****  */
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define FLASH_PDKEY1                  ((uint32_t)0x04152637U) /*!< Flash power down key1 */
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define FLASH_PDKEY2                  ((uint32_t)0xFAFBFCFDU) /*!< Flash power down key2: used with
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                    to unlock the RUN_PD bit in FLAS
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Private macros ------------------------------------------------------------*/
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported types ------------------------------------------------------------*/
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported constants --------------------------------------------------------*/
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Constants SYSTEM Exported Constants
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_REMAP SYSCFG Memory Remap
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** * @{
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** */
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_REMAP_FLASH              (uint32_t)0x00000000U                                 /*
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SYSTEMFLASH        SYSCFG_CFGR1_MEM_MODE_0                               /*
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_REMAP_SRAM               (SYSCFG_CFGR1_MEM_MODE_1 | SYSCFG_CFGR1_MEM_MODE_0)   /*
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_UFB)
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_BANKMODE SYSCFG Bank Mode
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK1           (uint32_t)0x00000000U     /*!< Flash Bank1 mapped at 0x0
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Flash Bank2 mapped at 0x0
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank1 mapped 
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank2 mapped 
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BANKMODE_BANK2           SYSCFG_CFGR1_UFB          /*!< Flash Bank2 mapped at 0x0
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Flash Bank1 mapped at 0x0
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank2 mapped 
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****                                                                           Data EEPROM Bank1 mapped 
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_UFB */
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_BOOTMODE SYSCFG Boot Mode
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** * @{
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** */
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BOOTMODE_FLASH           (uint32_t)0x00000000U                                 /*
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BOOTMODE_SYSTEMFLASH     SYSCFG_CFGR1_BOOT_MODE_0                              /*
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_BOOTMODE_SRAM            (SYSCFG_CFGR1_BOOT_MODE_1 | SYSCFG_CFGR1_BOOT_MODE_0) /*
ARM GAS  /tmp/cc0giX7U.s 			page 131


 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_CAPA)
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_CFGR2 SYSCFG VLCD Rail Connection
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD2_PB2           SYSCFG_CFGR2_CAPA_0       /*!< Connect PB2  pin to LCD_V
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD1_PB12          SYSCFG_CFGR2_CAPA_1       /*!< Connect PB12 pin to LCD_V
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD3_PB0           SYSCFG_CFGR2_CAPA_2       /*!< Connect PB0  pin to LCD_V
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (SYSCFG_CFGR2_CAPA_3)
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD1_PE11          SYSCFG_CFGR2_CAPA_3       /*!< Connect PE11 pin to LCD_V
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_CAPA_3 */
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (SYSCFG_CFGR2_CAPA_4)
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_CAPA_VLCD3_PE12          SYSCFG_CFGR2_CAPA_4       /*!< Connect PE12 pin to LCD_V
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_CAPA_4 */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_CAPA */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_I2C_FASTMODEPLUS SYSCFG I2C FASTMODEPLUS
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB6     SYSCFG_CFGR2_I2C_PB6_FMP  /*!< Enable Fast Mode Plus on 
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB7     SYSCFG_CFGR2_I2C_PB7_FMP  /*!< Enable Fast Mode Plus on 
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB8     SYSCFG_CFGR2_I2C_PB8_FMP  /*!< Enable Fast Mode Plus on 
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_PB9     SYSCFG_CFGR2_I2C_PB9_FMP  /*!< Enable Fast Mode Plus on 
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C1    SYSCFG_CFGR2_I2C1_FMP     /*!< Enable Fast Mode Plus on 
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_I2C2_FMP)
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C2    SYSCFG_CFGR2_I2C2_FMP     /*!< Enable Fast Mode Plus on 
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_I2C2_FMP */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_I2C3_FMP)
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_I2C_FASTMODEPLUS_I2C3    SYSCFG_CFGR2_I2C3_FMP     /*!< Enable Fast Mode Plus on 
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR2_I2C3_FMP */
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_VREFINT_CONTROL SYSCFG VREFINT Control
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_NONE        (uint32_t)0x00000000U             /*!< No pad connect
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_IO1         SYSCFG_CFGR3_VREF_OUT_0           /*!< PB0 connected 
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_IO2         SYSCFG_CFGR3_VREF_OUT_1           /*!< PB1 connected 
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_VREFINT_CONNECT_IO1_IO2     (SYSCFG_CFGR3_VREF_OUT_0 | SYSCFG_CFGR3_VREF_OUT_1)  
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_PORT SYSCFG EXTI Port
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTA               (uint32_t)0U              /*!< EXTI PORT A */
ARM GAS  /tmp/cc0giX7U.s 			page 132


 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTB               (uint32_t)1U              /*!< EXTI PORT B */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTC               (uint32_t)2U              /*!< EXTI PORT C */
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(GPIOD_BASE)
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTD               (uint32_t)3U              /*!< EXTI PORT D */
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*GPIOD_BASE*/
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(GPIOE_BASE)
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTE               (uint32_t)4U              /*!< EXTI PORT E */
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*GPIOE_BASE*/
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(GPIOH_BASE)
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_PORTH               (uint32_t)5U              /*!< EXTI PORT H */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*GPIOH_BASE*/
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_EXTI_LINE SYSCFG EXTI Line
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE0               (uint32_t)(0U  << 16U | 0U)  /*!< EXTI_POSITION_0  | EXT
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE1               (uint32_t)(4U  << 16U | 0U)  /*!< EXTI_POSITION_4  | EXT
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE2               (uint32_t)(8U  << 16U | 0U)  /*!< EXTI_POSITION_8  | EXT
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE3               (uint32_t)(12U << 16U | 0U)  /*!< EXTI_POSITION_12 | EXT
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE4               (uint32_t)(0U  << 16U | 1U)  /*!< EXTI_POSITION_0  | EXT
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE5               (uint32_t)(4U  << 16U | 1U)  /*!< EXTI_POSITION_4  | EXT
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE6               (uint32_t)(8U  << 16U | 1U)  /*!< EXTI_POSITION_8  | EXT
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE7               (uint32_t)(12U << 16U | 1U)  /*!< EXTI_POSITION_12 | EXT
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE8               (uint32_t)(0U  << 16U | 2U)  /*!< EXTI_POSITION_0  | EXT
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE9               (uint32_t)(4U  << 16U | 2U)  /*!< EXTI_POSITION_4  | EXT
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE10              (uint32_t)(8U  << 16U | 2U)  /*!< EXTI_POSITION_8  | EXT
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE11              (uint32_t)(12U << 16U | 2U)  /*!< EXTI_POSITION_12 | EXT
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE12              (uint32_t)(0U  << 16U | 3U)  /*!< EXTI_POSITION_0  | EXT
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE13              (uint32_t)(4U  << 16U | 3U)  /*!< EXTI_POSITION_4  | EXT
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE14              (uint32_t)(8U  << 16U | 3U)  /*!< EXTI_POSITION_8  | EXT
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_SYSCFG_EXTI_LINE15              (uint32_t)(12U << 16U | 3U)  /*!< EXTI_POSITION_12 | EXT
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB1_GRP1_STOP_IP DBGMCU APB1 GRP1 STOP IP
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM2_STOP      DBGMCU_APB1_FZ_DBG_TIM2_STOP    /*!< TIM2 counter stoppe
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM3)
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM3_STOP      DBGMCU_APB1_FZ_DBG_TIM3_STOP    /*!< TIM3 counter stoppe
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM3*/
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM6)
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM6_STOP      DBGMCU_APB1_FZ_DBG_TIM6_STOP    /*!< TIM6 counter stoppe
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM6*/
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM7)
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_TIM7_STOP      DBGMCU_APB1_FZ_DBG_TIM7_STOP    /*!< TIM7 counter stoppe
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM7*/
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_RTC_STOP       DBGMCU_APB1_FZ_DBG_RTC_STOP     /*!< RTC Calendar frozen
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_WWDG_STOP      DBGMCU_APB1_FZ_DBG_WWDG_STOP    /*!< Debug Window Watchd
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_IWDG_STOP      DBGMCU_APB1_FZ_DBG_IWDG_STOP    /*!< Debug Independent W
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C1_STOP      DBGMCU_APB1_FZ_DBG_I2C1_STOP    /*!< I2C1 SMBUS timeout 
ARM GAS  /tmp/cc0giX7U.s 			page 133


 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(I2C2)
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C2_STOP      DBGMCU_APB1_FZ_DBG_I2C2_STOP    /*!< I2C2 SMBUS timeout 
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*I2C2*/
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(I2C3)
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_I2C3_STOP      DBGMCU_APB1_FZ_DBG_I2C3_STOP    /*!< I2C3 SMBUS timeout 
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*I2C3*/
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB1_GRP1_LPTIM1_STOP    DBGMCU_APB1_FZ_DBG_LPTIMER_STOP /*!< LPTIM1 counter stop
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_APB2_GRP1_STOP_IP DBGMCU APB2 GRP1 STOP IP
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(TIM22)
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM22_STOP     DBGMCU_APB2_FZ_DBG_TIM22_STOP /*!< TIM22 counter stopped
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /*TIM22*/
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_DBGMCU_APB2_GRP1_TIM21_STOP     DBGMCU_APB2_FZ_DBG_TIM21_STOP /*!< TIM21 counter stopped
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EC_LATENCY FLASH LATENCY
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_FLASH_LATENCY_0                 ((uint32_t)0x00000000U) /*!< FLASH Zero Latency cycle */
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #define LL_FLASH_LATENCY_1                 FLASH_ACR_LATENCY       /*!< FLASH One Latency cycle */
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported macro ------------------------------------------------------------*/
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /* Exported functions --------------------------------------------------------*/
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_Exported_Functions SYSTEM Exported Functions
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_SYSCFG SYSCFG
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Set memory mapping at address 0x00000000
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_SetRemapMemory
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Memory This parameter can be one of the following values:
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetRemapMemory(uint32_t Memory)
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 134


 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE, Memory);
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get memory mapping at address 0x00000000
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 MEM_MODE      LL_SYSCFG_GetRemapMemory
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_FLASH
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SYSTEMFLASH
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_REMAP_SRAM
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetRemapMemory(void)
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_MEM_MODE));
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR1_UFB)
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Select Flash bank mode (Bank flashed at 0x08000000)
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 UFB           LL_SYSCFG_SetFlashBankMode
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Bank This parameter can be one of the following values:
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetFlashBankMode(uint32_t Bank)
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR1, SYSCFG_CFGR1_UFB, Bank);
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get Flash bank mode (Bank flashed at 0x08000000)
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 UFB           LL_SYSCFG_GetFlashBankMode
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK1
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BANKMODE_BANK2
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetFlashBankMode(void)
 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_UFB));
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif /* SYSCFG_CFGR1_UFB */
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get Boot mode selected by the boot pins status bits
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   It indicates the boot mode selected by the boot pins. Bit 9
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         corresponds to the complement of nBOOT1 bit in the FLASH_OPTR register.
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         Its value is defined in the option bytes. Bit 8 corresponds to the
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         value sampled on the BOOT0 pin.
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR1 BOOT_MODE      LL_SYSCFG_GetBootMode
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BOOTMODE_FLASH
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BOOTMODE_SYSTEMFLASH
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_BOOTMODE_SRAM
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetBootMode(void)
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 135


 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR1, SYSCFG_CFGR1_BOOT_MODE));
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Firewall protection enabled
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 FWDIS         LL_SYSCFG_EnableFirewall
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFirewall(void)
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_FWDISEN);
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Check if Firewall protection is enabled or not
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 FWDIS         LL_SYSCFG_IsEnabledFirewall
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_IsEnabledFirewall(void)
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return !(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_FWDISEN) == SYSCFG_CFGR2_FWDISEN);
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined(SYSCFG_CFGR2_CAPA)
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Set VLCD rail connection to optional external capacitor
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   One to three external capacitors can be connected to pads to do
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         VLCD biasing.
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD1 rail can be connected to PB12 or PE11(*),
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD2 rail can be connected to PB2,
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD3 rail can be connected to PB0 or PE12(*)
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CAPA      LL_SYSCFG_SetVLCDRailConnection
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  IoPinConnect This parameter can be a combination of the following values:
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PB12
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PE11(*)
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD2_PB2
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PB0
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PE12(*)
 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetVLCDRailConnection(uint32_t IoPinConnect)
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR2, SYSCFG_CFGR2_CAPA, IoPinConnect);
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get VLCD rail connection configuration
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   One to three external capacitors can be connected to pads to do
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         VLCD biasing.
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD1 rail can be connected to PB12 or PE11(*),
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD2 rail can be connected to PB2,
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         - LCD_VLCD3 rail can be connected to PB0 or PE12(*)
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 CAPA      LL_SYSCFG_GetVLCDRailConnection
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be a combination of the following values:
ARM GAS  /tmp/cc0giX7U.s 			page 136


 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PB12
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD1_PE11(*)
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD2_PB2
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PB0
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_CAPA_VLCD3_PE12(*)
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetVLCDRailConnection(void)
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR2, SYSCFG_CFGR2_CAPA));
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the I2C fast mode plus driving capability.
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 I2C_PBx_FMP   LL_SYSCFG_EnableFastModePlus\n
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_CFGR2 I2Cx_FMP      LL_SYSCFG_EnableFastModePlus
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3 (*)
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_EnableFastModePlus(uint32_t ConfigFastModePlus)
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR2, ConfigFastModePlus);
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the I2C fast mode plus driving capability.
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR2 I2C_PBx_FMP   LL_SYSCFG_DisableFastModePlus\n
 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_CFGR2 I2Cx_FMP      LL_SYSCFG_DisableFastModePlus
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  ConfigFastModePlus This parameter can be a combination of the following values:
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB6
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB7
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB8
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_PB9
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C1
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C2 (*)
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_I2C_FASTMODEPLUS_I2C3 (*)
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_DisableFastModePlus(uint32_t ConfigFastModePlus)
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR2, ConfigFastModePlus);
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 137


 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Select which pad is connected to VREFINT_ADC
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 SEL_VREF_OUT  LL_SYSCFG_VREFINT_SetConnection
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  IoPinConnect This parameter can be one of the following values:
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_NONE
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO2
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1_IO2
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_SetConnection(uint32_t IoPinConnect)
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->CFGR3, SYSCFG_CFGR3_VREF_OUT, IoPinConnect);
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get pad connection to VREFINT_ADC
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 SEL_VREF_OUT  LL_SYSCFG_VREFINT_GetConnection
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_NONE
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO2
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_VREFINT_CONNECT_IO1_IO2
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_VREFINT_GetConnection(void)
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_VREF_OUT));
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for ADC enable
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   The VrefInit buffer to ADC through internal path is also
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         enabled using function LL_ADC_SetCommonPathInternalCh()
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         with parameter LL_ADC_PATH_INTERNAL_VREFINT
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_ADC   LL_SYSCFG_VREFINT_EnableADC
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_EnableADC(void)
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_VREFINT_ADC);
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for ADC disable
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_ADC   LL_SYSCFG_VREFINT_DisableADC
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_DisableADC(void)
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_VREFINT_ADC);
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate temperature sensor reference for ADC enable
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_SENSOR_ADC    LL_SYSCFG_TEMPSENSOR_Enable
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_TEMPSENSOR_Enable(void)
ARM GAS  /tmp/cc0giX7U.s 			page 138


 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_SENSOR_ADC);
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate temperature sensor reference for ADC disable
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_SENSOR_ADC    LL_SYSCFG_TEMPSENSOR_Disable
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_TEMPSENSOR_Disable(void)
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUF_SENSOR_ADC);
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for comparator enable
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_COMP  LL_SYSCFG_VREFINT_EnableCOMP
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_EnableCOMP(void)
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP);
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for comparator disable
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENBUF_VREFINT_COMP  LL_SYSCFG_VREFINT_DisableCOMP
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_DisableCOMP(void)
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENBUFLP_VREFINT_COMP);
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #if defined (RCC_HSI48_SUPPORT)
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for HSI48 oscillator enable
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENREF_HSI48         LL_SYSCFG_VREFINT_EnableHSI48
 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_EnableHSI48(void)
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENREF_HSI48);
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Buffer used to generate VREFINT reference for HSI48 oscillator disable
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 ENREF_HSI48         LL_SYSCFG_VREFINT_DisableHSI48
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_DisableHSI48(void)
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_ENREF_HSI48);
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** #endif
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 139


 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Check if VREFINT is ready or not
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   When set, it indicates that VREFINT is available for BOR, PVD and LCD
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 VREFINT_RDYF        LL_SYSCFG_VREFINT_IsReady
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_VREFINT_IsReady(void)
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (READ_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_VREFINT_RDYF) == SYSCFG_CFGR3_VREFINT_RDYF);
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Lock the whole content of SYSCFG_CFGR3 register
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   After SYSCFG_CFGR3 register lock, only read access available.
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         Only system hardware reset unlocks SYSCFG_CFGR3 register.
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 REF_LOCK            LL_SYSCFG_VREFINT_Lock
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_VREFINT_Lock(void)
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Check if SYSCFG_CFGR3 register is locked (only read access) or not
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note   When set, it indicates that SYSCFG_CFGR3 register is locked, only read access available
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_CFGR3 REF_LOCK              LL_SYSCFG_VREFINT_IsLocked
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval State of bit (1 or 0).
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_VREFINT_IsLocked(void)
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (READ_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK) == SYSCFG_CFGR3_REF_LOCK);
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Configure source input for the EXTI external interrupt.
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Port This parameter can be one of the following values:
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
ARM GAS  /tmp/cc0giX7U.s 			page 140


 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTH (*)
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_SYSCFG_SetEXTISource(uint32_t Port, uint32_t Line)
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(SYSCFG->EXTICR[Line & 0xFFU], SYSCFG_EXTICR1_EXTI0 << (Line >> 16U), Port << (Line >> 
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get the configured defined for specific EXTI Line
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll SYSCFG_EXTICR1 EXTI0         LL_SYSCFG_SetEXTISource\n
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI1         LL_SYSCFG_SetEXTISource\n
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI2         LL_SYSCFG_SetEXTISource\n
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR1 EXTI3         LL_SYSCFG_SetEXTISource\n
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI4         LL_SYSCFG_SetEXTISource\n
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI5         LL_SYSCFG_SetEXTISource\n
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI6         LL_SYSCFG_SetEXTISource\n
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR2 EXTI7         LL_SYSCFG_SetEXTISource\n
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI8         LL_SYSCFG_SetEXTISource\n
 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI9         LL_SYSCFG_SetEXTISource\n
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI10        LL_SYSCFG_SetEXTISource\n
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR3 EXTI11        LL_SYSCFG_SetEXTISource\n
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI12        LL_SYSCFG_SetEXTISource\n
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI13        LL_SYSCFG_SetEXTISource\n
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI14        LL_SYSCFG_SetEXTISource\n
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         SYSCFG_EXTICR4 EXTI15        LL_SYSCFG_SetEXTISource
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Line This parameter can be one of the following values:
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE0
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE1
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE2
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE3
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE4
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE5
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE6
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE7
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE8
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE9
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE10
ARM GAS  /tmp/cc0giX7U.s 			page 141


 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE11
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE12
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE13
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE14
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_LINE15
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTA
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTB
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTC
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTD (*)
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTE (*)
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_SYSCFG_EXTI_PORTH (*)
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_SYSCFG_GetEXTISource(uint32_t Line)
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(SYSCFG->EXTICR[Line & 0xFFU], (SYSCFG_EXTICR1_EXTI0 << (Line >> 16U)))
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_DBGMCU DBGMCU
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Return the device identifier
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE DEV_ID        LL_DBGMCU_GetDeviceID
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0x7FF (ex: L053 -> 0x417, L073 -> 0x447)
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetDeviceID(void)
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_DEV_ID));
 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Return the device revision identifier
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @note This field indicates the revision of the device.
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_IDCODE REV_ID        LL_DBGMCU_GetRevisionID
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Values between Min_Data=0x00 and Max_Data=0xFFFF
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_DBGMCU_GetRevisionID(void)
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(DBGMCU->IDCODE, DBGMCU_IDCODE_REV_ID) >> DBGMCU_REVID_POSITION);
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the Debug Module during SLEEP mode
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_EnableDBGSleepMode
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGSleepMode(void)
ARM GAS  /tmp/cc0giX7U.s 			page 142


 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the Debug Module during SLEEP mode
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_SLEEP     LL_DBGMCU_DisableDBGSleepMode
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGSleepMode(void)
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the Debug Module during STOP mode
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_EnableDBGStopMode
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStopMode(void)
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the Debug Module during STOP mode
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STOP      LL_DBGMCU_DisableDBGStopMode
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStopMode(void)
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Enable the Debug Module during STANDBY mode
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_EnableDBGStandbyMode
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_EnableDBGStandbyMode(void)
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Disable the Debug Module during STANDBY mode
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll DBGMCU_CR    DBG_STANDBY   LL_DBGMCU_DisableDBGStandbyMode
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_DisableDBGStandbyMode(void)
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Freeze APB1 peripherals (group1 peripherals)
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB1FZ      DBG_TIM2_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
ARM GAS  /tmp/cc0giX7U.s 			page 143


 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM3_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM6_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM7_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_RTC_STOP      LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_WWDG_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_IWDG_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C1_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C2_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C3_STOP     LL_DBGMCU_APB1_GRP1_FreezePeriph\n
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_LPTIMER_STOP  LL_DBGMCU_APB1_GRP1_FreezePeriph
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP (*)
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP (*)
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_FreezePeriph(uint32_t Periphs)
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->APB1FZ, Periphs);
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Unfreeze APB1 peripherals (group1 peripherals)
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB1FZ      DBG_TIM2_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM3_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM6_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_TIM7_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_RTC_STOP      LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_WWDG_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_IWDG_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C1_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C2_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_I2C3_STOP     LL_DBGMCU_APB1_GRP1_UnFreezePeriph\n
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB1FZ      DBG_LPTIMER_STOP  LL_DBGMCU_APB1_GRP1_UnFreezePeriph
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM2_STOP
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM3_STOP (*)
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM6_STOP (*)
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_TIM7_STOP (*)
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_RTC_STOP
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_WWDG_STOP
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_IWDG_STOP
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C1_STOP
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C2_STOP (*)
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_I2C3_STOP (*)
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB1_GRP1_LPTIM1_STOP
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
ARM GAS  /tmp/cc0giX7U.s 			page 144


 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB1_GRP1_UnFreezePeriph(uint32_t Periphs)
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB1FZ, Periphs);
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Freeze APB2 peripherals
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB2FZ      DBG_TIM22_STOP  LL_DBGMCU_APB2_GRP1_FreezePeriph\n
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB2FZ      DBG_TIM21_STOP  LL_DBGMCU_APB2_GRP1_FreezePeriph
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM22_STOP (*)
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM21_STOP
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_FreezePeriph(uint32_t Periphs)
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   SET_BIT(DBGMCU->APB2FZ, Periphs);
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Unfreeze APB2 peripherals
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll APB2FZ      DBG_TIM22_STOP  LL_DBGMCU_APB2_GRP1_UnFreezePeriph\n
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         APB2FZ      DBG_TIM21_STOP  LL_DBGMCU_APB2_GRP1_UnFreezePeriph
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Periphs This parameter can be a combination of the following values:
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM22_STOP (*)
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_DBGMCU_APB2_GRP1_TIM21_STOP
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         (*) value not defined in all devices
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_DBGMCU_APB2_GRP1_UnFreezePeriph(uint32_t Periphs)
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   CLEAR_BIT(DBGMCU->APB2FZ, Periphs);
 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @}
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /** @defgroup SYSTEM_LL_EF_FLASH FLASH
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @{
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Set FLASH Latency
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_SetLatency
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @param  Latency This parameter can be one of the following values:
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval None
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE void LL_FLASH_SetLatency(uint32_t Latency)
ARM GAS  /tmp/cc0giX7U.s 			page 145


 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, Latency);
 687              		.loc 7 933 0
 688 0002 2B4B     		ldr	r3, .L20
 689 0004 1A68     		ldr	r2, [r3]
 690 0006 0121     		movs	r1, #1
 691 0008 8A43     		bics	r2, r1
 692 000a 1A60     		str	r2, [r3]
 693              	.LVL42:
 694              	.LBE161:
 695              	.LBE160:
 696              	.LBB162:
 697              	.LBB163:
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** }
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** 
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** /**
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @brief  Get FLASH Latency
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @rmtoll FLASH_ACR    LATENCY       LL_FLASH_GetLatency
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   * @retval Returned value can be one of the following values:
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_0
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   *         @arg @ref LL_FLASH_LATENCY_1
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   */
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** __STATIC_INLINE uint32_t LL_FLASH_GetLatency(void)
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h **** {
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_system.h ****   return (uint32_t)(READ_BIT(FLASH->ACR, FLASH_ACR_LATENCY));
 698              		.loc 7 945 0
 699 000c 1B68     		ldr	r3, [r3]
 700              	.LBE163:
 701              	.LBE162:
 148:Src/main.c    ****   {
 702              		.loc 1 148 0
 703 000e 1942     		tst	r1, r3
 704 0010 49D1     		bne	.L19
 705              	.LVL43:
 706              	.LBB164:
 707              	.LBB165:
 708              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h"
   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @file    stm32l0xx_ll_pwr.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief   Header file of PWR LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *      without specific prior written permission.
ARM GAS  /tmp/cc0giX7U.s 			page 146


  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   ******************************************************************************
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #ifndef __STM32L0xx_LL_PWR_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define __STM32L0xx_LL_PWR_H
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #ifdef __cplusplus
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** extern "C" {
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #include "stm32l0xx.h"
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @addtogroup STM32L0xx_LL_Driver
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR)
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL PWR
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private types -------------------------------------------------------------*/
  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private constants ---------------------------------------------------------*/
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Private macros ------------------------------------------------------------*/
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported types ------------------------------------------------------------*/
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported constants --------------------------------------------------------*/
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Constants PWR Exported Constants
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_CLEAR_FLAG Clear Flags Defines
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_WriteReg function
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CR_CSBF                     PWR_CR_CSBF            /*!< Clear standby flag */
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CR_CWUF                     PWR_CR_CWUF            /*!< Clear wakeup flag */
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_GET_FLAG Get Flags Defines
ARM GAS  /tmp/cc0giX7U.s 			page 147


  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief    Flags defines which can be used with LL_PWR_ReadReg function
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_WUF                     PWR_CSR_WUF            /*!< Wakeup flag */
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_SBF                     PWR_CSR_SBF            /*!< Standby flag */
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_PVDO                    PWR_CSR_PVDO           /*!< Power voltage detector outpu
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CSR_VREFINTRDYF)
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_VREFINTRDYF             PWR_CSR_VREFINTRDYF    /*!< VREFINT ready flag */
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CSR_VREFINTRDYF */
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_VOS                     PWR_CSR_VOSF           /*!< Voltage scaling select flag 
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_REGLPF                  PWR_CSR_REGLPF         /*!< Regulator low power flag */
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP1                   PWR_CSR_EWUP1          /*!< Enable WKUP pin 1 */
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP2                   PWR_CSR_EWUP2          /*!< Enable WKUP pin 2 */
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP3)
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_CSR_EWUP3                   PWR_CSR_EWUP3          /*!< Enable WKUP pin 3 */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP3 */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_VOLTAGE Regulator Voltage
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE1         (PWR_CR_VOS_0)                   /*!< 1.8V (range 1) */
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE2         (PWR_CR_VOS_1)                   /*!< 1.5V (range 2) */
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_VOLTAGE_SCALE3         (PWR_CR_VOS_0 | PWR_CR_VOS_1)    /*!< 1.2V (range 3) */
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_MODE_PWR Mode Power
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_MODE_STOP                      0x00000000U                    /*!< Enter Stop mode w
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_MODE_STANDBY                   (PWR_CR_PDDS)                  /*!< Enter Standby mod
 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_MODE_LP_MODES  Regulator Mode In Low Power Modes
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_LPMODES_MAIN           0x00000000U        /*!< Voltage regulator in main mode d
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_LPMODES_LOW_POWER      (PWR_CR_LPSDSR)    /*!< Voltage regulator in low-power m
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CR_LPDS)
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_REGU_MODE_DS_MODE  Regulator Mode In Deep Sleep Mode
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****  * @{
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****  */
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_MAIN        0x00000000U           /*!< Voltage regulator in main mode du
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_REGU_DSMODE_LOW_POWER   (PWR_CR_LPDS)         /*!< Voltage regulator in low-power mo
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
ARM GAS  /tmp/cc0giX7U.s 			page 148


 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CR_LPDS */
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_PVD_SUPPORT)
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_PVDLEVEL Power Voltage Detector Level
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_0                  (PWR_CR_PLS_LEV0)      /*!< Voltage threshold detected b
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_1                  (PWR_CR_PLS_LEV1)      /*!< Voltage threshold detected b
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_2                  (PWR_CR_PLS_LEV2)      /*!< Voltage threshold detected b
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_3                  (PWR_CR_PLS_LEV3)      /*!< Voltage threshold detected b
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_4                  (PWR_CR_PLS_LEV4)      /*!< Voltage threshold detected b
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_5                  (PWR_CR_PLS_LEV5)      /*!< Voltage threshold detected b
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_6                  (PWR_CR_PLS_LEV6)      /*!< Voltage threshold detected b
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_PVDLEVEL_7                  (PWR_CR_PLS_LEV7)      /*!< External input analog voltag
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_PVD_SUPPORT */
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EC_WAKEUP_PIN  Wakeup Pins
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN1                 (PWR_CSR_EWUP1)        /*!< WKUP pin 1 : PA0 */
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN2                 (PWR_CSR_EWUP2)        /*!< WKUP pin 2 : PC13 */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #if defined(PWR_CSR_EWUP3)
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WAKEUP_PIN3                 (PWR_CSR_EWUP3)        /*!< WKUP pin 3 : PE6 or PA2 acco
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #endif /* PWR_CSR_EWUP3 */
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported macro ------------------------------------------------------------*/
 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Macros PWR Exported Macros
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EM_WRITE_READ Common write and read registers Macros
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Write a value in PWR register
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  __REG__ Register to be written
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  __VALUE__ Value to be written in the register
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_WriteReg(__REG__, __VALUE__) WRITE_REG(PWR->__REG__, (__VALUE__))
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Read a value in PWR register
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  __REG__ Register to be read
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval Register value
ARM GAS  /tmp/cc0giX7U.s 			page 149


 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** #define LL_PWR_ReadReg(__REG__) READ_REG(PWR->__REG__)
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @}
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /* Exported functions --------------------------------------------------------*/
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_Exported_Functions PWR Exported Functions
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /** @defgroup PWR_LL_EF_Configuration Configuration
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @{
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Switch the regulator from main mode to low-power mode
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPRUN       LL_PWR_EnableLowPowerRunMode
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   Remind to set the regulator to low power before enabling
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         LowPower run mode (bit @ref LL_PWR_REGU_LPMODES_LOW_POWER).
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnableLowPowerRunMode(void)
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_LPRUN);
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Switch the regulator from low-power mode to main mode
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPRUN       LL_PWR_DisableLowPowerRunMode
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_DisableLowPowerRunMode(void)
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_LPRUN);
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Check if the regulator is in low-power mode
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPRUN       LL_PWR_IsEnabledLowPowerRunMode
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval State of bit (1 or 0).
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE uint32_t LL_PWR_IsEnabledLowPowerRunMode(void)
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   return (READ_BIT(PWR->CR, PWR_CR_LPRUN) == (PWR_CR_LPRUN));
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set voltage regulator to low-power and switch from 
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         run main mode to run low-power mode.
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPSDSR       LL_PWR_EnterLowPowerRunMode\n
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         CR    LPRUN        LL_PWR_EnterLowPowerRunMode
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   This "high level" function is introduced to provide functional
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         compatibility with other families. Notice that the two registers
ARM GAS  /tmp/cc0giX7U.s 			page 150


 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         have to be written sequentially, so this function is not atomic.
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         To assure atomicity you can call separately the following functions:
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_SetRegulModeLP(@ref LL_PWR_REGU_LPMODES_LOW_POWER);
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_EnableLowPowerRunMode();
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_EnterLowPowerRunMode(void)
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_LPSDSR); /* => LL_PWR_SetRegulModeLP(LL_PWR_REGU_LPMODES_LOW_POWER) */
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   SET_BIT(PWR->CR, PWR_CR_LPRUN);  /* => LL_PWR_EnableLowPowerRunMode() */
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** 
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set voltage regulator to main and switch from 
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         run main mode to low-power mode.
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    LPSDSR       LL_PWR_ExitLowPowerRunMode\n
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         CR    LPRUN        LL_PWR_ExitLowPowerRunMode
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @note   This "high level" function is introduced to provide functional   
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         compatibility with other families. Notice that the two registers 
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         have to be written sequentially, so this function is not atomic.
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         To assure atomicity you can call separately the following functions:
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_DisableLowPowerRunMode();
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         - @ref LL_PWR_SetRegulModeLP(@ref LL_PWR_REGU_LPMODES_MAIN);
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_ExitLowPowerRunMode(void)
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_LPRUN);   /* => LL_PWR_DisableLowPowerRunMode() */
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   CLEAR_BIT(PWR->CR, PWR_CR_LPSDSR);  /* => LL_PWR_SetRegulModeLP(LL_PWR_REGU_LPMODES_MAIN) */
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** }
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** /**
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @brief  Set the main internal regulator output voltage
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @rmtoll CR    VOS       LL_PWR_SetRegulVoltageScaling
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @param  VoltageScaling This parameter can be one of the following values:
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE1
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE2
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   *         @arg @ref LL_PWR_REGU_VOLTAGE_SCALE3
 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   * @retval None
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   */
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** __STATIC_INLINE void LL_PWR_SetRegulVoltageScaling(uint32_t VoltageScaling)
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h **** {
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_pwr.h ****   MODIFY_REG(PWR->CR, PWR_CR_VOS, VoltageScaling);
 709              		.loc 8 290 0
 710 0012 2849     		ldr	r1, .L20+4
 711 0014 0B68     		ldr	r3, [r1]
 712 0016 284A     		ldr	r2, .L20+8
 713 0018 1A40     		ands	r2, r3
 714 001a 8023     		movs	r3, #128
 715 001c 1B01     		lsls	r3, r3, #4
 716 001e 1343     		orrs	r3, r2
 717 0020 0B60     		str	r3, [r1]
 718              	.LVL44:
 719              	.LBE165:
 720              	.LBE164:
 721              	.LBB166:
 722              	.LBB167:
 723              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h"
ARM GAS  /tmp/cc0giX7U.s 			page 151


   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @file    stm32l0xx_ll_rcc.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief   Header file of RCC LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   ******************************************************************************
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @attention
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * Redistribution and use in source and binary forms, with or without modification,
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * are permitted provided that the following conditions are met:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer.
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *      this list of conditions and the following disclaimer in the documentation
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *      and/or other materials provided with the distribution.
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *      may be used to endorse or promote products derived from this software
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *      without specific prior written permission.
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   ******************************************************************************
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #ifndef __STM32L0xx_LL_RCC_H
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __STM32L0xx_LL_RCC_H
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #ifdef __cplusplus
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** extern "C" {
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Includes ------------------------------------------------------------------*/
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #include "stm32l0xx.h"
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @addtogroup STM32L0xx_LL_Driver
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC)
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL RCC
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private types -------------------------------------------------------------*/
ARM GAS  /tmp/cc0giX7U.s 			page 152


  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private variables ---------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Variables RCC Private Variables
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private constants ---------------------------------------------------------*/
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Constants RCC Private Constants
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Defines used for the bit position in the register and perform offsets*/
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_HPRE       (uint32_t)4U  /*!< field position in register RCC_CFGR */
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_PPRE1      (uint32_t)8U  /*!< field position in register RCC_CFGR */
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_PPRE2      (uint32_t)11U /*!< field position in register RCC_CFGR */
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_PLLDIV     (uint32_t)22U /*!< field position in register RCC_CFGR */
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_PLLMUL     (uint32_t)18U /*!< field position in register RCC_CFGR */
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_HSICAL     (uint32_t)0U  /*!< field position in register RCC_ICSCR */
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_HSITRIM    (uint32_t)8U  /*!< field position in register RCC_ICSCR */
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_MSIRANGE   (uint32_t)13U /*!< field position in register RCC_ICSCR */
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_MSICAL     (uint32_t)16U /*!< field position in register RCC_ICSCR */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_MSITRIM    (uint32_t)24U /*!< field position in register RCC_ICSCR */
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define RCC_POSITION_HSI48CAL   (uint32_t)8U  /*!< field position in register RCC_CRRCR */
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Private macros ------------------------------------------------------------*/
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Private_Macros RCC Private Macros
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*USE_FULL_LL_DRIVER*/
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported types ------------------------------------------------------------*/
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Types RCC Exported Types
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup LL_ES_CLOCK_FREQ Clocks Frequency Structure
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  RCC Clocks Frequency Structure
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** typedef struct
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t SYSCLK_Frequency;        /*!< SYSCLK clock frequency */
ARM GAS  /tmp/cc0giX7U.s 			page 153


 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t HCLK_Frequency;          /*!< HCLK clock frequency */
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t PCLK1_Frequency;         /*!< PCLK1 clock frequency */
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   uint32_t PCLK2_Frequency;         /*!< PCLK2 clock frequency */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** } LL_RCC_ClocksTypeDef;
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported constants --------------------------------------------------------*/
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Constants RCC Exported Constants
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_OSC_VALUES Oscillator Values adaptation
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    Defines used to adapt values of different oscillators
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note     These values could be modified in the user environment according to
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *           HW set-up.
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (HSE_VALUE)
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define HSE_VALUE    ((uint32_t)8000000U)  /*!< Value of the HSE oscillator in Hz */
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* HSE_VALUE */
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (HSI_VALUE)
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define HSI_VALUE    ((uint32_t)16000000U) /*!< Value of the HSI oscillator in Hz */
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* HSI_VALUE */
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (LSE_VALUE)
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LSE_VALUE    ((uint32_t)32768U)    /*!< Value of the LSE oscillator in Hz */
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* LSE_VALUE */
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (LSI_VALUE)
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LSI_VALUE    ((uint32_t)37000U)    /*!< Value of the LSI oscillator in Hz */
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* LSI_VALUE */
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if !defined  (HSI48_VALUE)
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define HSI48_VALUE  ((uint32_t)48000000U) /*!< Value of the HSI48 oscillator in Hz */
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* HSI48_VALUE */
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_CLEAR_FLAG Clear Flags Defines
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_WriteReg function
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_LSIRDYC                RCC_CICR_LSIRDYC     /*!< LSI Ready Interrupt Clear */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_LSERDYC                RCC_CICR_LSERDYC     /*!< LSE Ready Interrupt Clear */
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_HSIRDYC                RCC_CICR_HSIRDYC     /*!< HSI Ready Interrupt Clear */
ARM GAS  /tmp/cc0giX7U.s 			page 154


 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_HSERDYC                RCC_CICR_HSERDYC     /*!< HSE Ready Interrupt Clear */
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_PLLRDYC                RCC_CICR_PLLRDYC     /*!< PLL Ready Interrupt Clear */
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_MSIRDYC                RCC_CICR_MSIRDYC     /*!< MSI Ready Interrupt Clear */
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_HSI48RDYC               RCC_CICR_HSI48RDYC  /*!< HSI48 Ready Interrupt Clear */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_LSECSSC                RCC_CICR_LSECSSC     /*!< LSE Clock Security System Inte
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CICR_CSSC                   RCC_CICR_CSSC        /*!< Clock Security System Interrup
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_GET_FLAG Get Flags Defines
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    Flags defines which can be used with LL_RCC_ReadReg function
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_LSIRDYF                RCC_CIFR_LSIRDYF     /*!< LSI Ready Interrupt flag */
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_LSERDYF                RCC_CIFR_LSERDYF     /*!< LSE Ready Interrupt flag */
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_HSIRDYF                RCC_CIFR_HSIRDYF     /*!< HSI Ready Interrupt flag */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_HSERDYF                RCC_CIFR_HSERDYF     /*!< HSE Ready Interrupt flag */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_PLLRDYF                RCC_CIFR_PLLRDYF     /*!< PLL Ready Interrupt flag */
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_MSIRDYF                RCC_CIFR_MSIRDYF     /*!< MSI Ready Interrupt flag */
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_HSI48RDYF               RCC_CIFR_HSI48RDYF  /*!< HSI48 Ready Interrupt flag */
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_LSECSSF                RCC_CIFR_LSECSSF    /*!< LSE Clock Security System Inter
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIFR_CSSF                   RCC_CIFR_CSSF       /*!< Clock Security System Interrupt
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_FWRSTF                 RCC_CSR_FWRSTF          /*!< Firewall reset flag */
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_OBLRSTF                RCC_CSR_OBLRSTF         /*!< OBL reset flag */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_PINRSTF                RCC_CSR_PINRSTF         /*!< PIN reset flag */
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_PORRSTF                RCC_CSR_PORRSTF         /*!< POR/PDR reset flag */
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_SFTRSTF                RCC_CSR_SFTRSTF         /*!< Software Reset flag */
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_IWDGRSTF               RCC_CSR_IWDGRSTF        /*!< Independent Watchdog reset f
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_WWDGRSTF               RCC_CSR_WWDGRSTF        /*!< Window watchdog reset flag *
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CSR_LPWRRSTF               RCC_CSR_LPWRRSTF        /*!< Low-Power reset flag */
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_IT IT Defines
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief    IT defines which can be used with LL_RCC_ReadReg and  LL_RCC_WriteReg functions
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_LSIRDYIE               RCC_CIER_LSIRDYIE      /*!< LSI Ready Interrupt Enable *
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_LSERDYIE               RCC_CIER_LSERDYIE      /*!< LSE Ready Interrupt Enable *
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_HSIRDYIE               RCC_CIER_HSIRDYIE      /*!< HSI Ready Interrupt Enable *
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_HSERDYIE               RCC_CIER_HSERDYIE      /*!< HSE Ready Interrupt Enable *
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_PLLRDYIE               RCC_CIER_PLLRDYIE      /*!< PLL Ready Interrupt Enable *
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_MSIRDYIE               RCC_CIER_MSIRDYIE      /*!< MSI Ready Interrupt Enable *
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_HSI48RDYIE              RCC_CIER_HSI48RDYIE   /*!< HSI48 Ready Interrupt Enable
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_CIER_LSECSSIE               RCC_CIER_LSECSSIE      /*!< LSE CSS Interrupt Enable */
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 155


 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LSEDRIVE  LSE oscillator drive capability
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_LOW                ((uint32_t)0x00000000U) /*!< Xtal mode lower driving cap
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMLOW          RCC_CSR_LSEDRV_0 /*!< Xtal mode medium low driving capab
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_MEDIUMHIGH         RCC_CSR_LSEDRV_1 /*!< Xtal mode medium high driving capa
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LSEDRIVE_HIGH               RCC_CSR_LSEDRV   /*!< Xtal mode higher driving capabilit
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_HSE_DIV RTC HSE Prescaler
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_2               (uint32_t)0x00000000U/*!< HSE is divided by 2 for RTC cl
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_4               RCC_CR_RTCPRE_0      /*!< HSE is divided by 4 for RTC cl
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_8               RCC_CR_RTCPRE_1      /*!< HSE is divided by 8 for RTC cl
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_HSE_DIV_16              RCC_CR_RTCPRE        /*!< HSE is divided by 16 for RTC c
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MSIRANGE  MSI clock ranges
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_0                  RCC_ICSCR_MSIRANGE_0  /*!< MSI = 65.536 KHz */
 255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_1                  RCC_ICSCR_MSIRANGE_1  /*!< MSI = 131.072 KHz*/
 256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_2                  RCC_ICSCR_MSIRANGE_2  /*!< MSI = 262.144 KHz */
 257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_3                  RCC_ICSCR_MSIRANGE_3  /*!< MSI = 524.288 KHz */
 258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_4                  RCC_ICSCR_MSIRANGE_4  /*!< MSI = 1.048 MHz */
 259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_5                  RCC_ICSCR_MSIRANGE_5  /*!< MSI = 2.097 MHz */
 260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MSIRANGE_6                  RCC_ICSCR_MSIRANGE_6  /*!< MSI = 4.194 MHz */
 261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE  System clock switch
 266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_MSI           RCC_CFGR_SW_MSI    /*!< MSI selection as system clock */
 269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSI           RCC_CFGR_SW_HSI    /*!< HSI selection as system clock */
 270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_HSE           RCC_CFGR_SW_HSE    /*!< HSE selection as system clock */
 271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_PLL           RCC_CFGR_SW_PLL    /*!< PLL selection as system clock */
 272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYS_CLKSOURCE_STATUS  System clock switch status
 277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_MSI    RCC_CFGR_SWS_MSI   /*!< MSI used as system clock */
 280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSI    RCC_CFGR_SWS_HSI   /*!< HSI used as system clock */
 281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_HSE    RCC_CFGR_SWS_HSE   /*!< HSE used as system clock */
 282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYS_CLKSOURCE_STATUS_PLL    RCC_CFGR_SWS_PLL   /*!< PLL used as system clock */
 283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 156


 286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_SYSCLK_DIV  AHB prescaler
 288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_1                RCC_CFGR_HPRE_DIV1   /*!< SYSCLK not divided */
 291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_2                RCC_CFGR_HPRE_DIV2   /*!< SYSCLK divided by 2 */
 292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_4                RCC_CFGR_HPRE_DIV4   /*!< SYSCLK divided by 4 */
 293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_8                RCC_CFGR_HPRE_DIV8   /*!< SYSCLK divided by 8 */
 294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_16               RCC_CFGR_HPRE_DIV16  /*!< SYSCLK divided by 16 */
 295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_64               RCC_CFGR_HPRE_DIV64  /*!< SYSCLK divided by 64 */
 296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_128              RCC_CFGR_HPRE_DIV128 /*!< SYSCLK divided by 128 */
 297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_256              RCC_CFGR_HPRE_DIV256 /*!< SYSCLK divided by 256 */
 298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_SYSCLK_DIV_512              RCC_CFGR_HPRE_DIV512 /*!< SYSCLK divided by 512 */
 299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB1_DIV  APB low-speed prescaler (APB1)
 304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_1                  RCC_CFGR_PPRE1_DIV1  /*!< HCLK not divided */
 307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_2                  RCC_CFGR_PPRE1_DIV2  /*!< HCLK divided by 2 */
 308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_4                  RCC_CFGR_PPRE1_DIV4  /*!< HCLK divided by 4 */
 309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_8                  RCC_CFGR_PPRE1_DIV8  /*!< HCLK divided by 8 */
 310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB1_DIV_16                 RCC_CFGR_PPRE1_DIV16 /*!< HCLK divided by 16 */
 311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_APB2_DIV  APB high-speed prescaler (APB2)
 316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_1                  RCC_CFGR_PPRE2_DIV1  /*!< HCLK not divided */
 319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_2                  RCC_CFGR_PPRE2_DIV2  /*!< HCLK divided by 2 */
 320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_4                  RCC_CFGR_PPRE2_DIV4  /*!< HCLK divided by 4 */
 321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_8                  RCC_CFGR_PPRE2_DIV8  /*!< HCLK divided by 8 */
 322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_APB2_DIV_16                 RCC_CFGR_PPRE2_DIV16 /*!< HCLK divided by 16 */
 323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_STOP_WAKEUPCLOCK  Wakeup from Stop and CSS backup clock selection
 328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_STOP_WAKEUPCLOCK_MSI        ((uint32_t)0x00000000U) /*!< MSI selection after wake-up
 331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_STOP_WAKEUPCLOCK_HSI        RCC_CFGR_STOPWUCK       /*!< HSI selection after wake-up
 332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1SOURCE  MCO1 SOURCE selection
 337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_NOCLOCK          RCC_CFGR_MCOSEL_NOCLOCK      /*!< MCO output disabled, n
 340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_SYSCLK           RCC_CFGR_MCOSEL_SYSCLK       /*!< SYSCLK selection as MC
 341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI              RCC_CFGR_MCOSEL_HSI          /*!< HSI selection as MCO s
 342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_MSI              RCC_CFGR_MCOSEL_MSI          /*!< MSI selection as MCO s
ARM GAS  /tmp/cc0giX7U.s 			page 157


 343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSE              RCC_CFGR_MCOSEL_HSE          /*!< HSE selection as MCO s
 344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSI              RCC_CFGR_MCOSEL_LSI          /*!< LSI selection as MCO s
 345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_LSE              RCC_CFGR_MCOSEL_LSE          /*!< LSE selection as MCO s
 346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CFGR_MCOSEL_HSI48)
 347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_HSI48            RCC_CFGR_MCOSEL_HSI48        /*!< HSI48 selection as MCO
 348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CFGR_MCOSEL_HSI48 */
 349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1SOURCE_PLLCLK           RCC_CFGR_MCOSEL_PLL          /*!< PLLCLK selection as MC
 350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_MCO1_DIV  MCO1 prescaler
 355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_1                  RCC_CFGR_MCOPRE_DIV1  /*!< MCO Clock divided by 1  */
 358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_2                  RCC_CFGR_MCOPRE_DIV2  /*!< MCO Clock divided by 2  */
 359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_4                  RCC_CFGR_MCOPRE_DIV4  /*!< MCO Clock divided by 4  */
 360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_8                  RCC_CFGR_MCOPRE_DIV8  /*!< MCO Clock divided by 8  */
 361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_MCO1_DIV_16                 RCC_CFGR_MCOPRE_DIV16 /*!< MCO Clock divided by 16 */
 362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USE_FULL_LL_DRIVER)
 366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PERIPH_FREQUENCY Peripheral clock frequency
 367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NO         (uint32_t)0x00000000U      /*!< No clock enabled for the
 370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PERIPH_FREQUENCY_NA         (uint32_t)0xFFFFFFFFU      /*!< Frequency cannot be prov
 371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USE_FULL_LL_DRIVER */
 375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1_CLKSOURCE  Peripheral USART clock source selection
 377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_USART1SEL)
 380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_PCLK2      (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | 0x00000000U)  
 381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_SYSCLK     (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USAR
 382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_HSI        (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USAR
 383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE_LSE        (uint32_t)((RCC_CCIPR_USART1SEL << 16U) | RCC_CCIPR_USAR
 384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_USART1SEL */
 385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_PCLK1      (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | 0x00000000U)  
 386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_SYSCLK     (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USAR
 387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_HSI        (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USAR
 388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE_LSE        (uint32_t)((RCC_CCIPR_USART2SEL << 16U) | RCC_CCIPR_USAR
 389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1_CLKSOURCE  Peripheral LPUART clock source selection
 396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_PCLK1     (uint32_t)0x00000000U   /*!< PCLK1 selected as LPUART1 c
 399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_SYSCLK    RCC_CCIPR_LPUART1SEL_0  /*!< SYSCLK selected as LPUART1 
ARM GAS  /tmp/cc0giX7U.s 			page 158


 400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_HSI       RCC_CCIPR_LPUART1SEL_1  /*!< HSI selected as LPUART1 clo
 401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE_LSE       RCC_CCIPR_LPUART1SEL    /*!< LSE selected as LPUART1 clo
 402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1_CLKSOURCE  Peripheral I2C clock source selection
 407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_PCLK1        (uint32_t)((RCC_CCIPR_I2C1SEL << 4U) | (0x00000000U >> 4
 410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_SYSCLK       (uint32_t)((RCC_CCIPR_I2C1SEL << 4U) | (RCC_CCIPR_I2C1SE
 411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE_HSI          (uint32_t)((RCC_CCIPR_I2C1SEL << 4U) | (RCC_CCIPR_I2C1SE
 412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_I2C3SEL)
 413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_PCLK1        (uint32_t)((RCC_CCIPR_I2C3SEL << 4U) | (0x00000000U >> 4
 414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_SYSCLK       (uint32_t)((RCC_CCIPR_I2C3SEL << 4U) | (RCC_CCIPR_I2C3SE
 415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE_HSI          (uint32_t)((RCC_CCIPR_I2C3SEL << 4U) | (RCC_CCIPR_I2C3SE
 416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*RCC_CCIPR_I2C3SEL*/
 417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1_CLKSOURCE  Peripheral LPTIM clock source selection
 422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_PCLK1      (uint32_t)(0x00000000U)          /*!< PCLK1 selected as 
 425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSI        (uint32_t)RCC_CCIPR_LPTIM1SEL_0  /*!< LSI selected as LP
 426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_HSI        (uint32_t)RCC_CCIPR_LPTIM1SEL_1  /*!< HSI selected as LP
 427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE_LSE        (uint32_t)RCC_CCIPR_LPTIM1SEL    /*!< LSE selected as LP
 428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_HSI48SEL)
 433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RNG)
 435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG_CLKSOURCE  Peripheral RNG clock source selection
 436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_PLL           (uint32_t)(0x00000000U)          /*!< PLL selected as RN
 439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE_HSI48         (uint32_t)(RCC_CCIPR_HSI48SEL)   /*!< HSI48 selected as 
 440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RNG */
 444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USB)
 445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB_CLKSOURCE  Peripheral USB clock source selection
 446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_PLL           (uint32_t)(0x00000000U)          /*!< PLL selected as US
 449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE_HSI48         (uint32_t)(RCC_CCIPR_HSI48SEL)   /*!< HSI48 selected as 
 450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USB */
 455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_HSI48SEL */
 456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 159


 457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USART1 Peripheral USART get clock source
 459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_USART1SEL)
 462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART1_CLKSOURCE            RCC_CCIPR_USART1SEL    /*!< USART1 clock source selectio
 463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_USART1SEL */
 464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USART2_CLKSOURCE            RCC_CCIPR_USART2SEL    /*!< USART2 clock source selectio
 465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPUART1 Peripheral LPUART get clock source
 471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPUART1_CLKSOURCE           RCC_CCIPR_LPUART1SEL   /*!< LPUART1 clock source selecti
 474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_I2C1 Peripheral I2C get clock source
 479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C1_CLKSOURCE              RCC_CCIPR_I2C1SEL   /*!< I2C1 clock source selection bit
 482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_I2C3SEL)
 483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_I2C3_CLKSOURCE              RCC_CCIPR_I2C3SEL   /*!< I2C3 clock source selection bit
 484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*RCC_CCIPR_I2C3SEL*/
 485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_LPTIM1 Peripheral LPTIM get clock source
 490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_LPTIM1_CLKSOURCE            RCC_CCIPR_LPTIM1SEL  /*!< LPTIM1 clock source selection 
 493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CCIPR_HSI48SEL)
 498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RNG)
 499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RNG  Peripheral RNG get clock source
 500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RNG_CLKSOURCE               RCC_CCIPR_HSI48SEL   /*!< HSI48 RC clock source selectio
 503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RNG */
 507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(USB)
 509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_USB  Peripheral USB get clock source
 510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_USB_CLKSOURCE               RCC_CCIPR_HSI48SEL  /*!< HSI48 RC clock source selection
 513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
ARM GAS  /tmp/cc0giX7U.s 			page 160


 514:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 515:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 516:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 517:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* USB */
 518:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CCIPR_HSI48SEL */
 519:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 520:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_RTC_CLKSOURCE  RTC clock source selection
 521:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 522:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 523:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_NONE          (uint32_t)0x00000000U         /*!< No clock used as RTC 
 524:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSE           RCC_CSR_RTCSEL_LSE            /*!< LSE oscillator clock 
 525:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_LSI           RCC_CSR_RTCSEL_LSI            /*!< LSI oscillator clock 
 526:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_RTC_CLKSOURCE_HSE           RCC_CSR_RTCSEL_HSE            /*!< HSE oscillator clock 
 527:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****                                                                              (selection through @re
 528:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 529:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 530:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 531:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 532:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_MUL PLL Multiplicator factor
 533:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 534:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 535:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_3                   RCC_CFGR_PLLMUL3  /*!< PLL input clock * 3  */
 536:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_4                   RCC_CFGR_PLLMUL4  /*!< PLL input clock * 4  */
 537:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_6                   RCC_CFGR_PLLMUL6  /*!< PLL input clock * 6  */
 538:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_8                   RCC_CFGR_PLLMUL8  /*!< PLL input clock * 8  */
 539:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_12                  RCC_CFGR_PLLMUL12 /*!< PLL input clock * 12 */
 540:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_16                  RCC_CFGR_PLLMUL16 /*!< PLL input clock * 16 */
 541:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_24                  RCC_CFGR_PLLMUL24 /*!< PLL input clock * 24 */
 542:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_32                  RCC_CFGR_PLLMUL32 /*!< PLL input clock * 32 */
 543:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_MUL_48                  RCC_CFGR_PLLMUL48 /*!< PLL input clock * 48 */
 544:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 545:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 546:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 547:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 548:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLL_DIV PLL division factor
 549:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 550:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 551:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_DIV_2                   RCC_CFGR_PLLDIV2 /*!< PLL clock output = PLLVCO / 2 */
 552:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_DIV_3                   RCC_CFGR_PLLDIV3 /*!< PLL clock output = PLLVCO / 3 */
 553:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLL_DIV_4                   RCC_CFGR_PLLDIV4 /*!< PLL clock output = PLLVCO / 4 */
 554:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 555:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 556:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 557:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 558:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EC_PLLSOURCE PLL SOURCE
 559:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 560:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 561:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSI               RCC_CFGR_PLLSRC_HSI                           /*!< HSI c
 562:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_PLLSOURCE_HSE               RCC_CFGR_PLLSRC_HSE                           /*!< HSE c
 563:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 564:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 565:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 566:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 567:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 568:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 569:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 570:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 161


 571:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported macro ------------------------------------------------------------*/
 572:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Macros RCC Exported Macros
 573:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 574:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 575:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 576:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_WRITE_READ Common Write and read registers Macros
 577:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 578:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 579:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 580:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 581:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Write a value in RCC register
 582:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __REG__ Register to be written
 583:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __VALUE__ Value to be written in the register
 584:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 585:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 586:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_WriteReg(__REG__, __VALUE__) WRITE_REG(RCC->__REG__, (__VALUE__))
 587:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 588:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 589:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Read a value in RCC register
 590:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __REG__ Register to be read
 591:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Register value
 592:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 593:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define LL_RCC_ReadReg(__REG__) READ_REG(RCC->__REG__)
 594:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 595:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 596:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 597:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 598:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EM_CALC_FREQ Calculate frequencies
 599:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 600:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 601:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 602:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 603:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PLLCLK frequency
 604:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note ex: @ref __LL_RCC_CALC_PLLCLK_FREQ (HSE_VALUE,
 605:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *                                      @ref LL_RCC_PLL_GetMultiplicator (),
 606:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *                                      @ref LL_RCC_PLL_GetDivider ());
 607:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __INPUTFREQ__ PLL Input frequency (based on MSI/HSE/HSI)
 608:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __PLLMUL__ This parameter can be one of the following values:
 609:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_3
 610:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_4
 611:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_6
 612:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_8
 613:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_12
 614:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_16
 615:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_24
 616:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_32
 617:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_MUL_48
 618:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __PLLDIV__ This parameter can be one of the following values:
 619:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_2
 620:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_3
 621:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_PLL_DIV_4
 622:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval PLL clock frequency (in Hz)
 623:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 624:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_PLLCLK_FREQ(__INPUTFREQ__, __PLLMUL__,  __PLLDIV__) ((__INPUTFREQ__) * (PLLMu
 625:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 626:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 627:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the HCLK frequency
ARM GAS  /tmp/cc0giX7U.s 			page 162


 628:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __AHBPRESCALER__ be retrieved by @ref LL_RCC_GetAHBPrescaler
 629:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_HCLK_FREQ(LL_RCC_GetAHBPrescaler())
 630:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __SYSCLKFREQ__ SYSCLK frequency (based on MSI/HSE/HSI/PLLCLK)
 631:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __AHBPRESCALER__: This parameter can be one of the following values:
 632:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
 633:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
 634:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
 635:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
 636:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
 637:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
 638:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
 639:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
 640:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
 641:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval HCLK clock frequency (in Hz)
 642:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 643:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_HCLK_FREQ(__SYSCLKFREQ__, __AHBPRESCALER__) ((__SYSCLKFREQ__) >> AHBPrescTabl
 644:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 645:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 646:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK1 frequency (ABP1)
 647:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __APB1PRESCALER__ be retrieved by @ref LL_RCC_GetAPB1Prescaler
 648:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK1_FREQ(LL_RCC_GetAPB1Prescaler())
 649:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 650:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __APB1PRESCALER__: This parameter can be one of the following values:
 651:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
 652:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
 653:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
 654:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
 655:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
 656:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval PCLK1 clock frequency (in Hz)
 657:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 658:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK1_FREQ(__HCLKFREQ__, __APB1PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 659:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 660:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 661:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the PCLK2 frequency (ABP2)
 662:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __APB2PRESCALER__ be retrieved by @ref LL_RCC_GetAPB2Prescaler
 663:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_PCLK2_FREQ(LL_RCC_GetAPB2Prescaler())
 664:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __HCLKFREQ__ HCLK frequency
 665:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __APB2PRESCALER__: This parameter can be one of the following values:
 666:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
 667:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
 668:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
 669:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
 670:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
 671:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval PCLK2 clock frequency (in Hz)
 672:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 673:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_PCLK2_FREQ(__HCLKFREQ__, __APB2PRESCALER__) ((__HCLKFREQ__) >> APBPrescTable[
 674:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 675:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 676:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Helper macro to calculate the MSI frequency (in Hz)
 677:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note: __MSIRANGE__can be retrieved by @ref LL_RCC_MSI_GetRange
 678:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *        ex: __LL_RCC_CALC_MSI_FREQ(LL_RCC_MSI_GetRange())
 679:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  __MSIRANGE__: This parameter can be one of the following values:
 680:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
 681:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
 682:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
 683:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
 684:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
ARM GAS  /tmp/cc0giX7U.s 			page 163


 685:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
 686:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
 687:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval MSI clock frequency (in Hz)
 688:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 689:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #define __LL_RCC_CALC_MSI_FREQ(__MSIRANGE__) ((32768U * ( 1U << (((__MSIRANGE__) >> RCC_POSITION_MS
 690:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 691:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 692:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 693:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 694:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 695:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 696:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 697:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 698:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 699:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /* Exported functions --------------------------------------------------------*/
 700:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_Exported_Functions RCC Exported Functions
 701:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 702:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 703:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 704:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSE HSE
 705:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 706:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 707:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 708:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSECSS_SUPPORT)
 709:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 710:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable the Clock Security System.
 711:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           CSSHSEON         LL_RCC_HSE_EnableCSS
 712:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 713:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 714:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableCSS(void)
 715:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 716:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_CSSON);
 717:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 718:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSECSS_SUPPORT */
 719:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 720:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 721:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSE external oscillator (HSE Bypass)
 722:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_EnableBypass
 723:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 724:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 725:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_EnableBypass(void)
 726:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 727:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEBYP);
 728:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 729:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 730:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 731:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSE external oscillator (HSE Bypass)
 732:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEBYP        LL_RCC_HSE_DisableBypass
 733:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 734:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 735:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_DisableBypass(void)
 736:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 737:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 738:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 739:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 740:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 741:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSE crystal oscillator (HSE ON)
ARM GAS  /tmp/cc0giX7U.s 			page 164


 742:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
 743:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 744:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 745:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Enable(void)
 746:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 747:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSEON);
 748:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 749:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 750:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 751:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSE crystal oscillator (HSE ON)
 752:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
 753:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 754:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 755:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSE_Disable(void)
 756:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 757:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
 758:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 759:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 760:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 761:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSE oscillator Ready
 762:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
 763:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 764:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 765:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
 766:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 767:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY));
 768:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 769:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 770:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 771:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure the RTC prescaler (divider)
 772:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           RTCPRE        LL_RCC_SetRTC_HSEPrescaler
 773:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Div This parameter can be one of the following values:
 774:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_2
 775:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_4
 776:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_8
 777:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_16
 778:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 779:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 780:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetRTC_HSEPrescaler(uint32_t Div)
 781:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 782:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CR, RCC_CR_RTCPRE, Div);
 783:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 784:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 785:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 786:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get the RTC divider (prescaler)
 787:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           RTCPRE        LL_RCC_GetRTC_HSEPrescaler
 788:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
 789:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_2
 790:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_4
 791:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_8
 792:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_RTC_HSE_DIV_16
 793:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 794:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetRTC_HSEPrescaler(void)
 795:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 796:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CR, RCC_CR_RTCPRE));
 797:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 798:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 165


 799:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 800:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 801:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 802:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 803:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI HSI
 804:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 805:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 806:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 807:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 808:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI oscillator
 809:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Enable
 810:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 811:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 812:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Enable(void)
 813:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 814:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSION);
 815:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 816:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 817:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 818:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI oscillator
 819:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSION         LL_RCC_HSI_Disable
 820:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 821:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 822:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_Disable(void)
 823:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 824:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSION);
 825:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 826:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 827:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 828:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSI clock is ready
 829:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
 830:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 831:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 832:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
 833:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 834:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY));
 835:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 836:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 837:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 838:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI even in stop mode
 839:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note HSI oscillator is forced ON even in Stop mode
 840:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_EnableInStopMode
 841:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 842:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 843:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableInStopMode(void)
 844:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 845:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIKERON);
 846:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 847:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 848:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 849:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI in stop mode
 850:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIKERON      LL_RCC_HSI_DisableInStopMode
 851:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 852:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 853:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableInStopMode(void)
 854:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 855:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIKERON);
ARM GAS  /tmp/cc0giX7U.s 			page 166


 856:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 857:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 858:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 859:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI Divider (it divides by 4)
 860:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIDIVEN       LL_RCC_HSI_EnableDivider
 861:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 862:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 863:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableDivider(void)
 864:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 865:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIDIVEN);
 866:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 867:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 868:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 869:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI Divider (it divides by 4)
 870:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIDIVEN       LL_RCC_HSI_DisableDivider
 871:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 872:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 873:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableDivider(void)
 874:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 875:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIDIVEN);
 876:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 877:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 878:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 879:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 880:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CR_HSIOUTEN)
 881:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 882:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI Output
 883:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIOUTEN       LL_RCC_HSI_EnableOutput
 884:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 885:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 886:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_EnableOutput(void)
 887:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 888:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 889:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 890:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 891:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 892:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI Output
 893:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           HSIOUTEN       LL_RCC_HSI_DisableOutput
 894:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 895:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 896:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_DisableOutput(void)
 897:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 898:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 899:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 900:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_CR_HSIOUTEN */
 901:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 902:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 903:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get HSI Calibration value
 904:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note When HSITRIM is written, HSICAL is updated with the sum of
 905:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       HSITRIM and the factory trim value
 906:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        HSICAL        LL_RCC_HSI_GetCalibration
 907:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 908:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 909:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibration(void)
 910:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 911:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSICAL) >> RCC_POSITION_HSICAL);
 912:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
ARM GAS  /tmp/cc0giX7U.s 			page 167


 913:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 914:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 915:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set HSI Calibration trimming
 916:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the HSICAL
 917:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note Default value is 16, which, when added to the HSICAL value,
 918:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       should trim the HSI to 16 MHz +/- 1 %
 919:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_SetCalibTrimming
 920:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0x1F
 921:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 922:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 923:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI_SetCalibTrimming(uint32_t Value)
 924:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 925:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_HSITRIM, Value << RCC_POSITION_HSITRIM);
 926:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 927:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 928:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 929:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get HSI Calibration trimming
 930:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        HSITRIM       LL_RCC_HSI_GetCalibTrimming
 931:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0x1F
 932:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 933:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI_GetCalibTrimming(void)
 934:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 935:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_POSITION_HSITRIM);
 936:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 937:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 938:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 939:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
 940:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 941:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 942:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_HSI48_SUPPORT)
 943:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_HSI48 HSI48
 944:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
 945:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 946:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 947:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 948:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI48
 949:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Enable
 950:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 951:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 952:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Enable(void)
 953:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 954:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
 955:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 956:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 957:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 958:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI48
 959:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48ON       LL_RCC_HSI48_Disable
 960:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 961:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 962:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_Disable(void)
 963:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 964:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON);
 965:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 966:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 967:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 968:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSI48 oscillator Ready
 969:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48RDY      LL_RCC_HSI48_IsReady
ARM GAS  /tmp/cc0giX7U.s 			page 168


 970:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
 971:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 972:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsReady(void)
 973:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 974:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == (RCC_CRRCR_HSI48RDY));
 975:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 976:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 977:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 978:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get HSI48 Calibration value
 979:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR          HSI48CAL      LL_RCC_HSI48_GetCalibration
 980:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
 981:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 982:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_GetCalibration(void)
 983:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 984:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48CAL) >> RCC_POSITION_HSI48CAL);
 985:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 986:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 987:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #if defined(RCC_CRRCR_HSI48DIV6OUTEN)
 988:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 989:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable HSI48 Divider (it divides by 6)
 990:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR           HSI48DIV6OUTEN       LL_RCC_HSI48_EnableDivider
 991:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
 992:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
 993:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_EnableDivider(void)
 994:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
 995:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CRRCR, RCC_CRRCR_HSI48DIV6OUTEN);
 996:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 997:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
 998:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
 999:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable HSI48 Divider (it divides by 6)
1000:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR           HSI48DIV6OUTEN       LL_RCC_HSI48_DisableDivider
1001:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1002:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1003:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_HSI48_DisableDivider(void)
1004:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1005:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CRRCR, RCC_CRRCR_HSI48DIV6OUTEN);
1006:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1007:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1008:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1009:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if HSI48 Divider is enabled (it divides by 6)
1010:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CRRCR        HSI48DIV6OUTEN        LL_RCC_HSI48_IsDivided
1011:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1012:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1013:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_HSI48_IsDivided(void)
1014:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1015:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48DIV6OUTEN) == (RCC_CRRCR_HSI48DIV6OUTEN));
1016:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1017:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1018:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /*RCC_CRRCR_HSI48DIV6OUTEN*/
1019:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1020:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1021:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1022:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1023:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1024:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** #endif /* RCC_HSI48_SUPPORT */
1025:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1026:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSE LSE
ARM GAS  /tmp/cc0giX7U.s 			page 169


1027:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1028:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1029:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1030:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1031:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable  Low Speed External (LSE) crystal.
1032:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEON         LL_RCC_LSE_Enable
1033:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1034:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1035:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Enable(void)
1036:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1037:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSEON);
1038:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1039:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1040:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1041:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable  Low Speed External (LSE) crystal.
1042:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEON         LL_RCC_LSE_Disable
1043:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1044:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1045:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_Disable(void)
1046:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1047:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSEON);
1048:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1049:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1050:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1051:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable external clock source (LSE bypass).
1052:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEBYP        LL_RCC_LSE_EnableBypass
1053:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1054:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1055:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
1056:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1057:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSEBYP);
1058:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1059:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1060:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1061:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable external clock source (LSE bypass).
1062:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEBYP        LL_RCC_LSE_DisableBypass
1063:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1064:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1065:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
1066:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1067:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSEBYP);
1068:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1069:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1070:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1071:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set LSE oscillator drive capability
1072:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note The oscillator is in Xtal mode when it is not in bypass mode.
1073:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEDRV        LL_RCC_LSE_SetDriveCapability
1074:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  LSEDrive This parameter can be one of the following values:
1075:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1076:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1077:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1078:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1079:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1080:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1081:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
1082:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1083:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CSR, RCC_CSR_LSEDRV, LSEDrive);
ARM GAS  /tmp/cc0giX7U.s 			page 170


1084:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1085:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1086:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1087:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get LSE oscillator drive capability
1088:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSEDRV        LL_RCC_LSE_GetDriveCapability
1089:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1090:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_LOW
1091:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMLOW
1092:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
1093:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_LSEDRIVE_HIGH
1094:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1095:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_GetDriveCapability(void)
1096:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1097:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CSR, RCC_CSR_LSEDRV));
1098:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1099:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable Clock security system on LSE.
1102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSECSSON      LL_RCC_LSE_EnableCSS
1103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_EnableCSS(void)
1106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSECSSON);
1108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable Clock security system on LSE.
1112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note   Clock security system can be disabled only after a LSE
1113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         failure detection. In that case it MUST be disabled by software.
1114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSECSSON      LL_RCC_LSE_DisableCSS
1115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSE_DisableCSS(void)
1118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSECSSON);
1120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if LSE oscillator Ready
1124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSERDY        LL_RCC_LSE_IsReady
1125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
1128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSERDY) == (RCC_CSR_LSERDY));
1130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if CSS on LSE failure Detection
1134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR         LSECSSD       LL_RCC_LSE_IsCSSDetected
1135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSE_IsCSSDetected(void)
1138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSECSSD) == (RCC_CSR_LSECSSD));
1140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
ARM GAS  /tmp/cc0giX7U.s 			page 171


1141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_LSI LSI
1147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable LSI Oscillator
1152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Enable
1153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Enable(void)
1156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CSR, RCC_CSR_LSION);
1158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable LSI Oscillator
1162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSION         LL_RCC_LSI_Disable
1163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_LSI_Disable(void)
1166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CSR, RCC_CSR_LSION);
1168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if LSI is Ready
1172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CSR          LSIRDY        LL_RCC_LSI_IsReady
1173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
1176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == (RCC_CSR_LSIRDY));
1178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MSI MSI
1185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Enable MSI oscillator
1190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           MSION         LL_RCC_MSI_Enable
1191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_Enable(void)
1194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   SET_BIT(RCC->CR, RCC_CR_MSION);
 724              		.loc 9 1195 0
 725 0022 264A     		ldr	r2, .L20+12
ARM GAS  /tmp/cc0giX7U.s 			page 172


 726 0024 1168     		ldr	r1, [r2]
 727 0026 8023     		movs	r3, #128
 728 0028 5B00     		lsls	r3, r3, #1
 729 002a 0B43     		orrs	r3, r1
 730 002c 1360     		str	r3, [r2]
 731              	.L17:
 732              	.LBE167:
 733              	.LBE166:
 734              	.LBB168:
 735              	.LBB169:
1196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Disable MSI oscillator
1200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           MSION         LL_RCC_MSI_Disable
1201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_Disable(void)
1204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   CLEAR_BIT(RCC->CR, RCC_CR_MSION);
1206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Check if MSI oscillator Ready
1210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CR           MSIRDY        LL_RCC_MSI_IsReady
1211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval State of bit (1 or 0).
1212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_IsReady(void)
1214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (READ_BIT(RCC->CR, RCC_CR_MSIRDY) == (RCC_CR_MSIRDY));
 736              		.loc 9 1215 0 discriminator 1
 737 002e 234B     		ldr	r3, .L20+12
 738 0030 1B68     		ldr	r3, [r3]
 739              	.LBE169:
 740              	.LBE168:
 157:Src/main.c    ****   {
 741              		.loc 1 157 0 discriminator 1
 742 0032 9B05     		lsls	r3, r3, #22
 743 0034 FBD5     		bpl	.L17
 744              	.LVL45:
 745              	.LBB170:
 746              	.LBB171:
1216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure the Internal Multi Speed oscillator (MSI) clock range in run mode.
1220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR           MSIRANGE      LL_RCC_MSI_SetRange
1221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Range This parameter can be one of the following values:
1222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
1223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
1224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
1225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
1226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
1227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
1228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
1229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
ARM GAS  /tmp/cc0giX7U.s 			page 173


1231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_SetRange(uint32_t Range)
1232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_MSIRANGE, Range);
 747              		.loc 9 1233 0
 748 0036 214B     		ldr	r3, .L20+12
 749 0038 5A68     		ldr	r2, [r3, #4]
 750 003a 2149     		ldr	r1, .L20+16
 751 003c 1140     		ands	r1, r2
 752 003e C022     		movs	r2, #192
 753 0040 1202     		lsls	r2, r2, #8
 754 0042 0A43     		orrs	r2, r1
 755 0044 5A60     		str	r2, [r3, #4]
 756              	.LVL46:
 757              	.LBE171:
 758              	.LBE170:
 759              	.LBB172:
 760              	.LBB173:
1234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get the Internal Multi Speed oscillator (MSI) clock range in run mode.
1238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR           MSIRANGE      LL_RCC_MSI_GetRange
1239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_0
1241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_1
1242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_2
1243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_3
1244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_4
1245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_5
1246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MSIRANGE_6
1247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetRange(void)
1249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSIRANGE));
1251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1253:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1254:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get MSI Calibration value
1255:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note When MSITRIM is written, MSICAL is updated with the sum of
1256:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *       MSITRIM and the factory trim value
1257:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        MSICAL        LL_RCC_MSI_GetCalibration
1258:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
1259:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1260:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetCalibration(void)
1261:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1262:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSICAL) >> RCC_POSITION_MSICAL);
1263:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1264:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1265:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1266:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set MSI Calibration trimming
1267:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @note user-programmable trimming value that is added to the MSICAL
1268:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        MSITRIM       LL_RCC_MSI_SetCalibTrimming
1269:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Value between Min_Data = 0x00 and Max_Data = 0xFF
1270:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1271:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1272:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_MSI_SetCalibTrimming(uint32_t Value)
1273:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 174


1274:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->ICSCR, RCC_ICSCR_MSITRIM, Value << RCC_POSITION_MSITRIM);
 761              		.loc 9 1274 0
 762 0046 5A68     		ldr	r2, [r3, #4]
 763 0048 1202     		lsls	r2, r2, #8
 764 004a 120A     		lsrs	r2, r2, #8
 765 004c 5A60     		str	r2, [r3, #4]
 766              	.LVL47:
 767              	.LBE173:
 768              	.LBE172:
 769              	.LBB174:
 770              	.LBB175:
1275:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1276:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1277:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1278:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get MSI Calibration trimming
1279:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll ICSCR        MSITRIM       LL_RCC_MSI_GetCalibTrimming
1280:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Between Min_Data = 0x00 and Max_Data = 0xFF
1281:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1282:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_MSI_GetCalibTrimming(void)
1283:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1284:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->ICSCR, RCC_ICSCR_MSITRIM) >> RCC_POSITION_MSITRIM);
1285:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1286:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1287:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1288:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1289:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1290:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1291:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_System System
1292:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1293:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1294:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1295:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1296:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure the system clock source
1297:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         SW            LL_RCC_SetSysClkSource
1298:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Source This parameter can be one of the following values:
1299:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_MSI
1300:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSI
1301:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_HSE
1302:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_PLL
1303:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1304:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1305:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetSysClkSource(uint32_t Source)
1306:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, Source);
1308:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1309:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1310:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1311:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get the system clock source
1312:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         SWS           LL_RCC_GetSysClkSource
1313:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1314:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_MSI
1315:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSI
1316:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_HSE
1317:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYS_CLKSOURCE_STATUS_PLL
1318:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1319:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetSysClkSource(void)
1320:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
ARM GAS  /tmp/cc0giX7U.s 			page 175


1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SWS));
1322:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1323:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1324:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1325:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set AHB prescaler
1326:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_SetAHBPrescaler
1327:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1328:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1329:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1330:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1331:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1332:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1333:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1334:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1335:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1336:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1337:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1338:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1339:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAHBPrescaler(uint32_t Prescaler)
1340:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1341:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, Prescaler);
 771              		.loc 9 1341 0
 772 004e DA68     		ldr	r2, [r3, #12]
 773 0050 F021     		movs	r1, #240
 774 0052 8A43     		bics	r2, r1
 775 0054 DA60     		str	r2, [r3, #12]
 776              	.LVL48:
 777              	.LBE175:
 778              	.LBE174:
 779              	.LBB176:
 780              	.LBB177:
1342:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1343:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1344:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1345:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set APB1 prescaler
1346:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_SetAPB1Prescaler
1347:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1348:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1349:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1350:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1351:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1352:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1353:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1354:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1355:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB1Prescaler(uint32_t Prescaler)
1356:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1357:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, Prescaler);
 781              		.loc 9 1357 0
 782 0056 DA68     		ldr	r2, [r3, #12]
 783 0058 1A49     		ldr	r1, .L20+20
 784 005a 0A40     		ands	r2, r1
 785 005c DA60     		str	r2, [r3, #12]
 786              	.LVL49:
 787              	.LBE177:
 788              	.LBE176:
 789              	.LBB178:
 790              	.LBB179:
ARM GAS  /tmp/cc0giX7U.s 			page 176


1358:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1359:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1360:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1361:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set APB2 prescaler
1362:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_SetAPB2Prescaler
1363:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Prescaler This parameter can be one of the following values:
1364:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1365:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1366:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1367:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1368:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1369:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1370:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1371:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetAPB2Prescaler(uint32_t Prescaler)
1372:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1373:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, Prescaler);
 791              		.loc 9 1373 0
 792 005e DA68     		ldr	r2, [r3, #12]
 793 0060 1949     		ldr	r1, .L20+24
 794 0062 0A40     		ands	r2, r1
 795 0064 DA60     		str	r2, [r3, #12]
 796              	.LVL50:
 797              	.LBE179:
 798              	.LBE178:
 799              	.LBB180:
 800              	.LBB181:
1307:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 801              		.loc 9 1307 0
 802 0066 DA68     		ldr	r2, [r3, #12]
 803 0068 0321     		movs	r1, #3
 804 006a 8A43     		bics	r2, r1
 805 006c DA60     		str	r2, [r3, #12]
 806              	.L18:
 807              	.LBE181:
 808              	.LBE180:
 809              	.LBB182:
 810              	.LBB183:
1321:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
 811              		.loc 9 1321 0 discriminator 1
 812 006e 134B     		ldr	r3, .L20+12
 813 0070 DB68     		ldr	r3, [r3, #12]
 814 0072 0C22     		movs	r2, #12
 815              	.LBE183:
 816              	.LBE182:
 174:Src/main.c    ****   {
 817              		.loc 1 174 0 discriminator 1
 818 0074 1A42     		tst	r2, r3
 819 0076 FAD1     		bne	.L18
 178:Src/main.c    **** 
 820              		.loc 1 178 0
 821 0078 144C     		ldr	r4, .L20+28
 822 007a 2000     		movs	r0, r4
 823 007c FFF7FEFF 		bl	LL_Init1msTick
 824              	.LVL51:
 825              	.LBB184:
 826              	.LBB185:
 827              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h"
ARM GAS  /tmp/cc0giX7U.s 			page 177


   1:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @file    stm32l0xx_ll_cortex.h
   4:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @brief   Header file of CORTEX LL module.
   6:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   @verbatim
   7:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ==============================================================================
   8:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****                      ##### How to use this driver #####
   9:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****     [..]
  11:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****     The LL CORTEX driver contains a set of generic APIs that can be
  12:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****     used by user:
  13:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) SYSTICK configuration used by @ref LL_mDelay and @ref LL_Init1msTick
  14:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****           functions
  15:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) Low power mode configuration (SCB register of Cortex-MCU)
  16:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) MPU API to configure and enable regions
  17:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****       (+) API to access to MCU info (CPUID register)
  18:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  19:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   @endverbatim
  20:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ******************************************************************************
  21:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @attention
  22:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  23:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  24:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  25:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * Redistribution and use in source and binary forms, with or without modification,
  26:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * are permitted provided that the following conditions are met:
  27:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *   1. Redistributions of source code must retain the above copyright notice,
  28:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer.
  29:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  30:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      this list of conditions and the following disclaimer in the documentation
  31:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      and/or other materials provided with the distribution.
  32:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  33:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      may be used to endorse or promote products derived from this software
  34:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *      without specific prior written permission.
  35:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  36:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  37:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  38:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  39:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  40:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  41:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  42:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  43:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  44:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  45:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *
  47:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   ******************************************************************************
  48:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  49:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  50:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  51:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #ifndef __STM32L0xx_LL_CORTEX_H
  52:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define __STM32L0xx_LL_CORTEX_H
  53:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  54:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #ifdef __cplusplus
  55:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** extern "C" {
  56:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #endif
  57:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 178


  58:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Includes ------------------------------------------------------------------*/
  59:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #include "stm32l0xx.h"
  60:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  61:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @addtogroup STM32L0xx_LL_Driver
  62:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  63:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  64:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  65:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL CORTEX
  66:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  67:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  68:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  69:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private types -------------------------------------------------------------*/
  70:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private variables ---------------------------------------------------------*/
  71:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  72:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private constants ---------------------------------------------------------*/
  73:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  74:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Private macros ------------------------------------------------------------*/
  75:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  76:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported types ------------------------------------------------------------*/
  77:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported constants --------------------------------------------------------*/
  78:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Constants CORTEX Exported Constants
  79:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  80:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  81:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  82:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CLKSOURCE_HCLK SYSTICK Clock Source
  83:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  84:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  85:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK_DIV8     ((uint32_t)0x00000000U)                 /*!< AHB clock d
  86:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_SYSTICK_CLKSOURCE_HCLK          ((uint32_t)SysTick_CTRL_CLKSOURCE_Msk) /*!< AHB clock se
  87:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
  88:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
  89:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  90:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  91:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #if __MPU_PRESENT
  92:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
  93:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CTRL_HFNMI_PRIVDEF MPU Control
  94:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
  95:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
  96:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF_NONE     ((uint32_t)0x00000000U)                            /*!< 
  97:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_HARDFAULT_NMI          MPU_CTRL_HFNMIENA_Msk                             /*!< E
  98:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_PRIVILEGED_DEFAULT     MPU_CTRL_PRIVDEFENA_Msk                           /*!< E
  99:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_CTRL_HFNMI_PRIVDEF          (MPU_CTRL_HFNMIENA_Msk | MPU_CTRL_PRIVDEFENA_Msk) /*!< E
 100:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 101:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 102:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 103:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 104:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION MPU Region Number
 105:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 106:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 107:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER0              ((uint32_t)0x00U) /*!< REGION Number 0 */
 108:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER1              ((uint32_t)0x01U) /*!< REGION Number 1 */
 109:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER2              ((uint32_t)0x02U) /*!< REGION Number 2 */
 110:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER3              ((uint32_t)0x03U) /*!< REGION Number 3 */
 111:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER4              ((uint32_t)0x04U) /*!< REGION Number 4 */
 112:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER5              ((uint32_t)0x05U) /*!< REGION Number 5 */
 113:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER6              ((uint32_t)0x06U) /*!< REGION Number 6 */
 114:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NUMBER7              ((uint32_t)0x07U) /*!< REGION Number 7 */
ARM GAS  /tmp/cc0giX7U.s 			page 179


 115:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 116:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 117:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 118:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 119:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_SIZE MPU Region Size
 120:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 121:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 122:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32B             ((uint32_t)(0x04U << MPU_RASR_SIZE_Pos)) /*!< 32B Size o
 123:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64B             ((uint32_t)(0x05U << MPU_RASR_SIZE_Pos)) /*!< 64B Size o
 124:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128B            ((uint32_t)(0x06U << MPU_RASR_SIZE_Pos)) /*!< 128B Size 
 125:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256B            ((uint32_t)(0x07U << MPU_RASR_SIZE_Pos)) /*!< 256B Size 
 126:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512B            ((uint32_t)(0x08U << MPU_RASR_SIZE_Pos)) /*!< 512B Size 
 127:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1KB             ((uint32_t)(0x09U << MPU_RASR_SIZE_Pos)) /*!< 1KB Size o
 128:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2KB             ((uint32_t)(0x0AU << MPU_RASR_SIZE_Pos)) /*!< 2KB Size o
 129:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4KB             ((uint32_t)(0x0BU << MPU_RASR_SIZE_Pos)) /*!< 4KB Size o
 130:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8KB             ((uint32_t)(0x0CU << MPU_RASR_SIZE_Pos)) /*!< 8KB Size o
 131:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16KB            ((uint32_t)(0x0DU << MPU_RASR_SIZE_Pos)) /*!< 16KB Size 
 132:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32KB            ((uint32_t)(0x0EU << MPU_RASR_SIZE_Pos)) /*!< 32KB Size 
 133:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64KB            ((uint32_t)(0x0FU << MPU_RASR_SIZE_Pos)) /*!< 64KB Size 
 134:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128KB           ((uint32_t)(0x10U << MPU_RASR_SIZE_Pos)) /*!< 128KB Size
 135:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256KB           ((uint32_t)(0x11U << MPU_RASR_SIZE_Pos)) /*!< 256KB Size
 136:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512KB           ((uint32_t)(0x12U << MPU_RASR_SIZE_Pos)) /*!< 512KB Size
 137:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1MB             ((uint32_t)(0x13U << MPU_RASR_SIZE_Pos)) /*!< 1MB Size o
 138:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2MB             ((uint32_t)(0x14U << MPU_RASR_SIZE_Pos)) /*!< 2MB Size o
 139:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4MB             ((uint32_t)(0x15U << MPU_RASR_SIZE_Pos)) /*!< 4MB Size o
 140:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_8MB             ((uint32_t)(0x16U << MPU_RASR_SIZE_Pos)) /*!< 8MB Size o
 141:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_16MB            ((uint32_t)(0x17U << MPU_RASR_SIZE_Pos)) /*!< 16MB Size 
 142:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_32MB            ((uint32_t)(0x18U << MPU_RASR_SIZE_Pos)) /*!< 32MB Size 
 143:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_64MB            ((uint32_t)(0x19U << MPU_RASR_SIZE_Pos)) /*!< 64MB Size 
 144:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_128MB           ((uint32_t)(0x1AU << MPU_RASR_SIZE_Pos)) /*!< 128MB Size
 145:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_256MB           ((uint32_t)(0x1BU << MPU_RASR_SIZE_Pos)) /*!< 256MB Size
 146:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_512MB           ((uint32_t)(0x1CU << MPU_RASR_SIZE_Pos)) /*!< 512MB Size
 147:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_1GB             ((uint32_t)(0x1DU << MPU_RASR_SIZE_Pos)) /*!< 1GB Size o
 148:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_2GB             ((uint32_t)(0x1EU << MPU_RASR_SIZE_Pos)) /*!< 2GB Size o
 149:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_SIZE_4GB             ((uint32_t)(0x1FU << MPU_RASR_SIZE_Pos)) /*!< 4GB Size o
 150:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 151:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 152:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 153:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 154:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_REGION_PRIVILEDGES MPU Region Privileges
 155:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 156:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 157:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_NO_ACCESS            ((uint32_t)(0x00U << MPU_RASR_AP_Pos)) /*!< No access*/
 158:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW              ((uint32_t)(0x01U << MPU_RASR_AP_Pos)) /*!< RW privilege
 159:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RW_URO          ((uint32_t)(0x02U << MPU_RASR_AP_Pos)) /*!< RW privilege
 160:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_FULL_ACCESS          ((uint32_t)(0x03U << MPU_RASR_AP_Pos)) /*!< RW privilege
 161:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO              ((uint32_t)(0x05U << MPU_RASR_AP_Pos)) /*!< RO privilege
 162:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_REGION_PRIV_RO_URO          ((uint32_t)(0x06U << MPU_RASR_AP_Pos)) /*!< RO privilege
 163:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 164:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 165:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 166:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 167:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_TEX MPU TEX Level
 168:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 169:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 170:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL0                  ((uint32_t)(0x00U << MPU_RASR_TEX_Pos)) /*!< b000 for TE
 171:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL1                  ((uint32_t)(0x01U << MPU_RASR_TEX_Pos)) /*!< b001 for TE
ARM GAS  /tmp/cc0giX7U.s 			page 180


 172:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL2                  ((uint32_t)(0x02U << MPU_RASR_TEX_Pos)) /*!< b010 for TE
 173:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_TEX_LEVEL4                  ((uint32_t)(0x04U << MPU_RASR_TEX_Pos)) /*!< b100 for TE
 174:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 175:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 176:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 177:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 178:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_INSTRUCTION_ACCESS MPU Instruction Access
 179:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 180:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 181:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_ENABLE   ((uint32_t)0x00U) /*!< Instruction fetches enabled */
 182:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_INSTRUCTION_ACCESS_DISABLE  MPU_RASR_XN_Msk  /*!< Instruction fetches disabled*/
 183:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 184:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 185:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 186:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 187:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_SHAREABLE_ACCESS MPU Shareable Access
 188:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 189:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 190:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_SHAREABLE            MPU_RASR_S_Msk   /*!< Shareable memory attribute */
 191:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_SHAREABLE        ((uint32_t)0x00U) /*!< Not Shareable memory attribute */
 192:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 193:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 194:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 195:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 196:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_CACHEABLE_ACCESS MPU Cacheable Access
 197:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 198:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 199:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_CACHEABLE            MPU_RASR_C_Msk   /*!< Cacheable memory attribute */
 200:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_CACHEABLE        ((uint32_t)0x00U) /*!< Not Cacheable memory attribute */
 201:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 202:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 203:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 204:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 205:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EC_BUFFERABLE_ACCESS MPU Bufferable Access
 206:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 207:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 208:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_BUFFERABLE           MPU_RASR_B_Msk   /*!< Bufferable memory attribute */
 209:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #define LL_MPU_ACCESS_NOT_BUFFERABLE       ((uint32_t)0x00U) /*!< Not Bufferable memory attribute *
 210:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 211:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 212:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** #endif /* __MPU_PRESENT */
 214:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 215:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @}
 216:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 217:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 218:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported macro ------------------------------------------------------------*/
 219:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 220:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /* Exported functions --------------------------------------------------------*/
 221:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_Exported_Functions CORTEX Exported Functions
 222:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 223:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 224:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 225:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /** @defgroup CORTEX_LL_EF_SYSTICK SYSTICK
 226:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @{
 227:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 228:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
ARM GAS  /tmp/cc0giX7U.s 			page 181


 229:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 230:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @brief  This function checks if the Systick counter flag is active or not.
 231:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @note   It can be used in timeout function on application side.
 232:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @rmtoll STK_CTRL     COUNTFLAG     LL_SYSTICK_IsActiveCounterFlag
 233:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @retval State of bit (1 or 0).
 234:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 235:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** __STATIC_INLINE uint32_t LL_SYSTICK_IsActiveCounterFlag(void)
 236:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** {
 237:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   return ((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == (SysTick_CTRL_COUNTFLAG_Msk));
 238:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** }
 239:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** 
 240:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** /**
 241:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @brief  Configures the SysTick clock source
 242:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @rmtoll STK_CTRL     CLKSOURCE     LL_SYSTICK_SetClkSource
 243:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @param  Source This parameter can be one of the following values:
 244:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK_DIV8
 245:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   *         @arg @ref LL_SYSTICK_CLKSOURCE_HCLK
 246:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   * @retval None
 247:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   */
 248:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** __STATIC_INLINE void LL_SYSTICK_SetClkSource(uint32_t Source)
 249:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h **** {
 250:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   if (Source == LL_SYSTICK_CLKSOURCE_HCLK)
 251:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****   {
 252:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_cortex.h ****     SET_BIT(SysTick->CTRL, LL_SYSTICK_CLKSOURCE_HCLK);
 828              		.loc 10 252 0
 829 0080 134A     		ldr	r2, .L20+32
 830 0082 1368     		ldr	r3, [r2]
 831 0084 0421     		movs	r1, #4
 832 0086 0B43     		orrs	r3, r1
 833 0088 1360     		str	r3, [r2]
 834              	.LVL52:
 835              	.LBE185:
 836              	.LBE184:
 182:Src/main.c    **** 
 837              		.loc 1 182 0
 838 008a 2000     		movs	r0, r4
 839 008c FFF7FEFF 		bl	LL_SetSystemCoreClock
 840              	.LVL53:
 841              	.LBB186:
 842              	.LBB187:
1374:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1375:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1376:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1377:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get AHB prescaler
1378:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         HPRE          LL_RCC_GetAHBPrescaler
1379:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1380:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_1
1381:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_2
1382:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_4
1383:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_8
1384:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_16
1385:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_64
1386:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_128
1387:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_256
1388:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_SYSCLK_DIV_512
1389:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1390:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAHBPrescaler(void)
ARM GAS  /tmp/cc0giX7U.s 			page 182


1391:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1392:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_HPRE));
1393:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1394:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1395:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1396:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get APB1 prescaler
1397:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE1         LL_RCC_GetAPB1Prescaler
1398:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1399:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_1
1400:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_2
1401:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_4
1402:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_8
1403:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB1_DIV_16
1404:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1405:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB1Prescaler(void)
1406:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1407:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1));
1408:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1409:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1410:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1411:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get APB2 prescaler
1412:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         PPRE2         LL_RCC_GetAPB2Prescaler
1413:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1414:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_1
1415:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_2
1416:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_4
1417:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_8
1418:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_APB2_DIV_16
1419:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1420:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetAPB2Prescaler(void)
1421:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1422:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2));
1423:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1424:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1425:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1426:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Set Clock After Wake-Up From Stop mode
1427:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         STOPWUCK      LL_RCC_SetClkAfterWakeFromStop
1428:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  Clock This parameter can be one of the following values:
1429:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_MSI
1430:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_HSI
1431:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1432:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1433:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetClkAfterWakeFromStop(uint32_t Clock)
1434:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1435:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_STOPWUCK, Clock);
1436:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1437:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1438:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1439:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Get Clock After Wake-Up From Stop mode
1440:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         STOPWUCK      LL_RCC_GetClkAfterWakeFromStop
1441:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval Returned value can be one of the following values:
1442:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_MSI
1443:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_STOP_WAKEUPCLOCK_HSI
1444:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1445:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE uint32_t LL_RCC_GetClkAfterWakeFromStop(void)
1446:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1447:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_STOPWUCK));
ARM GAS  /tmp/cc0giX7U.s 			page 183


1448:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1449:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1450:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1451:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1452:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1453:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1454:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_MCO MCO
1455:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1456:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1457:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1458:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1459:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure MCOx
1460:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CFGR         MCOSEL        LL_RCC_ConfigMCO\n
1461:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         CFGR         MCOPRE        LL_RCC_ConfigMCO
1462:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  MCOxSource This parameter can be one of the following values:
1463:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_NOCLOCK
1464:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_SYSCLK
1465:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI
1466:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_MSI
1467:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSE
1468:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_PLLCLK
1469:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSI
1470:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_LSE
1471:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1SOURCE_HSI48 (*)
1472:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
1473:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1474:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  MCOxPrescaler This parameter can be one of the following values:
1475:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_1
1476:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_2
1477:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_4
1478:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_8
1479:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_MCO1_DIV_16
1480:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1481:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1482:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_ConfigMCO(uint32_t MCOxSource, uint32_t MCOxPrescaler)
1483:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1484:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CFGR, RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE, MCOxSource | MCOxPrescaler);
1485:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** }
1486:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1487:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1488:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @}
1489:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1490:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1491:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /** @defgroup RCC_LL_EF_Peripheral_Clock_Source Peripheral Clock Source
1492:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @{
1493:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1494:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** 
1495:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** /**
1496:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @brief  Configure USARTx clock source
1497:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @rmtoll CCIPR        USARTxSEL     LL_RCC_SetUSARTClockSource
1498:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @param  USARTxSource This parameter can be one of the following values:
1499:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_PCLK2 (*)
1500:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_SYSCLK (*)
1501:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_HSI (*)
1502:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART1_CLKSOURCE_LSE (*)
1503:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_PCLK1
1504:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_SYSCLK
ARM GAS  /tmp/cc0giX7U.s 			page 184


1505:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_HSI
1506:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         @arg @ref LL_RCC_USART2_CLKSOURCE_LSE
1507:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *
1508:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   *         (*) value not defined in all devices.
1509:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   * @retval None
1510:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   */
1511:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** __STATIC_INLINE void LL_RCC_SetUSARTClockSource(uint32_t USARTxSource)
1512:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h **** {
1513:Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_rcc.h ****   MODIFY_REG(RCC->CCIPR, (USARTxSource >> 16U), (USARTxSource & 0x0000FFFFU));
 843              		.loc 9 1513 0
 844 0090 0A4A     		ldr	r2, .L20+12
 845 0092 D36C     		ldr	r3, [r2, #76]
 846 0094 0C21     		movs	r1, #12
 847 0096 8B43     		bics	r3, r1
 848 0098 D364     		str	r3, [r2, #76]
 849              	.LVL54:
 850              	.LBE187:
 851              	.LBE186:
 852              	.LBB188:
 853              	.LBB189:
 808:Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 854              		.loc 3 808 0
 855 009a 0E4A     		ldr	r2, .L20+36
 856 009c 136A     		ldr	r3, [r2, #32]
 857 009e 1B02     		lsls	r3, r3, #8
 858 00a0 1B0A     		lsrs	r3, r3, #8
 859 00a2 1362     		str	r3, [r2, #32]
 860              	.LVL55:
 861              	.LBE189:
 862              	.LBE188:
 188:Src/main.c    **** 
 863              		.loc 1 188 0
 864              		@ sp needed
 865 00a4 10BD     		pop	{r4, pc}
 866              	.LVL56:
 867              	.L19:
 150:Src/main.c    ****   }
 868              		.loc 1 150 0
 869 00a6 9531     		adds	r1, r1, #149
 870 00a8 0B48     		ldr	r0, .L20+40
 871 00aa FFF7FEFF 		bl	_Error_Handler
 872              	.LVL57:
 873              	.L21:
 874 00ae C046     		.align	2
 875              	.L20:
 876 00b0 00200240 		.word	1073881088
 877 00b4 00700040 		.word	1073770496
 878 00b8 FFE7FFFF 		.word	-6145
 879 00bc 00100240 		.word	1073876992
 880 00c0 FF1FFFFF 		.word	-57345
 881 00c4 FFF8FFFF 		.word	-1793
 882 00c8 FFC7FFFF 		.word	-14337
 883 00cc D0FE3F00 		.word	4194000
 884 00d0 10E000E0 		.word	-536813552
 885 00d4 00ED00E0 		.word	-536810240
 886 00d8 00000000 		.word	.LC0
 887              		.cfi_endproc
ARM GAS  /tmp/cc0giX7U.s 			page 185


 888              	.LFE622:
 890              		.section	.text.main,"ax",%progbits
 891              		.align	1
 892              		.global	main
 893              		.syntax unified
 894              		.code	16
 895              		.thumb_func
 896              		.fpu softvfp
 898              	main:
 899              	.LFB620:
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
 900              		.loc 1 77 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904 0000 10B5     		push	{r4, lr}
 905              	.LCFI8:
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 4, -8
 908              		.cfi_offset 14, -4
  85:Src/main.c    **** 
 909              		.loc 1 85 0
 910 0002 FFF7FEFF 		bl	LL_Init
 911              	.LVL58:
  92:Src/main.c    **** 
 912              		.loc 1 92 0
 913 0006 FFF7FEFF 		bl	SystemClock_Config
 914              	.LVL59:
  99:Src/main.c    ****   MX_DMA_Init();
 915              		.loc 1 99 0
 916 000a FFF7FEFF 		bl	MX_GPIO_Init
 917              	.LVL60:
 100:Src/main.c    ****   MX_USART2_UART_Init();
 918              		.loc 1 100 0
 919 000e FFF7FEFF 		bl	MX_DMA_Init
 920              	.LVL61:
 101:Src/main.c    ****   /* USER CODE BEGIN 2 */
 921              		.loc 1 101 0
 922 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 923              	.LVL62:
 103:Src/main.c    ****   tfp_printf ("tfp_printf testing..!!\n");
 924              		.loc 1 103 0
 925 0016 FFF7FEFF 		bl	uart_print_init
 926              	.LVL63:
 104:Src/main.c    ****   uint32_t a = 100;
 927              		.loc 1 104 0
 928 001a 0448     		ldr	r0, .L24
 929 001c FFF7FEFF 		bl	tfp_printf
 930              	.LVL64:
 106:Src/main.c    ****   /* USER CODE END 2 */
 931              		.loc 1 106 0
 932 0020 6422     		movs	r2, #100
 933 0022 6421     		movs	r1, #100
 934 0024 0248     		ldr	r0, .L24+4
 935 0026 FFF7FEFF 		bl	tfp_printf
 936              	.LVL65:
 937              	.L23:
ARM GAS  /tmp/cc0giX7U.s 			page 186


 938 002a FEE7     		b	.L23
 939              	.L25:
 940              		.align	2
 941              	.L24:
 942 002c 00000000 		.word	.LC2
 943 0030 18000000 		.word	.LC4
 944              		.cfi_endproc
 945              	.LFE620:
 947              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 948              		.align	2
 949              	.LC0:
 950 0000 5372632F 		.ascii	"Src/main.c\000"
 950      6D61696E 
 950      2E6300
 951              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 952              		.align	2
 953              	.LC2:
 954 0000 7466705F 		.ascii	"tfp_printf testing..!!\012\000"
 954      7072696E 
 954      74662074 
 954      65737469 
 954      6E672E2E 
 955              	.LC4:
 956 0018 496E7420 		.ascii	"Int : %d, Hex : %04x\012\000"
 956      3A202564 
 956      2C204865 
 956      78203A20 
 956      25303478 
 957              		.text
 958              	.Letext0:
 959              		.file 11 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 960              		.file 12 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/machine/_default_typ
 961              		.file 13 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_stdint.h"
 962              		.file 14 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 963              		.file 15 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/lock.h"
 964              		.file 16 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/_types.h"
 965              		.file 17 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/lib/gcc/arm-none-eabi/6.3.1/include/stddef
 966              		.file 18 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/sys/reent.h"
 967              		.file 19 "/usr/local/gcc-arm-none-eabi-6-2017-q2-update/arm-none-eabi/include/stdlib.h"
 968              		.file 20 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_utils.h"
 969              		.file 21 "Inc/tinyprintf.h"
ARM GAS  /tmp/cc0giX7U.s 			page 187


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc0giX7U.s:16     .text.LL_Init:0000000000000000 $t
     /tmp/cc0giX7U.s:22     .text.LL_Init:0000000000000000 LL_Init
     /tmp/cc0giX7U.s:106    .text.LL_Init:0000000000000044 $d
     /tmp/cc0giX7U.s:113    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc0giX7U.s:119    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc0giX7U.s:176    .text.MX_DMA_Init:000000000000002c $d
     /tmp/cc0giX7U.s:183    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc0giX7U.s:189    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc0giX7U.s:284    .text.MX_GPIO_Init:0000000000000054 $d
     /tmp/cc0giX7U.s:290    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc0giX7U.s:296    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc0giX7U.s:627    .text.MX_USART2_UART_Init:000000000000013c $d
     /tmp/cc0giX7U.s:642    .text._Error_Handler:0000000000000000 $t
     /tmp/cc0giX7U.s:649    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/cc0giX7U.s:664    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc0giX7U.s:671    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc0giX7U.s:876    .text.SystemClock_Config:00000000000000b0 $d
     /tmp/cc0giX7U.s:891    .text.main:0000000000000000 $t
     /tmp/cc0giX7U.s:898    .text.main:0000000000000000 main
     /tmp/cc0giX7U.s:942    .text.main:000000000000002c $d
     /tmp/cc0giX7U.s:948    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
     /tmp/cc0giX7U.s:952    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
LL_GPIO_Init
LL_USART_Init
LL_Init1msTick
LL_SetSystemCoreClock
uart_print_init
tfp_printf
